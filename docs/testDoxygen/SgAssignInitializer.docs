//////////////////////////////////////////////////////////////////////////
// Documentation for class SgAssignInitializer
//////////////////////////////////////////////////////////////////////////

/*!
\class SgAssignInitializer
\brief This class represents the rhs of a variable declaration which includes an optional
assignment (e.g. "int x = 1;").  In this case the SgValue ("1") is wrapped in an
SgAssignInitializer.

\todo Double check the accuracy of this description.

\sa
\ref SgAssignInitializer_usage  "Example of using a SgAssignInitializer object"
*/

//////////////////////////////////////////////////////////////////////////
// Documentation for class SgAssignInitializer data members
/////////////////////////////////////////////////////////////////////////

/*!
\var SgAssignInitializer::p_operand_i
\brief This points to the internal SgExpression (right-hand-side expression).

*/

/*!
\var SgAssignInitializer::p_expression_type
\brief This points to the SgType of the rhs expression.

\internal Should this be stored explicitly, it could be obtained from the rhs expression.

*/

//////////////////////////////////////////////////////////////////////////
// Documentation for class SgAssignInitializer member functions (methods)
/////////////////////////////////////////////////////////////////////////

/*
\fn SgAssignInitializer::SgAssignInitializer (const SgAssignInitializer &X)
\brief Copy constructor (made private to prevent being called by accident).
*/

/*!
\fn SgAssignInitializer::SgAssignInitializer ( Sg_File_Info* startOfConstruct = NULL )
\brief This is the constructor.

This constructor builds the SgAssignInitializer base class.

\param startOfConstruct represents the position in the source code
\sa 
\ref SgAssignInitializer_create "Example:create an SgAssignInitializer object"
*/

/*!
\fn SgAssignInitializer::~SgAssignInitializer()
\brief This is the destructor.

Only the Sg_File_Info object can be deleted in this object.
*/

/*!
\fn SgAssignInitializer::isSgAssignInitializer (SgNode *s)
\brief Cast function (from derived class to SgAssignInitializer pointer).

This functions returns a SgAssignInitializer pointer for any input of a 
pointer to an object derived from a SgAssignInitializer.

\return Returns valid pointer to SgAssignInitializer if input is derived from a SgAssignInitializer.
*/

/*!
\fn SgAssignInitializer::isSgAssignInitializer (const SgNode *s)
\brief Cast function (from derived class to SgAssignInitializer pointer).

This functions returns a SgAssignInitializer pointer for any input of a 
pointer to an object derived from a SgAssignInitializer.

\return Returns valid pointer to SgAssignInitializer if input is derived from a SgAssignInitializer.
*/


/*!
\fn SgAssignInitializer::get_operand() const
\brief Returns the rhs.

\return Returns SgExpression.
*/

/*!
\fn SgAssignInitializer::set_operand (SgExpression exp)
\brief This sets the rhs expression.

\param exp - sets value of rhs.
\return Returns void.
*/

