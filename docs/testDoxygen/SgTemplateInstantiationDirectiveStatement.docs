//////////////////////////////////////////////////////////////////////////
// Documentation for class SgTemplateInstantiationDirectiveStatement
//////////////////////////////////////////////////////////////////////////

/*!
\class SgTemplateInstantiationDirectiveStatement
\brief This class represents the concept of a C++ template instantiation directive.

This statement controls the instantiation of template, forcing their explicit
instantiation.  It provides a mechanism to control the instantiation of template,
useful in large projects and libraries.

\internal Currently the declaration representing the class being instantiated is not
traversed.  Likely it should be since this is where the instantiated member functions
are found.  As an instantiation is should be marked as compiler-generated, however it
is explicitly generated by a directive, no information about what forced it to be
instantiated is made available in the AST, though it is not clear that this is needed.

\todo Consider tranversing instantated templates instantiated by an explicit
instanntatiation directive.

\sa
\ref SgTemplateInstantiationDirectiveStatement_usage  "Example of using a SgTemplateInstantiationDirectiveStatement object"
*/


//////////////////////////////////////////////////////////////////////////
// Documentation for class SgTemplateInstantiationDirectiveStatement data members
/////////////////////////////////////////////////////////////////////////

/*! \var SgTemplateInstantiationDirectiveStatement::p_declaration
\brief This pointer points to associated template instantiation declaration meant to be
explicitly instantiated.

Points to either (I think this is a complete list):
     - SgTemplateInstantiationDecl
     - SgTemplateInstantiationFunctionDecl
     - SgTemplateInstantiationMemberFunctionDecl

\internal This is a SgDeclarationStatement so that it can reference a number of different
declaration IR nodes (but not any SgDeclaration, since many don't make sense).

*/

//////////////////////////////////////////////////////////////////////////
// Documentation for class SgTemplateInstantiationDirectiveStatement member functions (methods)
/////////////////////////////////////////////////////////////////////////

/*!
\fn SgTemplateInstantiationDirectiveStatement::SgTemplateInstantiationDirectiveStatement ( Sg_File_Info* startOfConstruct = NULL )
\brief This is the constructor.

This constructor builds the SgTemplateInstantiationDirectiveStatement base class.

\param startOfConstruct represents the position in the source code
*/
/*
\sa 
\ref SgTemplateInstantiationDirectiveStatement_create "Example:create an SgTemplateInstantiationDirectiveStatement object"
*/

/*!
\fn SgTemplateInstantiationDirectiveStatement::~SgTemplateInstantiationDirectiveStatement()
\brief This is the destructor.

There are a lot of things to delete, but nothing is deleted in this destructor.
*/

/*!
\fn SgTemplateInstantiationDirectiveStatement::isSgTemplateInstantiationDirectiveStatement (SgNode *s)
\brief Cast function (from derived class to SgTemplateInstantiationDirectiveStatement pointer).

This functions returns a SgTemplateInstantiationDirectiveStatement pointer for any input of a 
pointer to an object derived from a SgTemplateInstantiationDirectiveStatement.

\return Returns valid pointer to SgTemplateInstantiationDirectiveStatement if input is derived from a SgLocatedNode.
*/

/*!
\fn SgTemplateInstantiationDirectiveStatement::isSgTemplateInstantiationDirectiveStatement (const SgNode *s)
\brief Cast function (from derived class to SgTemplateInstantiationDirectiveStatement pointer).

This functions returns a SgTemplateInstantiationDirectiveStatement pointer for any input of a 
pointer to an object derived from a SgTemplateInstantiationDirectiveStatement.

\return Returns valid pointer to SgTemplateInstantiationDirectiveStatement if input is derived from a SgLocatedNode.
*/

/*!
\fn SgTemplateInstantiationDirectiveStatement::get_declaration() const
\brief Returns pointer to SgDeclarationStatement.

\return Returns pointer to SgDeclarationStatement.
*/

/*!
\fn SgTemplateInstantiationDirectiveStatement::set_declaration(SgDeclarationStatement* declaration)
\brief Access function for p_declaration.

\return Returns void.
*/

