//////////////////////////////////////////////////////////////////////////
// Documentation for class SgReturnStmt
//////////////////////////////////////////////////////////////////////////

/*!
\class SgReturnStmt
\brief This class represents the concept of a C Assembler statement (untested).

\todo Check that when return (SgReturnStatement) is implicit, it should be marked as
compiler generated.  Actually we only include returns in the AST which are explicit, so
this is not a problem.

\sa
\ref SgReturnStmt_usage  "Example of using a SgReturnStmt object"
*/


//////////////////////////////////////////////////////////////////////////
// Documentation for class SgReturnStmt data members
/////////////////////////////////////////////////////////////////////////

/*! \var SgReturnStmt::p_expression_root
\brief This pointer points to the SgExpressionRoot of an expression tree.

*/

//////////////////////////////////////////////////////////////////////////
// Documentation for class SgReturnStmt member functions (methods)
/////////////////////////////////////////////////////////////////////////

/*!
\fn SgReturnStmt::SgReturnStmt ( Sg_File_Info* startOfConstruct = NULL, SgExpression *return_expr = NULL )
\brief This is the constructor.

This constructor builds the SgReturnStmt base class.

\param startOfConstruct represents the position in the source code

\sa 
\ref SgReturnStmt_create "Example:create an SgReturnStmt object"
*/

/*!
\fn SgReturnStmt::SgReturnStmt ( Sg_File_Info* startOfConstruct = NULL, SgExpressionRoot *return_expr = NULL )
\brief This is the constructor.

This constructor builds the SgReturnStmt base class.

\deprecated This constructor is likely to be deprecated.

*/

/*!
\fn SgReturnStmt::~SgReturnStmt()
\brief This is the destructor.

There are a lot of things to delete, but nothing is deleted in this destructor.
*/

/*!
\fn SgReturnStmt::isSgReturnStmt (SgNode *s)
\brief Cast function (from derived class to SgReturnStmt pointer).

This functions returns a SgReturnStmt pointer for any input of a 
pointer to an object derived from a SgReturnStmt.

\return Returns valid pointer to SgReturnStmt if input is derived from a SgLocatedNode.
*/

/*!
\fn SgReturnStmt::isSgReturnStmt (const SgNode *s)
\brief Cast function (from derived class to SgReturnStmt pointer).

This functions returns a SgReturnStmt pointer for any input of a 
pointer to an object derived from a SgReturnStmt.

\return Returns valid pointer to SgReturnStmt if input is derived from a SgLocatedNode.
*/

/*!
\fn SgReturnStmt::get_expression_root() const
\brief Returns pointer to SgExpressionRoot (which wraps the SgExpresion).

\return Returns pointer to SgExpressionRoot.
*/

/*!
\fn SgReturnStmt::set_expression_root(SgExpressionRoot* expr)
\brief Access function for p_expression_root.

\return Returns void.
*/

/*!
\fn SgReturnStmt::get_return_expr() const
\brief Returns pointer to SgExpression (which is wrapped by the p_expression_root).

\return Returns pointer to SgExpression.
*/

/*!
\fn SgReturnStmt::set_return_expr(SgExpression* expression_root)
\brief Access function for SgExpression hidden behind p_expression_root.

\return Returns void.
*/


