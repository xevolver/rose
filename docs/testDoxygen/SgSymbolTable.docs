//////////////////////////////////////////////////////////////////////////
// Documentation for class SgSymbolTable
//////////////////////////////////////////////////////////////////////////

/*!
\class SgSymbolTable
\brief This class represents the symbol tables used in both SgScopeStatement and
the SgFunctionTypeSymbolTable IR node.

\todo The rose_hash_multimap should perhaps be included as a data member instead of
implemented as a pointer.  We should consider this detail.

\todo We should decide if we want to give Symbol Tables a name or not, it seems that
we rarely if ever do this so perhaps we should not have such a field.

\sa
\ref SgSymbolTable_usage  "Example of using a SgSymbolTable object"
*/


//////////////////////////////////////////////////////////////////////////
// Documentation for class SgSymbolTable data members
/////////////////////////////////////////////////////////////////////////

/*!
\var SgSymbolTable::p_iterator
\brief This iterator is used within some of the deprecated functions.

\deprecated I think this iterator should be removed.
*/

/*!
\var SgSymbolTable::p_name
\brief This is the symbol name (mangled is required).

*/

/*!
\var SgSymbolTable::p_no_name
\brief This is a flag to indicate that p_name is empty

Some symbols don't have a name.

\todo generate a list of instances where symbols don't have names.
(Namespaces don't have to have a name for example).

*/

/*!
\var SgSymbolTable::p_table
\brief This is lower level symbol table implementation (using an STL hash_multimap)

*/



//////////////////////////////////////////////////////////////////////////
// Documentation for class SgSymbolTable member functions (methods)
/////////////////////////////////////////////////////////////////////////
/*!
\fn SgSymbolTable::SgSymbolTable()
\brief This is the constructor.

This constructor builds the SgSymbolTable base class.

\sa 
\ref SgSymbolTable_create "Example:create an SgSymbolTable object"
*/

/*!
\fn SgSymbolTable::~SgSymbolTable()
\brief This is the destructor.

There is nothing to delete in this object.
*/

/*!
\fn SgSymbolTable::isSgSymbolTable (SgNode *s)
\brief Cast function (from derived class to SgSymbolTable pointer).

This functions returns a SgSymbolTable pointer for any input of a 
pointer to an object derived from a SgSymbolTable.

\return Returns valid pointer to SgSymbolTable if input is a SgSymbolTable.
*/

/*!
\fn SgSymbolTable::isSgSymbolTable (const SgNode *s)
\brief Cast function (from derived class to SgSymbolTable pointer).

This functions returns a SgSymbolTable pointer for any input of a 
pointer to an object derived from a SgSymbolTable.

\return Returns valid pointer to SgSymbolTable if input is a SgSymbolTable.
*/

