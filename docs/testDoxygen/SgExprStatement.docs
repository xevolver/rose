//////////////////////////////////////////////////////////////////////////
// Documentation for class SgExprStatement
//////////////////////////////////////////////////////////////////////////

/*!
\class SgExprStatement
\brief This class represents the concept of a C or C++ statement which contains a
expression.

Any expression can be used alone as statement in C and C++, the expression statment
provides a mechanism to wrap any SgExpression and make it a SgStaement for use
anywhere a SgStatement might be required (e.g. in a list of SgStatement objects in a
SgBasicBlock).

\sa
\ref SgExprStatement_usage  "Example of using a SgExprStatement object"
*/


//////////////////////////////////////////////////////////////////////////
// Documentation for class SgExprStatement data members
/////////////////////////////////////////////////////////////////////////

/*! \var SgExprStatement::p_expression_root
\brief This pointer points to the SgExpressionRoot which wraps the SgExpression. 

*/

//////////////////////////////////////////////////////////////////////////
// Documentation for class SgExprStatement member functions (methods)
/////////////////////////////////////////////////////////////////////////

/*!
\fn SgExprStatement::SgExprStatement ( Sg_File_Info* startOfConstruct = NULL )
\brief This is the constructor.

This constructor builds the SgExprStatement base class.

\param startOfConstruct represents the position in the source code
*/
/*
\sa 
\ref SgExprStatement_create "Example:create an SgExprStatement object"
*/

/*!
\fn SgExprStatement::~SgExprStatement()
\brief This is the destructor.

There are a lot of things to delete, but nothing is deleted in this destructor.
*/

/*!
\fn SgExprStatement::isSgExprStatement (SgNode *s)
\brief Cast function (from derived class to SgExprStatement pointer).

This functions returns a SgExprStatement pointer for any input of a 
pointer to an object derived from a SgExprStatement.

\return Returns valid pointer to SgExprStatement if input is derived from a SgLocatedNode.
*/

/*!
\fn SgExprStatement::isSgExprStatement (const SgNode *s)
\brief Cast function (from derived class to SgExprStatement pointer).

This functions returns a SgExprStatement pointer for any input of a 
pointer to an object derived from a SgExprStatement.

\return Returns valid pointer to SgExprStatement if input is derived from a SgLocatedNode.
*/

/*!
\fn SgExprStatement::get_the_expr() const
\brief Returns pointer to SgExpression obtained from SgExpressionRoot wrapper for SgExpression.

\return Returns pointer to SgExpression.
*/

/*!
\fn SgExprStatement::set_the_expr(SgExpression* the_expr)
\brief Sets pointer in the SgExpressionRoot (constructed as required) to wrap the SgExpression.

\return Returns void.
*/

/*!
\fn SgExprStatement::get_expression_root() const
\brief Access function for p_expression_root.

\return Returns pointer to SgExpressionRoot.
*/

/*!
\fn SgExprStatement::set_the_expr(SgExpressionRoot* expression_root)
\brief Access function for p_expression_root.

\return Returns void.
*/


