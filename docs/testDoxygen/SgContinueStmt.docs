//////////////////////////////////////////////////////////////////////////
// Documentation for class SgContinueStmt
//////////////////////////////////////////////////////////////////////////

/*!
\class SgContinueStmt
\brief This class represents the concept of a C or C++ continue statement.

\sa
\ref SgContinueStmt_usage  "Example of using a SgContinueStmt object"
*/


//////////////////////////////////////////////////////////////////////////
// Documentation for class SgContinueStmt data members
/////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// Documentation for class SgContinueStmt member functions (methods)
/////////////////////////////////////////////////////////////////////////

/*!
\fn SgContinueStmt::SgContinueStmt ( Sg_File_Info* startOfConstruct = NULL )
\brief This is the constructor.

This constructor builds the SgContinueStmt base class.

\param startOfConstruct represents the position in the source code
*/
/*
\sa 
\ref SgContinueStmt_create "Example:create an SgContinueStmt object"
*/

/*!
\fn SgContinueStmt::~SgContinueStmt()
\brief This is the destructor.

There are a lot of things to delete, but nothing is deleted in this destructor.
*/

/*!
\fn SgContinueStmt::isSgContinueStmt (SgNode *s)
\brief Cast function (from derived class to SgContinueStmt pointer).

This functions returns a SgContinueStmt pointer for any input of a 
pointer to an object derived from a SgContinueStmt.

\return Returns valid pointer to SgContinueStmt if input is derived from a SgLocatedNode.
*/

/*!
\fn SgContinueStmt::isSgContinueStmt (const SgNode *s)
\brief Cast function (from derived class to SgContinueStmt pointer).

This functions returns a SgContinueStmt pointer for any input of a 
pointer to an object derived from a SgContinueStmt.

\return Returns valid pointer to SgContinueStmt if input is derived from a SgLocatedNode.
*/

