//////////////////////////////////////////////////////////////////////////
// Documentation for class SgUsingDirectiveStatement
//////////////////////////////////////////////////////////////////////////

/*!
\class SgUsingDirectiveStatement
\brief This class represents the concept of a C++ using directive.

\todo Explain difference between using declaration and using directive.

\sa
\ref SgUsingDirectiveStatement_usage  "Example of using a SgUsingDirectiveStatement object"
*/


//////////////////////////////////////////////////////////////////////////
// Documentation for class SgUsingDirectiveStatement data members
/////////////////////////////////////////////////////////////////////////

/*! \var SgUsingDirectiveStatement::p_namespaceDeclaration
\brief This pointer points to namespace declaration being used.

*/

//////////////////////////////////////////////////////////////////////////
// Documentation for class SgUsingDirectiveStatement member functions (methods)
/////////////////////////////////////////////////////////////////////////

/*!
\fn SgUsingDirectiveStatement::SgUsingDirectiveStatement ( Sg_File_Info* startOfConstruct = NULL )
\brief This is the constructor.

This constructor builds the SgUsingDirectiveStatement base class.

\param startOfConstruct represents the position in the source code
*/
/*
\sa 
\ref SgUsingDirectiveStatement_create "Example:create an SgUsingDirectiveStatement object"
*/

/*!
\fn SgUsingDirectiveStatement::~SgUsingDirectiveStatement()
\brief This is the destructor.

There are a lot of things to delete, but nothing is deleted in this destructor.
*/

/*!
\fn SgUsingDirectiveStatement::isSgUsingDirectiveStatement (SgNode *s)
\brief Cast function (from derived class to SgUsingDirectiveStatement pointer).

This functions returns a SgUsingDirectiveStatement pointer for any input of a 
pointer to an object derived from a SgUsingDirectiveStatement.

\return Returns valid pointer to SgUsingDirectiveStatement if input is derived from a SgLocatedNode.
*/

/*!
\fn SgUsingDirectiveStatement::isSgUsingDirectiveStatement (const SgNode *s)
\brief Cast function (from derived class to SgUsingDirectiveStatement pointer).

This functions returns a SgUsingDirectiveStatement pointer for any input of a 
pointer to an object derived from a SgUsingDirectiveStatement.

\return Returns valid pointer to SgUsingDirectiveStatement if input is derived from a SgLocatedNode.
*/

/*!
\fn SgUsingDirectiveStatement::get_namespaceDeclaration() const
\brief Access function for p_namespaceDeclaration.

\return Returns pointer to SgNamespaceDeclarationStatement.
*/

/*!
\fn SgUsingDirectiveStatement::set_namespaceDeclaration(SgNamespaceDeclarationStatement* namespaceDeclaration)
\brief Access function for p_namespaceDeclaration.

\return Returns void.
*/

