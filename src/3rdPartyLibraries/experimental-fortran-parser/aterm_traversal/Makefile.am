# include ../../make.inc
include $(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs

# SDF_GRAMMAR_DIR = $(srcdir)/../sdf_syntax
SDF_GRAMMAR_DIR = ../sdf_syntax

# CC  = cc
# CPC = c++

SGLRI = sglri

A_TERM_INCLUDE = -I$(ATERM_INSTALL_PATH)/include

# CFLAGS = -I. -I$(ATERM_ROOT)/include
CFLAGS = -I. -I$(A_TERM_INCLUDE)
# LIBS = -L$(ATERM_ROOT)/lib -lATerm
LIBS = -L$(ATERM_INSTALL_PATH)/lib -lATerm

LDADD    = $(LIBS_WITH_RPATH) $(ROSE_LIBS)

# bin_PROGRAMS = traverse fast2sage
bin_PROGRAMS = fast2sage

# noinst_LTLIBRARIES = libOFP.la

# libOFP_la_SOURCES = traverse_SgUntypedNodes.cpp
# libOFP_la_HEADERS = traverse_SgUntypedNodes.hpp

# TRAVERSE_OBJS = UntypedNodes.o OFPNodes.o OFPExpr.o OFPUnparser.o UntypedASTBuilder.o traversal.o ofp_traverse_productions.o
# traverse_SOURCES = traverse_main.cpp traverse_SgUntypedNodes.cpp SgUntypedNodes.cpp
# traverse_SOURCES = traverse_main.cpp traverse_SgUntypedNodes.cpp traverse_SgUntypedNodes.hpp
# traverse_SOURCES = traverse_SgUntypedNodes.cpp traverse_SgUntypedNodes.hpp

AM_CPPFLAGS = $(A_TERM_INCLUDE) $(ROSE_INCLUDES) $(SDF_GRAMMAR_DIR)

noinst_LTLIBRARIES = libexperimentalOFP.la
libexperimentalOFP_la_SOURCES = $(libexperimentalOFP_Sources)

# libexperimentalOFP_Sources =$(srcdir)/traversal.cpp $(srcdir)/OFPUnparser.cpp $(srcdir)/ofp_traverse_productions.cpp $(srcdir)/OFPExpr.cpp $(srcdir)/UntypedASTBuilder.cpp $(srcdir)/OFPNodes.cpp
# libexperimentalOFP_Sources =$(srcdir)/traversal.cpp $(srcdir)/OFPUnparser.cpp $(srcdir)/ofp_traverse_productions.cpp $(srcdir)/OFPExpr.cpp $(srcdir)/OFPNodes.cpp
# libexperimentalOFP_Sources = traverse_SgUntypedNodes.cpp
# libexperimentalOFP_Headers = traverse_SgUntypedNodes.hpp
libexperimentalOFP_Sources = traverse_SgUntypedNodes.cpp build_SgUntypedNodes.cpp
libexperimentalOFP_Headers = traverse_SgUntypedNodes.hpp build_SgUntypedNodes.hpp

# bin_PROGRAMS = traverse
# traverse_SOURCES = $(srcdir)/traverse.cpp $(srcdir)/traversal.cpp $(srcdir)/OFPUnparser.cpp \
#                   $(srcdir)/ofp_traverse_productions.cpp $(srcdir)/OFPExpr.cpp \
#                   $(srcdir)/UntypedASTBuilder.cpp $(srcdir)/OFPNodes.cpp

EXTRA_DIST = traversal.hpp OFPNodes.hpp OFPExpr.hpp UntypedNodes.h OFPExpr.hpp

# traverse : traverse_main.o traverse_SgUntypedNodes.o SgUntypedNodes.o
#	c++ -o traverse $(LDFLAGS) traverse_main.o traverse_SgUntypedNodes.o SgUntypedNodes.o $(LIBS)

# traverse_main.o : traverse_main.cpp SgUntypedNodes.hpp
#	c++ -c traverse_main.cpp $(CFLAGS)

# Since this is generated by Craig we don't build it (and it is in the source directory).
# fast2sage: SgUntyped.str
fast2sage: $(srcdir)/SgUntyped.str
#	strc -i $(srcdir)/../stratego_transformations/fast2sage.str -I $(srcdir)/../sdf_syntax -la stratego-lib -o fast2sage
#	strc -i $(srcdir)/fast2sage.str -I $(srcdir)/../sdf_syntax -I . -I $(srcdir)/../stratego_transformations -la stratego-lib -o fast2sage
	strc -i $(srcdir)/fast2sage.str -I $(srcdir)/../sdf_syntax -I $(srcdir) -I $(srcdir)/../stratego_transformations -la stratego-lib -o fast2sage

# We build this SgUntyped.str file differently than Craig does, so 
# Craig is checking him his version so that we can use it directly.
# SgUntyped.str : SgUntyped.rtg
#	rtg2sig -i $(srcdir)/SgUntyped.rtg -o SgUntyped.str

#check: traverse
check: SgUntyped.str traverse
#	$(SGLRI) -i testfile.f90 -p $(SDF_GRAMMAR_DIR)/Fortran.tbl | ../stratego_transformations/ofp-simplify  -o testfile.f90.aterm
	$(SGLRI) -i testfile.f90 -p $(SDF_GRAMMAR_DIR)/Fortran.tbl | ../stratego_transformations/ofp2fast | ./fast2sage -o testfile.f90.aterm
	./traverse -i testfile.f90.aterm

clean:
	rm -f *.o *.lo *.la traverse
	rm -f fast2sage  fast2sage.c  fast2sage.dep SgUntyped.str
	rm -rf .libs
