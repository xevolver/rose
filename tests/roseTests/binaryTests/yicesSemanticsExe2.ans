=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080482c8: push   ebp
registers:
  esp          [writer=0x080482c8] read-before-write = {defs={0x080482c8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080482c8] write-only = {defs={0x080482c8}, expr=0x080482c9<134513353>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080482c8 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080482c8 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080482c8 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080482c8 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080482c9: mov    ebp, esp
registers:
  esp          [writer=0x080482c8] read-before-write = {defs={0x080482c8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  ebp          [writer=0x080482c9] read-before-write = {defs={0x080482c8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080482c9] write-only = {defs={0x080482c9}, expr=0x080482cb<134513355>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080482c8 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080482c8 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080482c8 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080482c8 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080482cb: sub    esp, 0x08
registers:
  esp          [writer=0x080482cb] read-before-write = {defs={0x080482c8,0x080482cb}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x080482c9] read-before-write = {defs={0x080482c8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080482cb] write-only = {defs={0x080482cb}, expr=0x080482ce<134513358>[32]}
  cf           [writer=0x080482cb] write-only = {defs={0x080482c8,0x080482cb}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  pf           [writer=0x080482cb] write-only = {defs={0x080482c8,0x080482cb}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))}
  af           [writer=0x080482cb] write-only = {defs={0x080482c8,0x080482cb}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  zf           [writer=0x080482cb] write-only = {defs={0x080482c8,0x080482cb}, expr=(zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  sf           [writer=0x080482cb] write-only = {defs={0x080482c8,0x080482cb}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  of           [writer=0x080482cb] write-only = {defs={0x080482c8,0x080482cb}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080482c8 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080482c8 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080482c8 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080482c8 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080482ce: call   0x08048364<call_gmon_start>
registers:
  esp          [writer=0x080482ce] read-before-write = {defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])}
  ebp          [writer=0x080482c9] read-before-write = {defs={0x080482c8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080482ce] = {defs={0x080482ce}, expr=0x08048364<134513508>[32]}
  cf           [writer=0x080482cb] write-only = {defs={0x080482c8,0x080482cb}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  pf           [writer=0x080482cb] write-only = {defs={0x080482c8,0x080482cb}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))}
  af           [writer=0x080482cb] write-only = {defs={0x080482c8,0x080482cb}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  zf           [writer=0x080482cb] write-only = {defs={0x080482c8,0x080482cb}, expr=(zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  sf           [writer=0x080482cb] write-only = {defs={0x080482c8,0x080482cb}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  of           [writer=0x080482cb] write-only = {defs={0x080482c8,0x080482cb}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x080482ce write-only value={defs={0x080482ce}, expr=0x08[8]}
  addr={defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x080482ce write-only value={defs={0x080482ce}, expr=0x04[8]}
  addr={defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x080482ce write-only value={defs={0x080482ce}, expr=0x82<-126>[8]}
  addr={defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x080482ce write-only value={defs={0x080482ce}, expr=0xd3<-45>[8]}
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080482c8 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080482c8 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080482c8 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080482c8 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080482d3: call   0x080483d0<frame_dummy>
registers:
  esp          [writer=0x080482d3] read-before-write = {defs={0x080482d3}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080482d3] = {defs={0x080482d3}, expr=0x080483d0<134513616>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080482d3}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080482d3 write-only value={defs={0x080482d3}, expr=0x08[8]}
  addr={defs={0x080482d3}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080482d3 write-only value={defs={0x080482d3}, expr=0x04[8]}
  addr={defs={0x080482d3}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080482d3 write-only value={defs={0x080482d3}, expr=0x82<-126>[8]}
  addr={defs={0x080482d3}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080482d3 write-only value={defs={0x080482d3}, expr=0xd8<-40>[8]}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080482d8: call   0x08048580<__do_global_ctors_aux>
registers:
  esp          [writer=0x080482d8] read-before-write = {defs={0x080482d8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080482d8] = {defs={0x080482d8}, expr=0x08048580<134514048>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080482d8}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080482d8 write-only value={defs={0x080482d8}, expr=0x08[8]}
  addr={defs={0x080482d8}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080482d8 write-only value={defs={0x080482d8}, expr=0x04[8]}
  addr={defs={0x080482d8}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080482d8 write-only value={defs={0x080482d8}, expr=0x82<-126>[8]}
  addr={defs={0x080482d8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080482d8 write-only value={defs={0x080482d8}, expr=0xdd<-35>[8]}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080482dd: leave  
registers:
  esp          [writer=0x080482dd] = {defs={0x080482dd}, expr=(add[32] ebp_0[32] 0x00000004[32])}
  ebp          [writer=0x080482dd] read-before-write = v14825[32]
  eip          [writer=0x080482dd] write-only = {defs={0x080482dd}, expr=0x080482de<134513374>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v14825[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v14825[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v14825[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v14825[32])

0x080482de: ret    
registers:
  esp          [writer=0x080482de] = {defs={0x080482dd,0x080482de}, expr=(add[32] ebp_0[32] 0x00000008[32])}
  ebp          [writer=0x080482dd] read-before-write = v14825[32]
  eip          [writer=0x080482de] write-only = v14843[32]
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080482dd}, expr=(add[32] ebp_0[32] 0x00000007[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v14843[32])
  addr={defs={0x080482dd}, expr=(add[32] ebp_0[32] 0x00000006[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v14843[32])
  addr={defs={0x080482dd}, expr=(add[32] ebp_0[32] 0x00000005[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v14843[32])
  addr={defs={0x080482dd}, expr=(add[32] ebp_0[32] 0x00000004[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v14843[32])
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v14825[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v14825[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v14825[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v14825[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080482f0: jmp    dword ds:[0x080496d4<.got.plt+0x0c>]
registers:
  eip          [writer=0x080482f0] write-only = v15333[32]
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080482f0}, expr=0x080496d7<134518487>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v15333[32])
  addr={defs={0x080482f0}, expr=0x080496d6<134518486>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v15333[32])
  addr={defs={0x080482f0}, expr=0x080496d5<134518485>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v15333[32])
  addr={defs={0x080482f0}, expr=0x080496d4<134518484>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v15333[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048300: jmp    dword ds:[0x080496d8<.got.plt+0x10>]
registers:
  eip          [writer=0x08048300] write-only = v15824[32]
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048300}, expr=0x080496db<134518491>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v15824[32])
  addr={defs={0x08048300}, expr=0x080496da<134518490>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v15824[32])
  addr={defs={0x08048300}, expr=0x080496d9<134518489>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v15824[32])
  addr={defs={0x08048300}, expr=0x080496d8<134518488>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v15824[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048310: jmp    dword ds:[0x080496dc<.got.plt+0x14>]
registers:
  eip          [writer=0x08048310] write-only = v16315[32]
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048310}, expr=0x080496df<134518495>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v16315[32])
  addr={defs={0x08048310}, expr=0x080496de<134518494>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v16315[32])
  addr={defs={0x08048310}, expr=0x080496dd<134518493>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v16315[32])
  addr={defs={0x08048310}, expr=0x080496dc<134518492>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v16315[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048320: jmp    dword ds:[0x080496e0<.got.plt+0x18>]
registers:
  eip          [writer=0x08048320] write-only = v16806[32]
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048320}, expr=0x080496e3<134518499>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v16806[32])
  addr={defs={0x08048320}, expr=0x080496e2<134518498>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v16806[32])
  addr={defs={0x08048320}, expr=0x080496e1<134518497>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v16806[32])
  addr={defs={0x08048320}, expr=0x080496e0<134518496>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v16806[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048330: jmp    dword ds:[0x080496e4<.got.plt+0x1c>]
registers:
  eip          [writer=0x08048330] write-only = v17297[32]
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048330}, expr=0x080496e7<134518503>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v17297[32])
  addr={defs={0x08048330}, expr=0x080496e6<134518502>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v17297[32])
  addr={defs={0x08048330}, expr=0x080496e5<134518501>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v17297[32])
  addr={defs={0x08048330}, expr=0x080496e4<134518500>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v17297[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048340: xor    ebp, ebp
registers:
  ebp          [writer=0x08048340] write-only = {defs={0x08048340}, expr=0x00000000[32]}
  eip          [writer=0x08048340] write-only = {defs={0x08048340}, expr=0x08048342<134513474>[32]}
  cf           [writer=0x08048340] write-only = {defs={0x08048340}, expr=false[1]}
  pf           [writer=0x08048340] write-only = {defs={0x08048340}, expr=true[1]}
  af           [writer=0x08048340] write-only = v17800[1]<unspec>
  zf           [writer=0x08048340] write-only = {defs={0x08048340}, expr=true[1]}
  sf           [writer=0x08048340] write-only = {defs={0x08048340}, expr=false[1]}
  of           [writer=0x08048340] write-only = {defs={0x08048340}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:

0x08048342: pop    esi
registers:
  esp          [writer=0x08048342] read-before-write = {defs={0x08048342}, expr=(add[32] esp_0[32] 0x00000004[32])}
  ebp          [writer=0x08048340] write-only = {defs={0x08048340}, expr=0x00000000[32]}
  esi          [writer=0x08048342] write-only = v17804[32]
  eip          [writer=0x08048342] write-only = {defs={0x08048342}, expr=0x08048343<134513475>[32]}
  cf           [writer=0x08048340] write-only = {defs={0x08048340}, expr=false[1]}
  pf           [writer=0x08048340] write-only = {defs={0x08048340}, expr=true[1]}
  af           [writer=0x08048340] write-only = v17800[1]<unspec>
  zf           [writer=0x08048340] write-only = {defs={0x08048340}, expr=true[1]}
  sf           [writer=0x08048340] write-only = {defs={0x08048340}, expr=false[1]}
  of           [writer=0x08048340] write-only = {defs={0x08048340}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v17804[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v17804[32])

0x08048343: mov    ecx, esp
registers:
  ecx          [writer=0x08048343] write-only = {defs={0x08048342}, expr=(add[32] esp_0[32] 0x00000004[32])}
  esp          [writer=0x08048342] read-before-write = {defs={0x08048342}, expr=(add[32] esp_0[32] 0x00000004[32])}
  ebp          [writer=0x08048340] write-only = {defs={0x08048340}, expr=0x00000000[32]}
  esi          [writer=0x08048342] write-only = v17804[32]
  eip          [writer=0x08048343] write-only = {defs={0x08048343}, expr=0x08048345<134513477>[32]}
  cf           [writer=0x08048340] write-only = {defs={0x08048340}, expr=false[1]}
  pf           [writer=0x08048340] write-only = {defs={0x08048340}, expr=true[1]}
  af           [writer=0x08048340] write-only = v17800[1]<unspec>
  zf           [writer=0x08048340] write-only = {defs={0x08048340}, expr=true[1]}
  sf           [writer=0x08048340] write-only = {defs={0x08048340}, expr=false[1]}
  of           [writer=0x08048340] write-only = {defs={0x08048340}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v17804[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v17804[32])

0x08048345: and    esp, 0xf0<-16>
registers:
  ecx          [writer=0x08048343] write-only = {defs={0x08048342}, expr=(add[32] esp_0[32] 0x00000004[32])}
  esp          [writer=0x08048345] read-before-write = {defs={0x08048342,0x08048345}, expr=(bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])}
  ebp          [writer=0x08048340] write-only = {defs={0x08048340}, expr=0x00000000[32]}
  esi          [writer=0x08048342] write-only = v17804[32]
  eip          [writer=0x08048345] write-only = {defs={0x08048345}, expr=0x08048348<134513480>[32]}
  cf           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  pf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) false[1]))}
  af           [writer=0x08048345] write-only = v17840[1]<unspec>
  zf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  sf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  of           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v17804[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v17804[32])

0x08048348: push   eax
registers:
  ecx          [writer=0x08048343] write-only = {defs={0x08048342}, expr=(add[32] esp_0[32] 0x00000004[32])}
  esp          [writer=0x08048348] read-before-write = {defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32])}
  ebp          [writer=0x08048340] write-only = {defs={0x08048340}, expr=0x00000000[32]}
  esi          [writer=0x08048342] write-only = v17804[32]
  eip          [writer=0x08048348] write-only = {defs={0x08048348}, expr=0x08048349<134513481>[32]}
  cf           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  pf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) false[1]))}
  af           [writer=0x08048345] write-only = v17840[1]<unspec>
  zf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  sf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  of           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v17804[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v17804[32])

0x08048349: push   esp
registers:
  ecx          [writer=0x08048343] write-only = {defs={0x08048342}, expr=(add[32] esp_0[32] 0x00000004[32])}
  esp          [writer=0x08048349] read-before-write = {defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32])}
  ebp          [writer=0x08048340] write-only = {defs={0x08048340}, expr=0x00000000[32]}
  esi          [writer=0x08048342] write-only = v17804[32]
  eip          [writer=0x08048349] write-only = {defs={0x08048349}, expr=0x0804834a<134513482>[32]}
  cf           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  pf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) false[1]))}
  af           [writer=0x08048345] write-only = v17840[1]<unspec>
  zf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  sf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  of           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffb<4294967291,-5>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffa<4294967290,-6>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff9<4294967289,-7>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v17804[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v17804[32])

0x0804834a: push   edx
registers:
  ecx          [writer=0x08048343] write-only = {defs={0x08048342}, expr=(add[32] esp_0[32] 0x00000004[32])}
  esp          [writer=0x0804834a] read-before-write = {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048340] write-only = {defs={0x08048340}, expr=0x00000000[32]}
  esi          [writer=0x08048342] write-only = v17804[32]
  eip          [writer=0x0804834a] write-only = {defs={0x0804834a}, expr=0x0804834b<134513483>[32]}
  cf           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  pf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) false[1]))}
  af           [writer=0x08048345] write-only = v17840[1]<unspec>
  zf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  sf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  of           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff7<4294967287,-9>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff6<4294967286,-10>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff5<4294967285,-11>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffb<4294967291,-5>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffa<4294967290,-6>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff9<4294967289,-7>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v17804[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v17804[32])

0x0804834b: push   0x08048520<__libc_csu_fini>
registers:
  ecx          [writer=0x08048343] write-only = {defs={0x08048342}, expr=(add[32] esp_0[32] 0x00000004[32])}
  esp          [writer=0x0804834b] read-before-write = {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32])}
  ebp          [writer=0x08048340] write-only = {defs={0x08048340}, expr=0x00000000[32]}
  esi          [writer=0x08048342] write-only = v17804[32]
  eip          [writer=0x0804834b] write-only = {defs={0x0804834b}, expr=0x08048350<134513488>[32]}
  cf           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  pf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) false[1]))}
  af           [writer=0x08048345] write-only = v17840[1]<unspec>
  zf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  sf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  of           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff3<4294967283,-13>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x08[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff2<4294967282,-14>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x04[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff1<4294967281,-15>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x85<-123>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x20[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff7<4294967287,-9>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff6<4294967286,-10>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff5<4294967285,-11>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffb<4294967291,-5>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffa<4294967290,-6>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff9<4294967289,-7>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v17804[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v17804[32])

0x08048350: push   0x080484b0<__libc_csu_init>
registers:
  ecx          [writer=0x08048343] write-only = {defs={0x08048342}, expr=(add[32] esp_0[32] 0x00000004[32])}
  esp          [writer=0x08048350] read-before-write = {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffec<4294967276,-20>[32])}
  ebp          [writer=0x08048340] write-only = {defs={0x08048340}, expr=0x00000000[32]}
  esi          [writer=0x08048342] write-only = v17804[32]
  eip          [writer=0x08048350] write-only = {defs={0x08048350}, expr=0x08048355<134513493>[32]}
  cf           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  pf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) false[1]))}
  af           [writer=0x08048345] write-only = v17840[1]<unspec>
  zf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  sf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  of           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffef<4294967279,-17>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0x08[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffee<4294967278,-18>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0x04[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffed<4294967277,-19>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0x84<-124>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffec<4294967276,-20>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0xb0<-80>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff3<4294967283,-13>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x08[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff2<4294967282,-14>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x04[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff1<4294967281,-15>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x85<-123>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x20[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff7<4294967287,-9>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff6<4294967286,-10>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff5<4294967285,-11>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffb<4294967291,-5>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffa<4294967290,-6>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff9<4294967289,-7>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v17804[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v17804[32])

0x08048355: push   ecx
registers:
  ecx          [writer=0x08048343] = {defs={0x08048342}, expr=(add[32] esp_0[32] 0x00000004[32])}
  esp          [writer=0x08048355] read-before-write = {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe8<4294967272,-24>[32])}
  ebp          [writer=0x08048340] write-only = {defs={0x08048340}, expr=0x00000000[32]}
  esi          [writer=0x08048342] write-only = v17804[32]
  eip          [writer=0x08048355] write-only = {defs={0x08048355}, expr=0x08048356<134513494>[32]}
  cf           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  pf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) false[1]))}
  af           [writer=0x08048345] write-only = v17840[1]<unspec>
  zf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  sf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  of           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffeb<4294967275,-21>[32])} writer=0x08048355 write-only value={defs={0x08048342}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] esp_0[32] 0x00000004[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffea<4294967274,-22>[32])} writer=0x08048355 write-only value={defs={0x08048342}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] esp_0[32] 0x00000004[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe9<4294967273,-23>[32])} writer=0x08048355 write-only value={defs={0x08048342}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] esp_0[32] 0x00000004[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe8<4294967272,-24>[32])} writer=0x08048355 write-only value={defs={0x08048342}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x00000004[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffef<4294967279,-17>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0x08[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffee<4294967278,-18>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0x04[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffed<4294967277,-19>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0x84<-124>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffec<4294967276,-20>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0xb0<-80>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff3<4294967283,-13>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x08[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff2<4294967282,-14>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x04[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff1<4294967281,-15>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x85<-123>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x20[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff7<4294967287,-9>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff6<4294967286,-10>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff5<4294967285,-11>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffb<4294967291,-5>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffa<4294967290,-6>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff9<4294967289,-7>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v17804[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v17804[32])

0x08048356: push   esi
registers:
  ecx          [writer=0x08048343] = {defs={0x08048342}, expr=(add[32] esp_0[32] 0x00000004[32])}
  esp          [writer=0x08048356] read-before-write = {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe4<4294967268,-28>[32])}
  ebp          [writer=0x08048340] write-only = {defs={0x08048340}, expr=0x00000000[32]}
  esi          [writer=0x08048342] = v17804[32]
  eip          [writer=0x08048356] write-only = {defs={0x08048356}, expr=0x08048357<134513495>[32]}
  cf           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  pf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) false[1]))}
  af           [writer=0x08048345] write-only = v17840[1]<unspec>
  zf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  sf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  of           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe7<4294967271,-25>[32])} writer=0x08048356 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] v17804[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe6<4294967270,-26>[32])} writer=0x08048356 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] v17804[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe5<4294967269,-27>[32])} writer=0x08048356 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] v17804[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe4<4294967268,-28>[32])} writer=0x08048356 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] v17804[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffeb<4294967275,-21>[32])} writer=0x08048355 write-only value={defs={0x08048342}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] esp_0[32] 0x00000004[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffea<4294967274,-22>[32])} writer=0x08048355 write-only value={defs={0x08048342}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] esp_0[32] 0x00000004[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe9<4294967273,-23>[32])} writer=0x08048355 write-only value={defs={0x08048342}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] esp_0[32] 0x00000004[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe8<4294967272,-24>[32])} writer=0x08048355 write-only value={defs={0x08048342}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x00000004[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffef<4294967279,-17>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0x08[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffee<4294967278,-18>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0x04[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffed<4294967277,-19>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0x84<-124>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffec<4294967276,-20>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0xb0<-80>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff3<4294967283,-13>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x08[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff2<4294967282,-14>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x04[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff1<4294967281,-15>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x85<-123>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x20[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff7<4294967287,-9>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff6<4294967286,-10>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff5<4294967285,-11>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffb<4294967291,-5>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffa<4294967290,-6>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff9<4294967289,-7>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v17804[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v17804[32])

0x08048357: push   0x08048410<main>
registers:
  ecx          [writer=0x08048343] = {defs={0x08048342}, expr=(add[32] esp_0[32] 0x00000004[32])}
  esp          [writer=0x08048357] read-before-write = {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe0<4294967264,-32>[32])}
  ebp          [writer=0x08048340] write-only = {defs={0x08048340}, expr=0x00000000[32]}
  esi          [writer=0x08048342] = v17804[32]
  eip          [writer=0x08048357] write-only = {defs={0x08048357}, expr=0x0804835c<134513500>[32]}
  cf           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  pf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) false[1]))}
  af           [writer=0x08048345] write-only = v17840[1]<unspec>
  zf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  sf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  of           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe3<4294967267,-29>[32])} writer=0x08048357 write-only value={defs={0x08048357}, expr=0x08[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe2<4294967266,-30>[32])} writer=0x08048357 write-only value={defs={0x08048357}, expr=0x04[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe1<4294967265,-31>[32])} writer=0x08048357 write-only value={defs={0x08048357}, expr=0x84<-124>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe0<4294967264,-32>[32])} writer=0x08048357 write-only value={defs={0x08048357}, expr=0x10[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe7<4294967271,-25>[32])} writer=0x08048356 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] v17804[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe6<4294967270,-26>[32])} writer=0x08048356 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] v17804[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe5<4294967269,-27>[32])} writer=0x08048356 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] v17804[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe4<4294967268,-28>[32])} writer=0x08048356 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] v17804[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffeb<4294967275,-21>[32])} writer=0x08048355 write-only value={defs={0x08048342}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] esp_0[32] 0x00000004[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffea<4294967274,-22>[32])} writer=0x08048355 write-only value={defs={0x08048342}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] esp_0[32] 0x00000004[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe9<4294967273,-23>[32])} writer=0x08048355 write-only value={defs={0x08048342}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] esp_0[32] 0x00000004[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe8<4294967272,-24>[32])} writer=0x08048355 write-only value={defs={0x08048342}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x00000004[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffef<4294967279,-17>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0x08[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffee<4294967278,-18>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0x04[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffed<4294967277,-19>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0x84<-124>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffec<4294967276,-20>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0xb0<-80>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff3<4294967283,-13>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x08[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff2<4294967282,-14>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x04[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff1<4294967281,-15>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x85<-123>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x20[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff7<4294967287,-9>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff6<4294967286,-10>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff5<4294967285,-11>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffb<4294967291,-5>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffa<4294967290,-6>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff9<4294967289,-7>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v17804[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v17804[32])

0x0804835c: call   0x08048310<__libc_start_main@plt>
registers:
  ecx          [writer=0x08048343] = {defs={0x08048342}, expr=(add[32] esp_0[32] 0x00000004[32])}
  esp          [writer=0x0804835c] read-before-write = {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffdc<4294967260,-36>[32])}
  ebp          [writer=0x08048340] write-only = {defs={0x08048340}, expr=0x00000000[32]}
  esi          [writer=0x08048342] = v17804[32]
  eip          [writer=0x0804835c] = {defs={0x0804835c}, expr=0x08048310<134513424>[32]}
  cf           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  pf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) false[1]))}
  af           [writer=0x08048345] write-only = v17840[1]<unspec>
  zf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  sf           [writer=0x08048345] write-only = {defs={0x08048342,0x08048345}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))}
  of           [writer=0x08048345] write-only = {defs={0x08048345}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffdf<4294967263,-33>[32])} writer=0x0804835c write-only value={defs={0x0804835c}, expr=0x08[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffde<4294967262,-34>[32])} writer=0x0804835c write-only value={defs={0x0804835c}, expr=0x04[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffdd<4294967261,-35>[32])} writer=0x0804835c write-only value={defs={0x0804835c}, expr=0x83<-125>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffdc<4294967260,-36>[32])} writer=0x0804835c write-only value={defs={0x0804835c}, expr=0x61[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe3<4294967267,-29>[32])} writer=0x08048357 write-only value={defs={0x08048357}, expr=0x08[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe2<4294967266,-30>[32])} writer=0x08048357 write-only value={defs={0x08048357}, expr=0x04[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe1<4294967265,-31>[32])} writer=0x08048357 write-only value={defs={0x08048357}, expr=0x84<-124>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe0<4294967264,-32>[32])} writer=0x08048357 write-only value={defs={0x08048357}, expr=0x10[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe7<4294967271,-25>[32])} writer=0x08048356 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] v17804[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe6<4294967270,-26>[32])} writer=0x08048356 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] v17804[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe5<4294967269,-27>[32])} writer=0x08048356 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] v17804[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe4<4294967268,-28>[32])} writer=0x08048356 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] v17804[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffeb<4294967275,-21>[32])} writer=0x08048355 write-only value={defs={0x08048342}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] esp_0[32] 0x00000004[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffea<4294967274,-22>[32])} writer=0x08048355 write-only value={defs={0x08048342}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] esp_0[32] 0x00000004[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe9<4294967273,-23>[32])} writer=0x08048355 write-only value={defs={0x08048342}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] esp_0[32] 0x00000004[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe8<4294967272,-24>[32])} writer=0x08048355 write-only value={defs={0x08048342}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x00000004[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffef<4294967279,-17>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0x08[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffee<4294967278,-18>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0x04[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffed<4294967277,-19>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0x84<-124>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffec<4294967276,-20>[32])} writer=0x08048350 write-only value={defs={0x08048350}, expr=0xb0<-80>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff3<4294967283,-13>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x08[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff2<4294967282,-14>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x04[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff1<4294967281,-15>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x85<-123>[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32])} writer=0x0804834b write-only value={defs={0x0804834b}, expr=0x20[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff7<4294967287,-9>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff6<4294967286,-10>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff5<4294967285,-11>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32])} writer=0x0804834a write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffb<4294967291,-5>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffa<4294967290,-6>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff9<4294967289,-7>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32])} writer=0x08048349 write-only value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32])} writer=0x08048348 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v17804[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v17804[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v17804[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048361: hlt    
registers:
  eip          [writer=0x08048361] write-only = {defs={0x08048361}, expr=0x08048361<134513505>[32]}
  fpstatus_top = 0x0[3]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048364: push   ebp
registers:
  esp          [writer=0x08048364] read-before-write = {defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048364] write-only = {defs={0x08048364}, expr=0x08048365<134513509>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048365: mov    ebp, esp
registers:
  esp          [writer=0x08048364] read-before-write = {defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  ebp          [writer=0x08048365] read-before-write = {defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048365] write-only = {defs={0x08048365}, expr=0x08048367<134513511>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048367: push   ebx
registers:
  esp          [writer=0x08048367] read-before-write = {defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])}
  ebp          [writer=0x08048365] read-before-write = {defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048367] write-only = {defs={0x08048367}, expr=0x08048368<134513512>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x08048367 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x08048367 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x08048367 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x08048367 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048368: push   ecx
registers:
  esp          [writer=0x08048368] read-before-write = {defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048365] read-before-write = {defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048368] write-only = {defs={0x08048368}, expr=0x08048369<134513513>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32])} writer=0x08048368 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ecx_0[32])
  addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32])} writer=0x08048368 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ecx_0[32])
  addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32])} writer=0x08048368 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ecx_0[32])
  addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])} writer=0x08048368 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ecx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x08048367 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x08048367 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x08048367 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x08048367 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048369: call   0x0804836e<<Insn>>
registers:
  esp          [writer=0x08048369] read-before-write = {defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])}
  ebp          [writer=0x08048365] read-before-write = {defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048369] = {defs={0x08048369}, expr=0x0804836e<134513518>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x08048369 write-only value={defs={0x08048369}, expr=0x08[8]}
  addr={defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x08048369 write-only value={defs={0x08048369}, expr=0x04[8]}
  addr={defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x08048369 write-only value={defs={0x08048369}, expr=0x83<-125>[8]}
  addr={defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x08048369 write-only value={defs={0x08048369}, expr=0x6e[8]}
  addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32])} writer=0x08048368 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ecx_0[32])
  addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32])} writer=0x08048368 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ecx_0[32])
  addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32])} writer=0x08048368 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ecx_0[32])
  addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])} writer=0x08048368 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ecx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x08048367 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x08048367 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x08048367 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x08048367 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048364 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x0804836e: pop    ebx
registers:
  ebx          [writer=0x0804836e] write-only = v19403[32]
  esp          [writer=0x0804836e] read-before-write = {defs={0x0804836e}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x0804836e] write-only = {defs={0x0804836e}, expr=0x0804836f<134513519>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19403[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19403[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19403[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19403[32])

0x0804836f: add    ebx, 0x0000135a<4954>
registers:
  ebx          [writer=0x0804836f] = {defs={0x0804836f}, expr=(add[32] v19403[32] 0x0000135a<4954>[32])}
  esp          [writer=0x0804836e] read-before-write = {defs={0x0804836e}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x0804836f] write-only = {defs={0x0804836f}, expr=0x08048375<134513525>[32]}
  cf           [writer=0x0804836f] write-only = {defs={0x0804836f}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v19403[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v19403[32]) 0x00000135a<4954>[33]))}
  pf           [writer=0x0804836f] write-only = {defs={0x0804836f}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v19403[32] 0x0000135a<4954>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v19403[32] 0x0000135a<4954>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v19403[32] 0x0000135a<4954>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v19403[32] 0x0000135a<4954>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v19403[32] 0x0000135a<4954>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v19403[32] 0x0000135a<4954>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v19403[32] 0x0000135a<4954>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v19403[32] 0x0000135a<4954>[32]))))}
  af           [writer=0x0804836f] write-only = {defs={0x0804836f}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v19403[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v19403[32]) 0x00000135a<4954>[33]))}
  zf           [writer=0x0804836f] write-only = {defs={0x0804836f}, expr=(zerop[1] (add[32] v19403[32] 0x0000135a<4954>[32]))}
  sf           [writer=0x0804836f] write-only = {defs={0x0804836f}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v19403[32] 0x0000135a<4954>[32]))}
  of           [writer=0x0804836f] write-only = {defs={0x0804836f}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v19403[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v19403[32]) 0x00000135a<4954>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v19403[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v19403[32]) 0x00000135a<4954>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19403[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19403[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19403[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19403[32])

0x08048375: mov    edx, dword ds:[ebx + 0xfffffffc<-4>]
registers:
  edx          [writer=0x08048375] write-only = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19477[8] (add[32] v19403[32] 0x00001359<4953>[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001359<4953>[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19471[8] (add[32] v19403[32] 0x00001358<4952>[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001358<4952>[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19465[8] (add[32] v19403[32] 0x00001357<4951>[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001357<4951>[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32])))
  ebx          [writer=0x0804836f] = {defs={0x0804836f}, expr=(add[32] v19403[32] 0x0000135a<4954>[32])}
  esp          [writer=0x0804836e] read-before-write = {defs={0x0804836e}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x08048375] write-only = {defs={0x08048375}, expr=0x0804837b<134513531>[32]}
  cf           [writer=0x0804836f] write-only = {defs={0x0804836f}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v19403[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v19403[32]) 0x00000135a<4954>[33]))}
  pf           [writer=0x0804836f] write-only = {defs={0x0804836f}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v19403[32] 0x0000135a<4954>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v19403[32] 0x0000135a<4954>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v19403[32] 0x0000135a<4954>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v19403[32] 0x0000135a<4954>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v19403[32] 0x0000135a<4954>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v19403[32] 0x0000135a<4954>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v19403[32] 0x0000135a<4954>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v19403[32] 0x0000135a<4954>[32]))))}
  af           [writer=0x0804836f] write-only = {defs={0x0804836f}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v19403[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v19403[32]) 0x00000135a<4954>[33]))}
  zf           [writer=0x0804836f] write-only = {defs={0x0804836f}, expr=(zerop[1] (add[32] v19403[32] 0x0000135a<4954>[32]))}
  sf           [writer=0x0804836f] write-only = {defs={0x0804836f}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v19403[32] 0x0000135a<4954>[32]))}
  of           [writer=0x0804836f] write-only = {defs={0x0804836f}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v19403[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v19403[32]) 0x00000135a<4954>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v19403[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v19403[32]) 0x00000135a<4954>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v19403[32] 0x00001359<4953>[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19456[32])
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v19403[32] 0x00001358<4952>[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19456[32])
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v19403[32] 0x00001357<4951>[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19456[32])
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v19403[32] 0x00001356<4950>[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19456[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19403[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19403[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19403[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19403[32])

0x0804837b: test   edx, edx
registers:
  edx          [writer=0x08048375] = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19477[8] (add[32] v19403[32] 0x00001359<4953>[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001359<4953>[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19471[8] (add[32] v19403[32] 0x00001358<4952>[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001358<4952>[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19465[8] (add[32] v19403[32] 0x00001357<4951>[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001357<4951>[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32])))
  ebx          [writer=0x0804836f] = {defs={0x0804836f}, expr=(add[32] v19403[32] 0x0000135a<4954>[32])}
  esp          [writer=0x0804836e] read-before-write = {defs={0x0804836e}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x0804837b] write-only = {defs={0x0804837b}, expr=0x0804837d<134513533>[32]}
  cf           [writer=0x0804837b] write-only = {defs={0x0804837b}, expr=false[1]}
  pf           [writer=0x0804837b] write-only = {defs={0x0804837b}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32])))))}
  af           [writer=0x0804837b] write-only = v19501[1]<unspec>
  zf           [writer=0x0804837b] write-only = {defs={0x0804837b}, expr=(zerop[1] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19477[8] (add[32] v19403[32] 0x00001359<4953>[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001359<4953>[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19471[8] (add[32] v19403[32] 0x00001358<4952>[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001358<4952>[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19465[8] (add[32] v19403[32] 0x00001357<4951>[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001357<4951>[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32]))))}
  sf           [writer=0x0804837b] write-only = {defs={0x0804837b}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19477[8] (add[32] v19403[32] 0x00001359<4953>[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001359<4953>[32])))}
  of           [writer=0x0804837b] write-only = {defs={0x0804837b}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v19403[32] 0x00001359<4953>[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19456[32])
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v19403[32] 0x00001358<4952>[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19456[32])
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v19403[32] 0x00001357<4951>[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19456[32])
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v19403[32] 0x00001356<4950>[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19456[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19403[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19403[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19403[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19403[32])

0x0804837d: je     0x08048384<<Insn>>
registers:
  edx          [writer=0x08048375] = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19477[8] (add[32] v19403[32] 0x00001359<4953>[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001359<4953>[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19471[8] (add[32] v19403[32] 0x00001358<4952>[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001358<4952>[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19465[8] (add[32] v19403[32] 0x00001357<4951>[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001357<4951>[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32])))
  ebx          [writer=0x0804836f] = {defs={0x0804836f}, expr=(add[32] v19403[32] 0x0000135a<4954>[32])}
  esp          [writer=0x0804836e] read-before-write = {defs={0x0804836e}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x0804837d] = {defs={0x0804837b,0x0804837d}, expr=(ite[32] (zerop[1] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19477[8] (add[32] v19403[32] 0x00001359<4953>[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001359<4953>[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19471[8] (add[32] v19403[32] 0x00001358<4952>[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001358<4952>[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19465[8] (add[32] v19403[32] 0x00001357<4951>[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001357<4951>[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32])))) 0x08048384<134513540>[32] 0x0804837f<134513535>[32])}
  cf           [writer=0x0804837b] write-only = {defs={0x0804837b}, expr=false[1]}
  pf           [writer=0x0804837b] write-only = {defs={0x0804837b}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32])))))}
  af           [writer=0x0804837b] write-only = v19501[1]<unspec>
  zf           [writer=0x0804837b] = {defs={0x0804837b}, expr=(zerop[1] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19477[8] (add[32] v19403[32] 0x00001359<4953>[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001359<4953>[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19471[8] (add[32] v19403[32] 0x00001358<4952>[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001358<4952>[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19465[8] (add[32] v19403[32] 0x00001357<4951>[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001357<4951>[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19460[8] (add[32] v19403[32] 0x00001356<4950>[32]) (extract[8] 0x00000000[32] 0x00000008[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001356<4950>[32]))))}
  sf           [writer=0x0804837b] write-only = {defs={0x0804837b}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m19477[8] (add[32] v19403[32] 0x00001359<4953>[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19456[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v19403[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v19403[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v19403[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v19403[32])) (add[32] v19403[32] 0x00001359<4953>[32])))}
  of           [writer=0x0804837b] write-only = {defs={0x0804837b}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v19403[32] 0x00001359<4953>[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19456[32])
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v19403[32] 0x00001358<4952>[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19456[32])
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v19403[32] 0x00001357<4951>[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19456[32])
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v19403[32] 0x00001356<4950>[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19456[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19403[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19403[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19403[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19403[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x0804837f: call   0x08048330<__gmon_start__@plt>
registers:
  esp          [writer=0x0804837f] read-before-write = {defs={0x0804837f}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x0804837f] = {defs={0x0804837f}, expr=0x08048330<134513456>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x0804837f}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x0804837f write-only value={defs={0x0804837f}, expr=0x08[8]}
  addr={defs={0x0804837f}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x0804837f write-only value={defs={0x0804837f}, expr=0x04[8]}
  addr={defs={0x0804837f}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x0804837f write-only value={defs={0x0804837f}, expr=0x83<-125>[8]}
  addr={defs={0x0804837f}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x0804837f write-only value={defs={0x0804837f}, expr=0x84<-124>[8]}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048384: pop    eax
registers:
  eax          [writer=0x08048384] write-only = v20466[32]
  esp          [writer=0x08048384] read-before-write = {defs={0x08048384}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x08048384] write-only = {defs={0x08048384}, expr=0x08048385<134513541>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v20466[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v20466[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v20466[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v20466[32])

0x08048385: pop    ebx
registers:
  eax          [writer=0x08048384] write-only = v20466[32]
  ebx          [writer=0x08048385] write-only = v20484[32]
  esp          [writer=0x08048385] read-before-write = {defs={0x08048384,0x08048385}, expr=(add[32] esp_0[32] 0x00000008[32])}
  eip          [writer=0x08048385] write-only = {defs={0x08048385}, expr=0x08048386<134513542>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 0x00000007[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v20484[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 0x00000006[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v20484[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 0x00000005[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v20484[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 0x00000004[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v20484[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v20466[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v20466[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v20466[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v20466[32])

0x08048386: leave  
registers:
  eax          [writer=0x08048384] write-only = v20466[32]
  ebx          [writer=0x08048385] write-only = v20484[32]
  esp          [writer=0x08048386] read-before-write = {defs={0x08048386}, expr=(add[32] ebp_0[32] 0x00000004[32])}
  ebp          [writer=0x08048386] read-before-write = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m20524[8] (add[32] ebp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20503[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v20466[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20466[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20466[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20466[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v20484[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20484[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20484[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20484[32])) (add[32] ebp_0[32] 0x00000003[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m20518[8] (add[32] ebp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20503[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v20466[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20466[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20466[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20466[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v20484[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20484[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20484[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20484[32])) (add[32] ebp_0[32] 0x00000002[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m20512[8] (add[32] ebp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20503[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v20466[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20466[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20466[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20466[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v20484[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20484[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20484[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20484[32])) (add[32] ebp_0[32] 0x00000001[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m20507[8] ebp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v20503[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v20466[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20466[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20466[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20466[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v20484[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20484[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20484[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20484[32])) ebp_0[32]))
  eip          [writer=0x08048386] write-only = {defs={0x08048386}, expr=0x08048387<134513543>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v20503[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v20503[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v20503[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v20503[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 0x00000007[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v20484[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 0x00000006[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v20484[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 0x00000005[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v20484[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 0x00000004[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v20484[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v20466[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v20466[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v20466[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v20466[32])

0x08048387: ret    
registers:
  eax          [writer=0x08048384] write-only = v20466[32]
  ebx          [writer=0x08048385] write-only = v20484[32]
  esp          [writer=0x08048387] read-before-write = {defs={0x08048386,0x08048387}, expr=(add[32] ebp_0[32] 0x00000008[32])}
  ebp          [writer=0x08048386] read-before-write = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m20524[8] (add[32] ebp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20503[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v20466[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20466[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20466[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20466[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v20484[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20484[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20484[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20484[32])) (add[32] ebp_0[32] 0x00000003[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m20518[8] (add[32] ebp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20503[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v20466[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20466[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20466[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20466[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v20484[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20484[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20484[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20484[32])) (add[32] ebp_0[32] 0x00000002[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m20512[8] (add[32] ebp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20503[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v20466[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20466[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20466[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20466[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v20484[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20484[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20484[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20484[32])) (add[32] ebp_0[32] 0x00000001[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m20507[8] ebp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v20503[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v20466[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20466[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20466[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20466[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v20484[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20484[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20484[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20484[32])) ebp_0[32]))
  eip          [writer=0x08048387] write-only = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m20550[8] (add[32] ebp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20529[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v20466[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20466[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20466[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20466[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v20484[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20484[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20484[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20484[32])) (add[32] ebp_0[32] 0x00000007[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m20544[8] (add[32] ebp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20529[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v20466[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20466[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20466[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20466[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v20484[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20484[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20484[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20484[32])) (add[32] ebp_0[32] 0x00000006[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m20538[8] (add[32] ebp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20529[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v20466[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20466[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20466[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20466[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v20484[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20484[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20484[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20484[32])) (add[32] ebp_0[32] 0x00000005[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m20533[8] (add[32] ebp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v20529[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v20466[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20466[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20466[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20466[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v20484[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v20484[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v20484[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v20484[32])) (add[32] ebp_0[32] 0x00000004[32])))
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048386}, expr=(add[32] ebp_0[32] 0x00000007[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v20529[32])
  addr={defs={0x08048386}, expr=(add[32] ebp_0[32] 0x00000006[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v20529[32])
  addr={defs={0x08048386}, expr=(add[32] ebp_0[32] 0x00000005[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v20529[32])
  addr={defs={0x08048386}, expr=(add[32] ebp_0[32] 0x00000004[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v20529[32])
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v20503[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v20503[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v20503[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v20503[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 0x00000007[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v20484[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 0x00000006[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v20484[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 0x00000005[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v20484[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 0x00000004[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v20484[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v20466[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v20466[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v20466[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v20466[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048390: push   ebp
registers:
  esp          [writer=0x08048390] read-before-write = {defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048390] write-only = {defs={0x08048390}, expr=0x08048391<134513553>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048390 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048390 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048390 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048390 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048391: mov    ebp, esp
registers:
  esp          [writer=0x08048390] read-before-write = {defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  ebp          [writer=0x08048391] read-before-write = {defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048391] write-only = {defs={0x08048391}, expr=0x08048393<134513555>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048390 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048390 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048390 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048390 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048393: sub    esp, 0x08
registers:
  esp          [writer=0x08048393] read-before-write = {defs={0x08048390,0x08048393}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048391] read-before-write = {defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048393] write-only = {defs={0x08048393}, expr=0x08048396<134513558>[32]}
  cf           [writer=0x08048393] write-only = {defs={0x08048390,0x08048393}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  pf           [writer=0x08048393] write-only = {defs={0x08048390,0x08048393}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))}
  af           [writer=0x08048393] write-only = {defs={0x08048390,0x08048393}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  zf           [writer=0x08048393] write-only = {defs={0x08048390,0x08048393}, expr=(zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  sf           [writer=0x08048393] write-only = {defs={0x08048390,0x08048393}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  of           [writer=0x08048393] write-only = {defs={0x08048390,0x08048393}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048390 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048390 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048390 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048390 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048396: cmp    byte ds:[0x080496f4<.bss>], 0x00
registers:
  esp          [writer=0x08048393] read-before-write = {defs={0x08048390,0x08048393}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048391] read-before-write = {defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048396] write-only = {defs={0x08048396}, expr=0x0804839d<134513565>[32]}
  cf           [writer=0x08048396] write-only = {defs={0x08048396}, expr=(invert[1] (extract[1] 0x00000008[32] 0x00000009[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) 0x0ff[9])))}
  pf           [writer=0x08048396] write-only = {defs={0x08048396}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32]))))}
  af           [writer=0x08048396] write-only = {defs={0x08048396}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) 0x0ff[9])))}
  zf           [writer=0x08048396] write-only = {defs={0x08048396}, expr=(zerop[1] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32]))}
  sf           [writer=0x08048396] write-only = {defs={0x08048396}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32]))}
  of           [writer=0x08048396] write-only = {defs={0x08048396}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048396}, expr=0x080496f4<134518516>[32]} read-before-write value=v21080[8]
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048390 value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048390 value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048390 value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048390 value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x0804839d: jne    0x080483cc<<Insn>>
registers:
  esp          [writer=0x08048393] read-before-write = {defs={0x08048390,0x08048393}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048391] read-before-write = {defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x0804839d] = {defs={0x08048396,0x0804839d}, expr=(ite[32] (invert[1] (zerop[1] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32]))) 0x080483cc<134513612>[32] 0x0804839f<134513567>[32])}
  cf           [writer=0x08048396] write-only = {defs={0x08048396}, expr=(invert[1] (extract[1] 0x00000008[32] 0x00000009[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) 0x0ff[9])))}
  pf           [writer=0x08048396] write-only = {defs={0x08048396}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32]))))}
  af           [writer=0x08048396] write-only = {defs={0x08048396}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32])) 0x0ff[9])))}
  zf           [writer=0x08048396] = {defs={0x08048396}, expr=(zerop[1] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32]))}
  sf           [writer=0x08048396] write-only = {defs={0x08048396}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21084[8] 0x080496f4<134518516>[32] v21080[8]) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f4<134518516>[32]))}
  of           [writer=0x08048396] write-only = {defs={0x08048396}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048396}, expr=0x080496f4<134518516>[32]} read-before-write value=v21080[8]
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048390 value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048390 value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048390 value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048390 value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x0804839f: mov    eax, dword ds:[0x080496f0<.data+8>]
registers:
  eax          [writer=0x0804839f] write-only = v21601[32]
  eip          [writer=0x0804839f] write-only = {defs={0x0804839f}, expr=0x080483a4<134513572>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x0804839f}, expr=0x080496f3<134518515>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v21601[32])
  addr={defs={0x0804839f}, expr=0x080496f2<134518514>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v21601[32])
  addr={defs={0x0804839f}, expr=0x080496f1<134518513>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v21601[32])
  addr={defs={0x0804839f}, expr=0x080496f0<134518512>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v21601[32])

0x080483a4: mov    edx, dword ds:[eax]
registers:
  eax          [writer=0x0804839f] = v21601[32]
  edx          [writer=0x080483a4] write-only = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21639[8] (add[32] v21601[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000003[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21633[8] (add[32] v21601[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000002[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21627[8] (add[32] v21601[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000001[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32]))
  eip          [writer=0x080483a4] write-only = {defs={0x080483a4}, expr=0x080483a6<134513574>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] v21601[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v21618[32])
  addr=(add[32] v21601[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v21618[32])
  addr=(add[32] v21601[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v21618[32])
  addr=v21601[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v21618[32])
  addr={defs={0x0804839f}, expr=0x080496f3<134518515>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v21601[32])
  addr={defs={0x0804839f}, expr=0x080496f2<134518514>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v21601[32])
  addr={defs={0x0804839f}, expr=0x080496f1<134518513>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v21601[32])
  addr={defs={0x0804839f}, expr=0x080496f0<134518512>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v21601[32])

0x080483a6: test   edx, edx
registers:
  eax          [writer=0x0804839f] = v21601[32]
  edx          [writer=0x080483a4] = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21639[8] (add[32] v21601[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000003[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21633[8] (add[32] v21601[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000002[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21627[8] (add[32] v21601[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000001[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32]))
  eip          [writer=0x080483a6] write-only = {defs={0x080483a6}, expr=0x080483a8<134513576>[32]}
  cf           [writer=0x080483a6] write-only = {defs={0x080483a6}, expr=false[1]}
  pf           [writer=0x080483a6] write-only = {defs={0x080483a6}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32])) (extract[1] 0x00000001[32] 0x00000002[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32])) (extract[1] 0x00000002[32] 0x00000003[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32])) (extract[1] 0x00000003[32] 0x00000004[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32])) (extract[1] 0x00000004[32] 0x00000005[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32])) (extract[1] 0x00000005[32] 0x00000006[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32])) (extract[1] 0x00000006[32] 0x00000007[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32])) (extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32]))))}
  af           [writer=0x080483a6] write-only = v21663[1]<unspec>
  zf           [writer=0x080483a6] write-only = {defs={0x080483a6}, expr=(zerop[1] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21639[8] (add[32] v21601[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000003[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21633[8] (add[32] v21601[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000002[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21627[8] (add[32] v21601[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000001[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32])))}
  sf           [writer=0x080483a6] write-only = {defs={0x080483a6}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21639[8] (add[32] v21601[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000003[32])))}
  of           [writer=0x080483a6] write-only = {defs={0x080483a6}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] v21601[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v21618[32])
  addr=(add[32] v21601[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v21618[32])
  addr=(add[32] v21601[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v21618[32])
  addr=v21601[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v21618[32])
  addr={defs={0x0804839f}, expr=0x080496f3<134518515>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v21601[32])
  addr={defs={0x0804839f}, expr=0x080496f2<134518514>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v21601[32])
  addr={defs={0x0804839f}, expr=0x080496f1<134518513>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v21601[32])
  addr={defs={0x0804839f}, expr=0x080496f0<134518512>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v21601[32])

0x080483a8: je     0x080483c5<<Insn>>
registers:
  eax          [writer=0x0804839f] = v21601[32]
  edx          [writer=0x080483a4] = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21639[8] (add[32] v21601[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000003[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21633[8] (add[32] v21601[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000002[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21627[8] (add[32] v21601[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000001[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32]))
  eip          [writer=0x080483a8] = {defs={0x080483a6,0x080483a8}, expr=(ite[32] (zerop[1] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21639[8] (add[32] v21601[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000003[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21633[8] (add[32] v21601[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000002[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21627[8] (add[32] v21601[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000001[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32]))) 0x080483c5<134513605>[32] 0x080483aa<134513578>[32])}
  cf           [writer=0x080483a6] write-only = {defs={0x080483a6}, expr=false[1]}
  pf           [writer=0x080483a6] write-only = {defs={0x080483a6}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32])) (extract[1] 0x00000001[32] 0x00000002[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32])) (extract[1] 0x00000002[32] 0x00000003[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32])) (extract[1] 0x00000003[32] 0x00000004[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32])) (extract[1] 0x00000004[32] 0x00000005[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32])) (extract[1] 0x00000005[32] 0x00000006[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32])) (extract[1] 0x00000006[32] 0x00000007[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32])) (extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32]))))}
  af           [writer=0x080483a6] write-only = v21663[1]<unspec>
  zf           [writer=0x080483a6] = {defs={0x080483a6}, expr=(zerop[1] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21639[8] (add[32] v21601[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000003[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21633[8] (add[32] v21601[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000002[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21627[8] (add[32] v21601[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000001[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21622[8] v21601[32] (extract[8] 0x00000000[32] 0x00000008[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) v21601[32])))}
  sf           [writer=0x080483a6] write-only = {defs={0x080483a6}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m21639[8] (add[32] v21601[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v21618[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v21601[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v21601[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v21601[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v21601[32])) (add[32] v21601[32] 0x00000003[32])))}
  of           [writer=0x080483a6] write-only = {defs={0x080483a6}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] v21601[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v21618[32])
  addr=(add[32] v21601[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v21618[32])
  addr=(add[32] v21601[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v21618[32])
  addr=v21601[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v21618[32])
  addr={defs={0x0804839f}, expr=0x080496f3<134518515>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v21601[32])
  addr={defs={0x0804839f}, expr=0x080496f2<134518514>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v21601[32])
  addr={defs={0x0804839f}, expr=0x080496f1<134518513>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v21601[32])
  addr={defs={0x0804839f}, expr=0x080496f0<134518512>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v21601[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080483aa: lea    esi, [esi + 0x00000000]
registers:
  eip          [writer=0x080483aa] write-only = {defs={0x080483aa}, expr=0x080483b0<134513584>[32]}
  fpstatus_top = 0x0[3]
memory:

0x080483b0: add    eax, 0x04
registers:
  eax          [writer=0x080483b0] read-before-write = {defs={0x080483b0}, expr=(add[32] eax_0[32] 0x00000004[32])}
  eip          [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=0x080483b3<134513587>[32]}
  cf           [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]))}
  pf           [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32]))))}
  af           [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]))}
  zf           [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=(zerop[1] (add[32] eax_0[32] 0x00000004[32]))}
  sf           [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] eax_0[32] 0x00000004[32]))}
  of           [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])))}
  fpstatus_top = 0x0[3]
memory:

0x080483b3: mov    dword ds:[0x080496f0<.data+8>], eax
registers:
  eax          [writer=0x080483b0] read-before-write = {defs={0x080483b0}, expr=(add[32] eax_0[32] 0x00000004[32])}
  eip          [writer=0x080483b3] write-only = {defs={0x080483b3}, expr=0x080483b8<134513592>[32]}
  cf           [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]))}
  pf           [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32]))))}
  af           [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]))}
  zf           [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=(zerop[1] (add[32] eax_0[32] 0x00000004[32]))}
  sf           [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] eax_0[32] 0x00000004[32]))}
  of           [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080483b3}, expr=0x080496f3<134518515>[32]} writer=0x080483b3 write-only value={defs={0x080483b0}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] eax_0[32] 0x00000004[32]))}
  addr={defs={0x080483b3}, expr=0x080496f2<134518514>[32]} writer=0x080483b3 write-only value={defs={0x080483b0}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] eax_0[32] 0x00000004[32]))}
  addr={defs={0x080483b3}, expr=0x080496f1<134518513>[32]} writer=0x080483b3 write-only value={defs={0x080483b0}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] eax_0[32] 0x00000004[32]))}
  addr={defs={0x080483b3}, expr=0x080496f0<134518512>[32]} writer=0x080483b3 write-only value={defs={0x080483b0}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32]))}

0x080483b8: call   edx
registers:
  eax          [writer=0x080483b0] read-before-write = {defs={0x080483b0}, expr=(add[32] eax_0[32] 0x00000004[32])}
  esp          [writer=0x080483b8] read-before-write = {defs={0x080483b8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080483b8] = edx_0[32]
  cf           [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]))}
  pf           [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32]))))}
  af           [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]))}
  zf           [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=(zerop[1] (add[32] eax_0[32] 0x00000004[32]))}
  sf           [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] eax_0[32] 0x00000004[32]))}
  of           [writer=0x080483b0] write-only = {defs={0x080483b0}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080483b8}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080483b8 write-only value={defs={0x080483b8}, expr=0x08[8]}
  addr={defs={0x080483b8}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080483b8 write-only value={defs={0x080483b8}, expr=0x04[8]}
  addr={defs={0x080483b8}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080483b8 write-only value={defs={0x080483b8}, expr=0x83<-125>[8]}
  addr={defs={0x080483b8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080483b8 write-only value={defs={0x080483b8}, expr=0xba<-70>[8]}
  addr={defs={0x080483b3}, expr=0x080496f3<134518515>[32]} writer=0x080483b3 write-only value={defs={0x080483b0}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] eax_0[32] 0x00000004[32]))}
  addr={defs={0x080483b3}, expr=0x080496f2<134518514>[32]} writer=0x080483b3 write-only value={defs={0x080483b0}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] eax_0[32] 0x00000004[32]))}
  addr={defs={0x080483b3}, expr=0x080496f1<134518513>[32]} writer=0x080483b3 write-only value={defs={0x080483b0}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] eax_0[32] 0x00000004[32]))}
  addr={defs={0x080483b3}, expr=0x080496f0<134518512>[32]} writer=0x080483b3 write-only value={defs={0x080483b0}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32]))}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080483ba: mov    eax, dword ds:[0x080496f0<.data+8>]
registers:
  eax          [writer=0x080483ba] write-only = v22677[32]
  eip          [writer=0x080483ba] write-only = {defs={0x080483ba}, expr=0x080483bf<134513599>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080483ba}, expr=0x080496f3<134518515>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v22677[32])
  addr={defs={0x080483ba}, expr=0x080496f2<134518514>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v22677[32])
  addr={defs={0x080483ba}, expr=0x080496f1<134518513>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v22677[32])
  addr={defs={0x080483ba}, expr=0x080496f0<134518512>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v22677[32])

0x080483bf: mov    edx, dword ds:[eax]
registers:
  eax          [writer=0x080483ba] = v22677[32]
  edx          [writer=0x080483bf] write-only = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22715[8] (add[32] v22677[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000003[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22709[8] (add[32] v22677[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000002[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22703[8] (add[32] v22677[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000001[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32]))
  eip          [writer=0x080483bf] write-only = {defs={0x080483bf}, expr=0x080483c1<134513601>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] v22677[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v22694[32])
  addr=(add[32] v22677[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v22694[32])
  addr=(add[32] v22677[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v22694[32])
  addr=v22677[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v22694[32])
  addr={defs={0x080483ba}, expr=0x080496f3<134518515>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v22677[32])
  addr={defs={0x080483ba}, expr=0x080496f2<134518514>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v22677[32])
  addr={defs={0x080483ba}, expr=0x080496f1<134518513>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v22677[32])
  addr={defs={0x080483ba}, expr=0x080496f0<134518512>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v22677[32])

0x080483c1: test   edx, edx
registers:
  eax          [writer=0x080483ba] = v22677[32]
  edx          [writer=0x080483bf] = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22715[8] (add[32] v22677[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000003[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22709[8] (add[32] v22677[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000002[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22703[8] (add[32] v22677[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000001[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32]))
  eip          [writer=0x080483c1] write-only = {defs={0x080483c1}, expr=0x080483c3<134513603>[32]}
  cf           [writer=0x080483c1] write-only = {defs={0x080483c1}, expr=false[1]}
  pf           [writer=0x080483c1] write-only = {defs={0x080483c1}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32])) (extract[1] 0x00000001[32] 0x00000002[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32])) (extract[1] 0x00000002[32] 0x00000003[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32])) (extract[1] 0x00000003[32] 0x00000004[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32])) (extract[1] 0x00000004[32] 0x00000005[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32])) (extract[1] 0x00000005[32] 0x00000006[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32])) (extract[1] 0x00000006[32] 0x00000007[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32])) (extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32]))))}
  af           [writer=0x080483c1] write-only = v22739[1]<unspec>
  zf           [writer=0x080483c1] write-only = {defs={0x080483c1}, expr=(zerop[1] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22715[8] (add[32] v22677[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000003[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22709[8] (add[32] v22677[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000002[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22703[8] (add[32] v22677[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000001[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32])))}
  sf           [writer=0x080483c1] write-only = {defs={0x080483c1}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22715[8] (add[32] v22677[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000003[32])))}
  of           [writer=0x080483c1] write-only = {defs={0x080483c1}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] v22677[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v22694[32])
  addr=(add[32] v22677[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v22694[32])
  addr=(add[32] v22677[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v22694[32])
  addr=v22677[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v22694[32])
  addr={defs={0x080483ba}, expr=0x080496f3<134518515>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v22677[32])
  addr={defs={0x080483ba}, expr=0x080496f2<134518514>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v22677[32])
  addr={defs={0x080483ba}, expr=0x080496f1<134518513>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v22677[32])
  addr={defs={0x080483ba}, expr=0x080496f0<134518512>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v22677[32])

0x080483c3: jne    0x080483b0<<Insn>>
registers:
  eax          [writer=0x080483ba] = v22677[32]
  edx          [writer=0x080483bf] = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22715[8] (add[32] v22677[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000003[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22709[8] (add[32] v22677[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000002[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22703[8] (add[32] v22677[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000001[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32]))
  eip          [writer=0x080483c3] = {defs={0x080483c1,0x080483c3}, expr=(ite[32] (invert[1] (zerop[1] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22715[8] (add[32] v22677[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000003[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22709[8] (add[32] v22677[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000002[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22703[8] (add[32] v22677[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000001[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32])))) 0x080483b0<134513584>[32] 0x080483c5<134513605>[32])}
  cf           [writer=0x080483c1] write-only = {defs={0x080483c1}, expr=false[1]}
  pf           [writer=0x080483c1] write-only = {defs={0x080483c1}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32])) (extract[1] 0x00000001[32] 0x00000002[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32])) (extract[1] 0x00000002[32] 0x00000003[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32])) (extract[1] 0x00000003[32] 0x00000004[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32])) (extract[1] 0x00000004[32] 0x00000005[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32])) (extract[1] 0x00000005[32] 0x00000006[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32])) (extract[1] 0x00000006[32] 0x00000007[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32])) (extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32]))))}
  af           [writer=0x080483c1] write-only = v22739[1]<unspec>
  zf           [writer=0x080483c1] = {defs={0x080483c1}, expr=(zerop[1] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22715[8] (add[32] v22677[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000003[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22709[8] (add[32] v22677[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000002[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22703[8] (add[32] v22677[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000001[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22698[8] v22677[32] (extract[8] 0x00000000[32] 0x00000008[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) v22677[32])))}
  sf           [writer=0x080483c1] write-only = {defs={0x080483c1}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m22715[8] (add[32] v22677[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v22694[32])) 0x080496f0<134518512>[32] (extract[8] 0x00000000[32] 0x00000008[32] v22677[32])) 0x080496f1<134518513>[32] (extract[8] 0x00000008[32] 0x00000010[32] v22677[32])) 0x080496f2<134518514>[32] (extract[8] 0x00000010[32] 0x00000018[32] v22677[32])) 0x080496f3<134518515>[32] (extract[8] 0x00000018[32] 0x00000020[32] v22677[32])) (add[32] v22677[32] 0x00000003[32])))}
  of           [writer=0x080483c1] write-only = {defs={0x080483c1}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] v22677[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v22694[32])
  addr=(add[32] v22677[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v22694[32])
  addr=(add[32] v22677[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v22694[32])
  addr=v22677[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v22694[32])
  addr={defs={0x080483ba}, expr=0x080496f3<134518515>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v22677[32])
  addr={defs={0x080483ba}, expr=0x080496f2<134518514>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v22677[32])
  addr={defs={0x080483ba}, expr=0x080496f1<134518513>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v22677[32])
  addr={defs={0x080483ba}, expr=0x080496f0<134518512>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v22677[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080483c5: mov    byte ds:[0x080496f4<.bss>], 0x01
registers:
  eip          [writer=0x080483c5] write-only = {defs={0x080483c5}, expr=0x080483cc<134513612>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080483c5}, expr=0x080496f4<134518516>[32]} writer=0x080483c5 write-only value={defs={0x080483c5}, expr=0x01[8]}

0x080483cc: leave  
registers:
  esp          [writer=0x080483cc] = {defs={0x080483cc}, expr=(add[32] ebp_0[32] 0x00000004[32])}
  ebp          [writer=0x080483cc] read-before-write = {defs={0x080483c5}, expr=(concat[32] (read[8] (write[8] (write[8] m23244[8] (add[32] ebp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v23223[32])) 0x080496f4<134518516>[32] 0x01[8]) (add[32] ebp_0[32] 0x00000003[32])) (read[8] (write[8] (write[8] m23238[8] (add[32] ebp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v23223[32])) 0x080496f4<134518516>[32] 0x01[8]) (add[32] ebp_0[32] 0x00000002[32])) (read[8] (write[8] (write[8] m23232[8] (add[32] ebp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v23223[32])) 0x080496f4<134518516>[32] 0x01[8]) (add[32] ebp_0[32] 0x00000001[32])) (read[8] (write[8] (write[8] m23227[8] ebp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v23223[32])) 0x080496f4<134518516>[32] 0x01[8]) ebp_0[32]))}
  eip          [writer=0x080483cc] write-only = {defs={0x080483cc}, expr=0x080483cd<134513613>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v23223[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v23223[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v23223[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v23223[32])
  addr={defs={0x080483c5}, expr=0x080496f4<134518516>[32]} writer=0x080483c5 value={defs={0x080483c5}, expr=0x01[8]}

0x080483cd: ret    
registers:
  esp          [writer=0x080483cd] = {defs={0x080483cc,0x080483cd}, expr=(add[32] ebp_0[32] 0x00000008[32])}
  ebp          [writer=0x080483cc] read-before-write = {defs={0x080483c5}, expr=(concat[32] (read[8] (write[8] (write[8] m23244[8] (add[32] ebp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v23223[32])) 0x080496f4<134518516>[32] 0x01[8]) (add[32] ebp_0[32] 0x00000003[32])) (read[8] (write[8] (write[8] m23238[8] (add[32] ebp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v23223[32])) 0x080496f4<134518516>[32] 0x01[8]) (add[32] ebp_0[32] 0x00000002[32])) (read[8] (write[8] (write[8] m23232[8] (add[32] ebp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v23223[32])) 0x080496f4<134518516>[32] 0x01[8]) (add[32] ebp_0[32] 0x00000001[32])) (read[8] (write[8] (write[8] m23227[8] ebp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v23223[32])) 0x080496f4<134518516>[32] 0x01[8]) ebp_0[32]))}
  eip          [writer=0x080483cd] write-only = {defs={0x080483c5}, expr=(concat[32] (read[8] (write[8] (write[8] m23270[8] (add[32] ebp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v23249[32])) 0x080496f4<134518516>[32] 0x01[8]) (add[32] ebp_0[32] 0x00000007[32])) (read[8] (write[8] (write[8] m23264[8] (add[32] ebp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v23249[32])) 0x080496f4<134518516>[32] 0x01[8]) (add[32] ebp_0[32] 0x00000006[32])) (read[8] (write[8] (write[8] m23258[8] (add[32] ebp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v23249[32])) 0x080496f4<134518516>[32] 0x01[8]) (add[32] ebp_0[32] 0x00000005[32])) (read[8] (write[8] (write[8] m23253[8] (add[32] ebp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v23249[32])) 0x080496f4<134518516>[32] 0x01[8]) (add[32] ebp_0[32] 0x00000004[32])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080483cc}, expr=(add[32] ebp_0[32] 0x00000007[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v23249[32])
  addr={defs={0x080483cc}, expr=(add[32] ebp_0[32] 0x00000006[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v23249[32])
  addr={defs={0x080483cc}, expr=(add[32] ebp_0[32] 0x00000005[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v23249[32])
  addr={defs={0x080483cc}, expr=(add[32] ebp_0[32] 0x00000004[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v23249[32])
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v23223[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v23223[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v23223[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v23223[32])
  addr={defs={0x080483c5}, expr=0x080496f4<134518516>[32]} writer=0x080483c5 value={defs={0x080483c5}, expr=0x01[8]}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080483d0: push   ebp
registers:
  esp          [writer=0x080483d0] read-before-write = {defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080483d0] write-only = {defs={0x080483d0}, expr=0x080483d1<134513617>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080483d0 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080483d0 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080483d0 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080483d0 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080483d1: mov    ebp, esp
registers:
  esp          [writer=0x080483d0] read-before-write = {defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  ebp          [writer=0x080483d1] read-before-write = {defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080483d1] write-only = {defs={0x080483d1}, expr=0x080483d3<134513619>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080483d0 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080483d0 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080483d0 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080483d0 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080483d3: sub    esp, 0x08
registers:
  esp          [writer=0x080483d3] read-before-write = {defs={0x080483d0,0x080483d3}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x080483d1] read-before-write = {defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080483d3] write-only = {defs={0x080483d3}, expr=0x080483d6<134513622>[32]}
  cf           [writer=0x080483d3] write-only = {defs={0x080483d0,0x080483d3}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  pf           [writer=0x080483d3] write-only = {defs={0x080483d0,0x080483d3}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))}
  af           [writer=0x080483d3] write-only = {defs={0x080483d0,0x080483d3}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  zf           [writer=0x080483d3] write-only = {defs={0x080483d0,0x080483d3}, expr=(zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  sf           [writer=0x080483d3] write-only = {defs={0x080483d0,0x080483d3}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  of           [writer=0x080483d3] write-only = {defs={0x080483d0,0x080483d3}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080483d0 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080483d0 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080483d0 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080483d0 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080483d6: mov    eax, dword ds:[0x080495f8<.jcr>]
registers:
  eax          [writer=0x080483d6] write-only = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23821[8] 0x080495fb<134518267>[32] (extract[8] 0x00000018[32] 0x00000020[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495fb<134518267>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23815[8] 0x080495fa<134518266>[32] (extract[8] 0x00000010[32] 0x00000018[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495fa<134518266>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23809[8] 0x080495f9<134518265>[32] (extract[8] 0x00000008[32] 0x00000010[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f9<134518265>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32]))
  esp          [writer=0x080483d3] read-before-write = {defs={0x080483d0,0x080483d3}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x080483d1] read-before-write = {defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080483d6] write-only = {defs={0x080483d6}, expr=0x080483db<134513627>[32]}
  cf           [writer=0x080483d3] write-only = {defs={0x080483d0,0x080483d3}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  pf           [writer=0x080483d3] write-only = {defs={0x080483d0,0x080483d3}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))}
  af           [writer=0x080483d3] write-only = {defs={0x080483d0,0x080483d3}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  zf           [writer=0x080483d3] write-only = {defs={0x080483d0,0x080483d3}, expr=(zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  sf           [writer=0x080483d3] write-only = {defs={0x080483d0,0x080483d3}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  of           [writer=0x080483d3] write-only = {defs={0x080483d0,0x080483d3}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080483d6}, expr=0x080495fb<134518267>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v23800[32])
  addr={defs={0x080483d6}, expr=0x080495fa<134518266>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v23800[32])
  addr={defs={0x080483d6}, expr=0x080495f9<134518265>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v23800[32])
  addr={defs={0x080483d6}, expr=0x080495f8<134518264>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v23800[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080483d0 value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080483d0 value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080483d0 value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080483d0 value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080483db: test   eax, eax
registers:
  eax          [writer=0x080483d6] = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23821[8] 0x080495fb<134518267>[32] (extract[8] 0x00000018[32] 0x00000020[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495fb<134518267>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23815[8] 0x080495fa<134518266>[32] (extract[8] 0x00000010[32] 0x00000018[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495fa<134518266>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23809[8] 0x080495f9<134518265>[32] (extract[8] 0x00000008[32] 0x00000010[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f9<134518265>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32]))
  esp          [writer=0x080483d3] read-before-write = {defs={0x080483d0,0x080483d3}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x080483d1] read-before-write = {defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080483db] write-only = {defs={0x080483db}, expr=0x080483dd<134513629>[32]}
  cf           [writer=0x080483db] write-only = {defs={0x080483db}, expr=false[1]}
  pf           [writer=0x080483db] write-only = {defs={0x080483db}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32]))))}
  af           [writer=0x080483db] write-only = v23845[1]<unspec>
  zf           [writer=0x080483db] write-only = {defs={0x080483db}, expr=(zerop[1] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23821[8] 0x080495fb<134518267>[32] (extract[8] 0x00000018[32] 0x00000020[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495fb<134518267>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23815[8] 0x080495fa<134518266>[32] (extract[8] 0x00000010[32] 0x00000018[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495fa<134518266>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23809[8] 0x080495f9<134518265>[32] (extract[8] 0x00000008[32] 0x00000010[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f9<134518265>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32])))}
  sf           [writer=0x080483db] write-only = {defs={0x080483db}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23821[8] 0x080495fb<134518267>[32] (extract[8] 0x00000018[32] 0x00000020[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495fb<134518267>[32]))}
  of           [writer=0x080483db] write-only = {defs={0x080483db}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080483d6}, expr=0x080495fb<134518267>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v23800[32])
  addr={defs={0x080483d6}, expr=0x080495fa<134518266>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v23800[32])
  addr={defs={0x080483d6}, expr=0x080495f9<134518265>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v23800[32])
  addr={defs={0x080483d6}, expr=0x080495f8<134518264>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v23800[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080483d0 value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080483d0 value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080483d0 value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080483d0 value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080483dd: je     0x08048400<<Insn>>
registers:
  eax          [writer=0x080483d6] = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23821[8] 0x080495fb<134518267>[32] (extract[8] 0x00000018[32] 0x00000020[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495fb<134518267>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23815[8] 0x080495fa<134518266>[32] (extract[8] 0x00000010[32] 0x00000018[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495fa<134518266>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23809[8] 0x080495f9<134518265>[32] (extract[8] 0x00000008[32] 0x00000010[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f9<134518265>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32]))
  esp          [writer=0x080483d3] read-before-write = {defs={0x080483d0,0x080483d3}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x080483d1] read-before-write = {defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080483dd] = {defs={0x080483db,0x080483dd}, expr=(ite[32] (zerop[1] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23821[8] 0x080495fb<134518267>[32] (extract[8] 0x00000018[32] 0x00000020[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495fb<134518267>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23815[8] 0x080495fa<134518266>[32] (extract[8] 0x00000010[32] 0x00000018[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495fa<134518266>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23809[8] 0x080495f9<134518265>[32] (extract[8] 0x00000008[32] 0x00000010[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f9<134518265>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32]))) 0x08048400<134513664>[32] 0x080483df<134513631>[32])}
  cf           [writer=0x080483db] write-only = {defs={0x080483db}, expr=false[1]}
  pf           [writer=0x080483db] write-only = {defs={0x080483db}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32]))))}
  af           [writer=0x080483db] write-only = v23845[1]<unspec>
  zf           [writer=0x080483db] = {defs={0x080483db}, expr=(zerop[1] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23821[8] 0x080495fb<134518267>[32] (extract[8] 0x00000018[32] 0x00000020[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495fb<134518267>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23815[8] 0x080495fa<134518266>[32] (extract[8] 0x00000010[32] 0x00000018[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495fa<134518266>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23809[8] 0x080495f9<134518265>[32] (extract[8] 0x00000008[32] 0x00000010[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f9<134518265>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23804[8] 0x080495f8<134518264>[32] (extract[8] 0x00000000[32] 0x00000008[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495f8<134518264>[32])))}
  sf           [writer=0x080483db] write-only = {defs={0x080483db}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m23821[8] 0x080495fb<134518267>[32] (extract[8] 0x00000018[32] 0x00000020[32] v23800[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080495fb<134518267>[32]))}
  of           [writer=0x080483db] write-only = {defs={0x080483db}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080483d6}, expr=0x080495fb<134518267>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v23800[32])
  addr={defs={0x080483d6}, expr=0x080495fa<134518266>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v23800[32])
  addr={defs={0x080483d6}, expr=0x080495f9<134518265>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v23800[32])
  addr={defs={0x080483d6}, expr=0x080495f8<134518264>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v23800[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080483d0 value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080483d0 value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080483d0 value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080483d0 value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080483df: mov    eax, 0x00000000
registers:
  eax          [writer=0x080483df] write-only = {defs={0x080483df}, expr=0x00000000[32]}
  eip          [writer=0x080483df] write-only = {defs={0x080483df}, expr=0x080483e4<134513636>[32]}
  fpstatus_top = 0x0[3]
memory:

0x080483e4: test   eax, eax
registers:
  eax          [writer=0x080483df] = {defs={0x080483df}, expr=0x00000000[32]}
  eip          [writer=0x080483e4] write-only = {defs={0x080483e4}, expr=0x080483e6<134513638>[32]}
  cf           [writer=0x080483e4] write-only = {defs={0x080483e4}, expr=false[1]}
  pf           [writer=0x080483e4] write-only = {defs={0x080483df,0x080483e4}, expr=true[1]}
  af           [writer=0x080483e4] write-only = v24337[1]<unspec>
  zf           [writer=0x080483e4] write-only = {defs={0x080483df,0x080483e4}, expr=true[1]}
  sf           [writer=0x080483e4] write-only = {defs={0x080483df,0x080483e4}, expr=false[1]}
  of           [writer=0x080483e4] write-only = {defs={0x080483e4}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:

0x080483e6: je     0x08048400<<Insn>>
registers:
  eax          [writer=0x080483df] = {defs={0x080483df}, expr=0x00000000[32]}
  eip          [writer=0x080483e6] = {defs={0x080483df,0x080483e4,0x080483e6}, expr=0x08048400<134513664>[32]}
  cf           [writer=0x080483e4] write-only = {defs={0x080483e4}, expr=false[1]}
  pf           [writer=0x080483e4] write-only = {defs={0x080483df,0x080483e4}, expr=true[1]}
  af           [writer=0x080483e4] write-only = v24337[1]<unspec>
  zf           [writer=0x080483e4] = {defs={0x080483df,0x080483e4}, expr=true[1]}
  sf           [writer=0x080483e4] write-only = {defs={0x080483df,0x080483e4}, expr=false[1]}
  of           [writer=0x080483e4] write-only = {defs={0x080483e4}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:

0x08048400: mov    esp, ebp
registers:
  eax          [writer=0x080483df] = {defs={0x080483df}, expr=0x00000000[32]}
  esp          [writer=0x08048400] write-only = ebp_0[32]
  eip          [writer=0x08048400] = {defs={0x08048400}, expr=0x08048402<134513666>[32]}
  cf           [writer=0x080483e4] write-only = {defs={0x080483e4}, expr=false[1]}
  pf           [writer=0x080483e4] write-only = {defs={0x080483df,0x080483e4}, expr=true[1]}
  af           [writer=0x080483e4] write-only = v24337[1]<unspec>
  zf           [writer=0x080483e4] = {defs={0x080483df,0x080483e4}, expr=true[1]}
  sf           [writer=0x080483e4] write-only = {defs={0x080483df,0x080483e4}, expr=false[1]}
  of           [writer=0x080483e4] write-only = {defs={0x080483e4}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:

0x08048402: pop    ebp
registers:
  eax          [writer=0x080483df] = {defs={0x080483df}, expr=0x00000000[32]}
  esp          [writer=0x08048402] = {defs={0x08048402}, expr=(add[32] ebp_0[32] 0x00000004[32])}
  ebp          [writer=0x08048402] read-before-write = v24344[32]
  eip          [writer=0x08048402] = {defs={0x08048402}, expr=0x08048403<134513667>[32]}
  cf           [writer=0x080483e4] write-only = {defs={0x080483e4}, expr=false[1]}
  pf           [writer=0x080483e4] write-only = {defs={0x080483df,0x080483e4}, expr=true[1]}
  af           [writer=0x080483e4] write-only = v24337[1]<unspec>
  zf           [writer=0x080483e4] = {defs={0x080483df,0x080483e4}, expr=true[1]}
  sf           [writer=0x080483e4] write-only = {defs={0x080483df,0x080483e4}, expr=false[1]}
  of           [writer=0x080483e4] write-only = {defs={0x080483e4}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v24344[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v24344[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v24344[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v24344[32])

0x08048403: ret    
registers:
  eax          [writer=0x080483df] = {defs={0x080483df}, expr=0x00000000[32]}
  esp          [writer=0x08048403] = {defs={0x08048402,0x08048403}, expr=(add[32] ebp_0[32] 0x00000008[32])}
  ebp          [writer=0x08048402] read-before-write = v24344[32]
  eip          [writer=0x08048403] = v24362[32]
  cf           [writer=0x080483e4] write-only = {defs={0x080483e4}, expr=false[1]}
  pf           [writer=0x080483e4] write-only = {defs={0x080483df,0x080483e4}, expr=true[1]}
  af           [writer=0x080483e4] write-only = v24337[1]<unspec>
  zf           [writer=0x080483e4] = {defs={0x080483df,0x080483e4}, expr=true[1]}
  sf           [writer=0x080483e4] write-only = {defs={0x080483df,0x080483e4}, expr=false[1]}
  of           [writer=0x080483e4] write-only = {defs={0x080483e4}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048402}, expr=(add[32] ebp_0[32] 0x00000007[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v24362[32])
  addr={defs={0x08048402}, expr=(add[32] ebp_0[32] 0x00000006[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v24362[32])
  addr={defs={0x08048402}, expr=(add[32] ebp_0[32] 0x00000005[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v24362[32])
  addr={defs={0x08048402}, expr=(add[32] ebp_0[32] 0x00000004[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v24362[32])
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v24344[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v24344[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v24344[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v24344[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080483e8: mov    dword ss:[esp], 0x080495f8<.jcr>
registers:
  eip          [writer=0x080483e8] write-only = {defs={0x080483e8}, expr=0x080483ef<134513647>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) writer=0x080483e8 write-only value={defs={0x080483e8}, expr=0x08[8]}
  addr=(add[32] esp_0[32] 0x00000002[32]) writer=0x080483e8 write-only value={defs={0x080483e8}, expr=0x04[8]}
  addr=(add[32] esp_0[32] 0x00000001[32]) writer=0x080483e8 write-only value={defs={0x080483e8}, expr=0x95<-107>[8]}
  addr=esp_0[32] writer=0x080483e8 write-only value={defs={0x080483e8}, expr=0xf8<-8>[8]}

0x080483ef: call   0x00000000
registers:
  esp          [writer=0x080483ef] read-before-write = {defs={0x080483ef}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080483ef] = {defs={0x080483ef}, expr=0x00000000[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080483ef}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080483ef write-only value={defs={0x080483ef}, expr=0x08[8]}
  addr={defs={0x080483ef}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080483ef write-only value={defs={0x080483ef}, expr=0x04[8]}
  addr={defs={0x080483ef}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080483ef write-only value={defs={0x080483ef}, expr=0x83<-125>[8]}
  addr={defs={0x080483ef}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080483ef write-only value={defs={0x080483ef}, expr=0xf4<-12>[8]}
  addr=(add[32] esp_0[32] 0x00000003[32]) writer=0x080483e8 write-only value={defs={0x080483e8}, expr=0x08[8]}
  addr=(add[32] esp_0[32] 0x00000002[32]) writer=0x080483e8 write-only value={defs={0x080483e8}, expr=0x04[8]}
  addr=(add[32] esp_0[32] 0x00000001[32]) writer=0x080483e8 write-only value={defs={0x080483e8}, expr=0x95<-107>[8]}
  addr=esp_0[32] writer=0x080483e8 write-only value={defs={0x080483e8}, expr=0xf8<-8>[8]}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080483f4: lea    esi, [esi + 0x00000000]
registers:
  eip          [writer=0x080483f4] write-only = {defs={0x080483f4}, expr=0x080483fa<134513658>[32]}
  fpstatus_top = 0x0[3]
memory:

0x080483fa: lea    edi, [edi + 0x00000000]
registers:
  eip          [writer=0x080483fa] write-only = {defs={0x080483fa}, expr=0x08048400<134513664>[32]}
  fpstatus_top = 0x0[3]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048410: push   ebp
registers:
  esp          [writer=0x08048410] read-before-write = {defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048410] write-only = {defs={0x08048410}, expr=0x08048411<134513681>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048411: mov    edx, 0x08048480<handler>
registers:
  edx          [writer=0x08048411] write-only = {defs={0x08048411}, expr=0x08048480<134513792>[32]}
  esp          [writer=0x08048410] read-before-write = {defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048411] write-only = {defs={0x08048411}, expr=0x08048416<134513686>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048416: mov    ebp, esp
registers:
  edx          [writer=0x08048411] write-only = {defs={0x08048411}, expr=0x08048480<134513792>[32]}
  esp          [writer=0x08048410] read-before-write = {defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  ebp          [writer=0x08048416] read-before-write = {defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048416] write-only = {defs={0x08048416}, expr=0x08048418<134513688>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048418: sub    esp, 0x08
registers:
  edx          [writer=0x08048411] write-only = {defs={0x08048411}, expr=0x08048480<134513792>[32]}
  esp          [writer=0x08048418] read-before-write = {defs={0x08048410,0x08048418}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048416] read-before-write = {defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048418] write-only = {defs={0x08048418}, expr=0x0804841b<134513691>[32]}
  cf           [writer=0x08048418] write-only = {defs={0x08048410,0x08048418}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  pf           [writer=0x08048418] write-only = {defs={0x08048410,0x08048418}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))}
  af           [writer=0x08048418] write-only = {defs={0x08048410,0x08048418}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  zf           [writer=0x08048418] write-only = {defs={0x08048410,0x08048418}, expr=(zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  sf           [writer=0x08048418] write-only = {defs={0x08048410,0x08048418}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  of           [writer=0x08048418] write-only = {defs={0x08048410,0x08048418}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x0804841b: and    esp, 0xf0<-16>
registers:
  edx          [writer=0x08048411] write-only = {defs={0x08048411}, expr=0x08048480<134513792>[32]}
  esp          [writer=0x0804841b] read-before-write = {defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])}
  ebp          [writer=0x08048416] read-before-write = {defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x0804841b] write-only = {defs={0x0804841b}, expr=0x0804841e<134513694>[32]}
  cf           [writer=0x0804841b] write-only = {defs={0x0804841b}, expr=false[1]}
  pf           [writer=0x0804841b] write-only = {defs={0x08048410,0x08048418,0x0804841b}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) false[1]))}
  af           [writer=0x0804841b] write-only = v25899[1]<unspec>
  zf           [writer=0x0804841b] write-only = {defs={0x08048410,0x08048418,0x0804841b}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))}
  sf           [writer=0x0804841b] write-only = {defs={0x08048410,0x08048418,0x0804841b}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))}
  of           [writer=0x0804841b] write-only = {defs={0x0804841b}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x0804841e: mov    dword ss:[esp + 0x04], edx
registers:
  edx          [writer=0x08048411] = {defs={0x08048411}, expr=0x08048480<134513792>[32]}
  esp          [writer=0x0804841b] read-before-write = {defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])}
  ebp          [writer=0x08048416] read-before-write = {defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x0804841e] write-only = {defs={0x0804841e}, expr=0x08048422<134513698>[32]}
  cf           [writer=0x0804841b] write-only = {defs={0x0804841b}, expr=false[1]}
  pf           [writer=0x0804841b] write-only = {defs={0x08048410,0x08048418,0x0804841b}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) false[1]))}
  af           [writer=0x0804841b] write-only = v25899[1]<unspec>
  zf           [writer=0x0804841b] write-only = {defs={0x08048410,0x08048418,0x0804841b}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))}
  sf           [writer=0x0804841b] write-only = {defs={0x08048410,0x08048418,0x0804841b}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))}
  of           [writer=0x0804841b] write-only = {defs={0x0804841b}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000007[32])} writer=0x0804841e write-only value={defs={0x08048411}, expr=0x08[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000006[32])} writer=0x0804841e write-only value={defs={0x08048411}, expr=0x04[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000005[32])} writer=0x0804841e write-only value={defs={0x08048411}, expr=0x84<-124>[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000004[32])} writer=0x0804841e write-only value={defs={0x08048411}, expr=0x80<-128>[8]}
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048422: mov    dword ss:[esp], 0x0000000a
registers:
  edx          [writer=0x08048411] = {defs={0x08048411}, expr=0x08048480<134513792>[32]}
  esp          [writer=0x0804841b] read-before-write = {defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])}
  ebp          [writer=0x08048416] read-before-write = {defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048422] write-only = {defs={0x08048422}, expr=0x08048429<134513705>[32]}
  cf           [writer=0x0804841b] write-only = {defs={0x0804841b}, expr=false[1]}
  pf           [writer=0x0804841b] write-only = {defs={0x08048410,0x08048418,0x0804841b}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) false[1]))}
  af           [writer=0x0804841b] write-only = v25899[1]<unspec>
  zf           [writer=0x0804841b] write-only = {defs={0x08048410,0x08048418,0x0804841b}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))}
  sf           [writer=0x0804841b] write-only = {defs={0x08048410,0x08048418,0x0804841b}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))}
  of           [writer=0x0804841b] write-only = {defs={0x0804841b}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000003[32])} writer=0x08048422 write-only value={defs={0x08048422}, expr=0x00[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000002[32])} writer=0x08048422 write-only value={defs={0x08048422}, expr=0x00[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000001[32])} writer=0x08048422 write-only value={defs={0x08048422}, expr=0x00[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])} writer=0x08048422 write-only value={defs={0x08048422}, expr=0x0a[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000007[32])} writer=0x0804841e write-only value={defs={0x08048411}, expr=0x08[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000006[32])} writer=0x0804841e write-only value={defs={0x08048411}, expr=0x04[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000005[32])} writer=0x0804841e write-only value={defs={0x08048411}, expr=0x84<-124>[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000004[32])} writer=0x0804841e write-only value={defs={0x08048411}, expr=0x80<-128>[8]}
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048429: call   0x080482f0<signal@plt>
registers:
  edx          [writer=0x08048411] = {defs={0x08048411}, expr=0x08048480<134513792>[32]}
  esp          [writer=0x08048429] read-before-write = {defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32])}
  ebp          [writer=0x08048416] read-before-write = {defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048429] = {defs={0x08048429}, expr=0x080482f0<134513392>[32]}
  cf           [writer=0x0804841b] write-only = {defs={0x0804841b}, expr=false[1]}
  pf           [writer=0x0804841b] write-only = {defs={0x08048410,0x08048418,0x0804841b}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) false[1]))}
  af           [writer=0x0804841b] write-only = v25899[1]<unspec>
  zf           [writer=0x0804841b] write-only = {defs={0x08048410,0x08048418,0x0804841b}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))}
  sf           [writer=0x0804841b] write-only = {defs={0x08048410,0x08048418,0x0804841b}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))}
  of           [writer=0x0804841b] write-only = {defs={0x0804841b}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32])} writer=0x08048429 write-only value={defs={0x08048429}, expr=0x08[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32])} writer=0x08048429 write-only value={defs={0x08048429}, expr=0x04[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32])} writer=0x08048429 write-only value={defs={0x08048429}, expr=0x84<-124>[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32])} writer=0x08048429 write-only value={defs={0x08048429}, expr=0x2e[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000003[32])} writer=0x08048422 write-only value={defs={0x08048422}, expr=0x00[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000002[32])} writer=0x08048422 write-only value={defs={0x08048422}, expr=0x00[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000001[32])} writer=0x08048422 write-only value={defs={0x08048422}, expr=0x00[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])} writer=0x08048422 write-only value={defs={0x08048422}, expr=0x0a[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000007[32])} writer=0x0804841e write-only value={defs={0x08048411}, expr=0x08[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000006[32])} writer=0x0804841e write-only value={defs={0x08048411}, expr=0x04[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000005[32])} writer=0x0804841e write-only value={defs={0x08048411}, expr=0x84<-124>[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000004[32])} writer=0x0804841e write-only value={defs={0x08048411}, expr=0x80<-128>[8]}
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048410 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x0804842e: mov    esp, ebp
registers:
  esp          [writer=0x0804842e] write-only = ebp_0[32]
  eip          [writer=0x0804842e] write-only = {defs={0x0804842e}, expr=0x08048430<134513712>[32]}
  fpstatus_top = 0x0[3]
memory:

0x08048430: xor    eax, eax
registers:
  eax          [writer=0x08048430] write-only = {defs={0x08048430}, expr=0x00000000[32]}
  esp          [writer=0x0804842e] write-only = ebp_0[32]
  eip          [writer=0x08048430] write-only = {defs={0x08048430}, expr=0x08048432<134513714>[32]}
  cf           [writer=0x08048430] write-only = {defs={0x08048430}, expr=false[1]}
  pf           [writer=0x08048430] write-only = {defs={0x08048430}, expr=true[1]}
  af           [writer=0x08048430] write-only = v26419[1]<unspec>
  zf           [writer=0x08048430] write-only = {defs={0x08048430}, expr=true[1]}
  sf           [writer=0x08048430] write-only = {defs={0x08048430}, expr=false[1]}
  of           [writer=0x08048430] write-only = {defs={0x08048430}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:

0x08048432: pop    ebp
registers:
  eax          [writer=0x08048430] write-only = {defs={0x08048430}, expr=0x00000000[32]}
  esp          [writer=0x08048432] = {defs={0x08048432}, expr=(add[32] ebp_0[32] 0x00000004[32])}
  ebp          [writer=0x08048432] read-before-write = v26422[32]
  eip          [writer=0x08048432] write-only = {defs={0x08048432}, expr=0x08048433<134513715>[32]}
  cf           [writer=0x08048430] write-only = {defs={0x08048430}, expr=false[1]}
  pf           [writer=0x08048430] write-only = {defs={0x08048430}, expr=true[1]}
  af           [writer=0x08048430] write-only = v26419[1]<unspec>
  zf           [writer=0x08048430] write-only = {defs={0x08048430}, expr=true[1]}
  sf           [writer=0x08048430] write-only = {defs={0x08048430}, expr=false[1]}
  of           [writer=0x08048430] write-only = {defs={0x08048430}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v26422[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v26422[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v26422[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v26422[32])

0x08048433: ret    
registers:
  eax          [writer=0x08048430] write-only = {defs={0x08048430}, expr=0x00000000[32]}
  esp          [writer=0x08048433] = {defs={0x08048432,0x08048433}, expr=(add[32] ebp_0[32] 0x00000008[32])}
  ebp          [writer=0x08048432] read-before-write = v26422[32]
  eip          [writer=0x08048433] write-only = v26440[32]
  cf           [writer=0x08048430] write-only = {defs={0x08048430}, expr=false[1]}
  pf           [writer=0x08048430] write-only = {defs={0x08048430}, expr=true[1]}
  af           [writer=0x08048430] write-only = v26419[1]<unspec>
  zf           [writer=0x08048430] write-only = {defs={0x08048430}, expr=true[1]}
  sf           [writer=0x08048430] write-only = {defs={0x08048430}, expr=false[1]}
  of           [writer=0x08048430] write-only = {defs={0x08048430}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048432}, expr=(add[32] ebp_0[32] 0x00000007[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v26440[32])
  addr={defs={0x08048432}, expr=(add[32] ebp_0[32] 0x00000006[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v26440[32])
  addr={defs={0x08048432}, expr=(add[32] ebp_0[32] 0x00000005[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v26440[32])
  addr={defs={0x08048432}, expr=(add[32] ebp_0[32] 0x00000004[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v26440[32])
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v26422[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v26422[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v26422[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v26422[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048440: push   ebp
registers:
  esp          [writer=0x08048440] read-before-write = {defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048440] write-only = {defs={0x08048440}, expr=0x08048441<134513729>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048441: mov    ebp, esp
registers:
  esp          [writer=0x08048440] read-before-write = {defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  ebp          [writer=0x08048441] read-before-write = {defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048441] write-only = {defs={0x08048441}, expr=0x08048443<134513731>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048443: sub    esp, 0x08
registers:
  esp          [writer=0x08048443] read-before-write = {defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048441] read-before-write = {defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048443] write-only = {defs={0x08048443}, expr=0x08048446<134513734>[32]}
  cf           [writer=0x08048443] write-only = {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  pf           [writer=0x08048443] write-only = {defs={0x08048440,0x08048443}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))}
  af           [writer=0x08048443] write-only = {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  zf           [writer=0x08048443] write-only = {defs={0x08048440,0x08048443}, expr=(zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  sf           [writer=0x08048443] write-only = {defs={0x08048440,0x08048443}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  of           [writer=0x08048443] write-only = {defs={0x08048440,0x08048443}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048446: mov    dword ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
registers:
  esp          [writer=0x08048443] read-before-write = {defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048441] read-before-write = {defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048446] write-only = {defs={0x08048446}, expr=0x0804844d<134513741>[32]}
  cf           [writer=0x08048443] write-only = {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  pf           [writer=0x08048443] write-only = {defs={0x08048440,0x08048443}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))}
  af           [writer=0x08048443] write-only = {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  zf           [writer=0x08048443] write-only = {defs={0x08048440,0x08048443}, expr=(zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  sf           [writer=0x08048443] write-only = {defs={0x08048440,0x08048443}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  of           [writer=0x08048443] write-only = {defs={0x08048440,0x08048443}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32])} writer=0x08048446 write-only value={defs={0x08048446}, expr=0x08[8]}
  addr={defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32])} writer=0x08048446 write-only value={defs={0x08048446}, expr=0x04[8]}
  addr={defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32])} writer=0x08048446 write-only value={defs={0x08048446}, expr=0x85<-123>[8]}
  addr={defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])} writer=0x08048446 write-only value={defs={0x08048446}, expr=0xd4<-44>[8]}
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x0804844d: call   0x08048300<puts@plt>
registers:
  esp          [writer=0x0804844d] read-before-write = {defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])}
  ebp          [writer=0x08048441] read-before-write = {defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x0804844d] = {defs={0x0804844d}, expr=0x08048300<134513408>[32]}
  cf           [writer=0x08048443] write-only = {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  pf           [writer=0x08048443] write-only = {defs={0x08048440,0x08048443}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))}
  af           [writer=0x08048443] write-only = {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  zf           [writer=0x08048443] write-only = {defs={0x08048440,0x08048443}, expr=(zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  sf           [writer=0x08048443] write-only = {defs={0x08048440,0x08048443}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  of           [writer=0x08048443] write-only = {defs={0x08048440,0x08048443}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x0804844d write-only value={defs={0x0804844d}, expr=0x08[8]}
  addr={defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x0804844d write-only value={defs={0x0804844d}, expr=0x04[8]}
  addr={defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x0804844d write-only value={defs={0x0804844d}, expr=0x84<-124>[8]}
  addr={defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x0804844d write-only value={defs={0x0804844d}, expr=0x52[8]}
  addr={defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32])} writer=0x08048446 write-only value={defs={0x08048446}, expr=0x08[8]}
  addr={defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32])} writer=0x08048446 write-only value={defs={0x08048446}, expr=0x04[8]}
  addr={defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32])} writer=0x08048446 write-only value={defs={0x08048446}, expr=0x85<-123>[8]}
  addr={defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])} writer=0x08048446 write-only value={defs={0x08048446}, expr=0xd4<-44>[8]}
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048440 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048452: mov    esp, ebp
registers:
  esp          [writer=0x08048452] write-only = ebp_0[32]
  eip          [writer=0x08048452] write-only = {defs={0x08048452}, expr=0x08048454<134513748>[32]}
  fpstatus_top = 0x0[3]
memory:

0x08048454: pop    ebp
registers:
  esp          [writer=0x08048454] = {defs={0x08048454}, expr=(add[32] ebp_0[32] 0x00000004[32])}
  ebp          [writer=0x08048454] read-before-write = v27479[32]
  eip          [writer=0x08048454] write-only = {defs={0x08048454}, expr=0x08048455<134513749>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v27479[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v27479[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v27479[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v27479[32])

0x08048455: ret    
registers:
  esp          [writer=0x08048455] = {defs={0x08048454,0x08048455}, expr=(add[32] ebp_0[32] 0x00000008[32])}
  ebp          [writer=0x08048454] read-before-write = v27479[32]
  eip          [writer=0x08048455] write-only = v27497[32]
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048454}, expr=(add[32] ebp_0[32] 0x00000007[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v27497[32])
  addr={defs={0x08048454}, expr=(add[32] ebp_0[32] 0x00000006[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v27497[32])
  addr={defs={0x08048454}, expr=(add[32] ebp_0[32] 0x00000005[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v27497[32])
  addr={defs={0x08048454}, expr=(add[32] ebp_0[32] 0x00000004[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v27497[32])
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v27479[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v27479[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v27479[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v27479[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048460: push   ebp
registers:
  esp          [writer=0x08048460] read-before-write = {defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048460] write-only = {defs={0x08048460}, expr=0x08048461<134513761>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048461: mov    ebp, esp
registers:
  esp          [writer=0x08048460] read-before-write = {defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  ebp          [writer=0x08048461] read-before-write = {defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048461] write-only = {defs={0x08048461}, expr=0x08048463<134513763>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048463: sub    esp, 0x08
registers:
  esp          [writer=0x08048463] read-before-write = {defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048461] read-before-write = {defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048463] write-only = {defs={0x08048463}, expr=0x08048466<134513766>[32]}
  cf           [writer=0x08048463] write-only = {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  pf           [writer=0x08048463] write-only = {defs={0x08048460,0x08048463}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))}
  af           [writer=0x08048463] write-only = {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  zf           [writer=0x08048463] write-only = {defs={0x08048460,0x08048463}, expr=(zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  sf           [writer=0x08048463] write-only = {defs={0x08048460,0x08048463}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  of           [writer=0x08048463] write-only = {defs={0x08048460,0x08048463}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048466: mov    dword ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
registers:
  esp          [writer=0x08048463] read-before-write = {defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048461] read-before-write = {defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048466] write-only = {defs={0x08048466}, expr=0x0804846d<134513773>[32]}
  cf           [writer=0x08048463] write-only = {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  pf           [writer=0x08048463] write-only = {defs={0x08048460,0x08048463}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))}
  af           [writer=0x08048463] write-only = {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  zf           [writer=0x08048463] write-only = {defs={0x08048460,0x08048463}, expr=(zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  sf           [writer=0x08048463] write-only = {defs={0x08048460,0x08048463}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  of           [writer=0x08048463] write-only = {defs={0x08048460,0x08048463}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32])} writer=0x08048466 write-only value={defs={0x08048466}, expr=0x08[8]}
  addr={defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32])} writer=0x08048466 write-only value={defs={0x08048466}, expr=0x04[8]}
  addr={defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32])} writer=0x08048466 write-only value={defs={0x08048466}, expr=0x85<-123>[8]}
  addr={defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])} writer=0x08048466 write-only value={defs={0x08048466}, expr=0xd4<-44>[8]}
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x0804846d: call   0x08048300<puts@plt>
registers:
  esp          [writer=0x0804846d] read-before-write = {defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])}
  ebp          [writer=0x08048461] read-before-write = {defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x0804846d] = {defs={0x0804846d}, expr=0x08048300<134513408>[32]}
  cf           [writer=0x08048463] write-only = {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  pf           [writer=0x08048463] write-only = {defs={0x08048460,0x08048463}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))}
  af           [writer=0x08048463] write-only = {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  zf           [writer=0x08048463] write-only = {defs={0x08048460,0x08048463}, expr=(zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  sf           [writer=0x08048463] write-only = {defs={0x08048460,0x08048463}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  of           [writer=0x08048463] write-only = {defs={0x08048460,0x08048463}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x0804846d write-only value={defs={0x0804846d}, expr=0x08[8]}
  addr={defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x0804846d write-only value={defs={0x0804846d}, expr=0x04[8]}
  addr={defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x0804846d write-only value={defs={0x0804846d}, expr=0x84<-124>[8]}
  addr={defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x0804846d write-only value={defs={0x0804846d}, expr=0x72[8]}
  addr={defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32])} writer=0x08048466 write-only value={defs={0x08048466}, expr=0x08[8]}
  addr={defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32])} writer=0x08048466 write-only value={defs={0x08048466}, expr=0x04[8]}
  addr={defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32])} writer=0x08048466 write-only value={defs={0x08048466}, expr=0x85<-123>[8]}
  addr={defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])} writer=0x08048466 write-only value={defs={0x08048466}, expr=0xd4<-44>[8]}
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048460 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048472: mov    dword ss:[esp], 0x00000000
registers:
  eip          [writer=0x08048472] write-only = {defs={0x08048472}, expr=0x08048479<134513785>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) writer=0x08048472 write-only value={defs={0x08048472}, expr=0x00[8]}
  addr=(add[32] esp_0[32] 0x00000002[32]) writer=0x08048472 write-only value={defs={0x08048472}, expr=0x00[8]}
  addr=(add[32] esp_0[32] 0x00000001[32]) writer=0x08048472 write-only value={defs={0x08048472}, expr=0x00[8]}
  addr=esp_0[32] writer=0x08048472 write-only value={defs={0x08048472}, expr=0x00[8]}

0x08048479: call   0x08048320<_exit@plt>
registers:
  esp          [writer=0x08048479] read-before-write = {defs={0x08048479}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048479] = {defs={0x08048479}, expr=0x08048320<134513440>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048479}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048479 write-only value={defs={0x08048479}, expr=0x08[8]}
  addr={defs={0x08048479}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048479 write-only value={defs={0x08048479}, expr=0x04[8]}
  addr={defs={0x08048479}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048479 write-only value={defs={0x08048479}, expr=0x84<-124>[8]}
  addr={defs={0x08048479}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048479 write-only value={defs={0x08048479}, expr=0x7e[8]}
  addr=(add[32] esp_0[32] 0x00000003[32]) writer=0x08048472 write-only value={defs={0x08048472}, expr=0x00[8]}
  addr=(add[32] esp_0[32] 0x00000002[32]) writer=0x08048472 write-only value={defs={0x08048472}, expr=0x00[8]}
  addr=(add[32] esp_0[32] 0x00000001[32]) writer=0x08048472 write-only value={defs={0x08048472}, expr=0x00[8]}
  addr=esp_0[32] writer=0x08048472 write-only value={defs={0x08048472}, expr=0x00[8]}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048480: push   ebp
registers:
  esp          [writer=0x08048480] read-before-write = {defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048480] write-only = {defs={0x08048480}, expr=0x08048481<134513793>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048480 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048480 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048480 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048480 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048481: mov    ebp, esp
registers:
  esp          [writer=0x08048480] read-before-write = {defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  ebp          [writer=0x08048481] read-before-write = {defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048481] write-only = {defs={0x08048481}, expr=0x08048483<134513795>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048480 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048480 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048480 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048480 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048483: sub    esp, 0x08
registers:
  esp          [writer=0x08048483] read-before-write = {defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048481] read-before-write = {defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048483] write-only = {defs={0x08048483}, expr=0x08048486<134513798>[32]}
  cf           [writer=0x08048483] write-only = {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  pf           [writer=0x08048483] write-only = {defs={0x08048480,0x08048483}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))}
  af           [writer=0x08048483] write-only = {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  zf           [writer=0x08048483] write-only = {defs={0x08048480,0x08048483}, expr=(zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  sf           [writer=0x08048483] write-only = {defs={0x08048480,0x08048483}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  of           [writer=0x08048483] write-only = {defs={0x08048480,0x08048483}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048480 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048480 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048480 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048480 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048486: inc    dword ds:[0x080496f8<.bss+4>]
registers:
  esp          [writer=0x08048483] read-before-write = {defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048481] read-before-write = {defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048486] write-only = {defs={0x08048486}, expr=0x0804848c<134513804>[32]}
  cf           [writer=0x08048483] write-only = {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  pf           [writer=0x08048486] write-only = {defs={0x08048486}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))))}
  af           [writer=0x08048486] write-only = {defs={0x08048486}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32]))) 0x000000001[33]))}
  zf           [writer=0x08048486] write-only = {defs={0x08048486}, expr=(zerop[1] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))}
  sf           [writer=0x08048486] write-only = {defs={0x08048486}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))}
  of           [writer=0x08048486] write-only = {defs={0x08048486}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32]))) 0x000000001[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32]))) 0x000000001[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048486}, expr=0x080496fb<134518523>[32]} writer=0x08048486 write-only value={defs={0x08048486}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))}
  addr={defs={0x08048486}, expr=0x080496fa<134518522>[32]} writer=0x08048486 write-only value={defs={0x08048486}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))}
  addr={defs={0x08048486}, expr=0x080496f9<134518521>[32]} writer=0x08048486 write-only value={defs={0x08048486}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))}
  addr={defs={0x08048486}, expr=0x080496f8<134518520>[32]} writer=0x08048486 write-only value={defs={0x08048486}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))}
  addr={defs={0x08048486}, expr=0x080496fb<134518523>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v29080[32])
  addr={defs={0x08048486}, expr=0x080496fa<134518522>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v29080[32])
  addr={defs={0x08048486}, expr=0x080496f9<134518521>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v29080[32])
  addr={defs={0x08048486}, expr=0x080496f8<134518520>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v29080[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048480 value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048480 value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048480 value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048480 value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x0804848c: mov    dword ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
registers:
  esp          [writer=0x08048483] read-before-write = {defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048481] read-before-write = {defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x0804848c] write-only = {defs={0x0804848c}, expr=0x08048493<134513811>[32]}
  cf           [writer=0x08048483] write-only = {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  pf           [writer=0x08048486] write-only = {defs={0x08048486}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))))}
  af           [writer=0x08048486] write-only = {defs={0x08048486}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32]))) 0x000000001[33]))}
  zf           [writer=0x08048486] write-only = {defs={0x08048486}, expr=(zerop[1] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))}
  sf           [writer=0x08048486] write-only = {defs={0x08048486}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))}
  of           [writer=0x08048486] write-only = {defs={0x08048486}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32]))) 0x000000001[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32]))) 0x000000001[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32])} writer=0x0804848c write-only value={defs={0x0804848c}, expr=0x08[8]}
  addr={defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32])} writer=0x0804848c write-only value={defs={0x0804848c}, expr=0x04[8]}
  addr={defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32])} writer=0x0804848c write-only value={defs={0x0804848c}, expr=0x85<-123>[8]}
  addr={defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])} writer=0x0804848c write-only value={defs={0x0804848c}, expr=0xd4<-44>[8]}
  addr={defs={0x08048486}, expr=0x080496fb<134518523>[32]} writer=0x08048486 write-only value={defs={0x08048486}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))}
  addr={defs={0x08048486}, expr=0x080496fa<134518522>[32]} writer=0x08048486 write-only value={defs={0x08048486}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))}
  addr={defs={0x08048486}, expr=0x080496f9<134518521>[32]} writer=0x08048486 write-only value={defs={0x08048486}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))}
  addr={defs={0x08048486}, expr=0x080496f8<134518520>[32]} writer=0x08048486 write-only value={defs={0x08048486}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))}
  addr={defs={0x08048486}, expr=0x080496fb<134518523>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v29080[32])
  addr={defs={0x08048486}, expr=0x080496fa<134518522>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v29080[32])
  addr={defs={0x08048486}, expr=0x080496f9<134518521>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v29080[32])
  addr={defs={0x08048486}, expr=0x080496f8<134518520>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v29080[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048480 value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048480 value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048480 value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048480 value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048493: call   0x08048300<puts@plt>
registers:
  esp          [writer=0x08048493] read-before-write = {defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])}
  ebp          [writer=0x08048481] read-before-write = {defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048493] = {defs={0x08048493}, expr=0x08048300<134513408>[32]}
  cf           [writer=0x08048483] write-only = {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))}
  pf           [writer=0x08048486] write-only = {defs={0x08048486}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))))}
  af           [writer=0x08048486] write-only = {defs={0x08048486}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32]))) 0x000000001[33]))}
  zf           [writer=0x08048486] write-only = {defs={0x08048486}, expr=(zerop[1] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))}
  sf           [writer=0x08048486] write-only = {defs={0x08048486}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))}
  of           [writer=0x08048486] write-only = {defs={0x08048486}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32]))) 0x000000001[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32]))) 0x000000001[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x08048493 write-only value={defs={0x08048493}, expr=0x08[8]}
  addr={defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x08048493 write-only value={defs={0x08048493}, expr=0x04[8]}
  addr={defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x08048493 write-only value={defs={0x08048493}, expr=0x84<-124>[8]}
  addr={defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x08048493 write-only value={defs={0x08048493}, expr=0x98<-104>[8]}
  addr={defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32])} writer=0x0804848c write-only value={defs={0x0804848c}, expr=0x08[8]}
  addr={defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32])} writer=0x0804848c write-only value={defs={0x0804848c}, expr=0x04[8]}
  addr={defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32])} writer=0x0804848c write-only value={defs={0x0804848c}, expr=0x85<-123>[8]}
  addr={defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])} writer=0x0804848c write-only value={defs={0x0804848c}, expr=0xd4<-44>[8]}
  addr={defs={0x08048486}, expr=0x080496fb<134518523>[32]} writer=0x08048486 write-only value={defs={0x08048486}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))}
  addr={defs={0x08048486}, expr=0x080496fa<134518522>[32]} writer=0x08048486 write-only value={defs={0x08048486}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))}
  addr={defs={0x08048486}, expr=0x080496f9<134518521>[32]} writer=0x08048486 write-only value={defs={0x08048486}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))}
  addr={defs={0x08048486}, expr=0x080496f8<134518520>[32]} writer=0x08048486 write-only value={defs={0x08048486}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29101[8] 0x080496fb<134518523>[32] (extract[8] 0x00000018[32] 0x00000020[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fb<134518523>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29095[8] 0x080496fa<134518522>[32] (extract[8] 0x00000010[32] 0x00000018[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496fa<134518522>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29089[8] 0x080496f9<134518521>[32] (extract[8] 0x00000008[32] 0x00000010[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f9<134518521>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m29084[8] 0x080496f8<134518520>[32] (extract[8] 0x00000000[32] 0x00000008[32] v29080[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) 0x080496f8<134518520>[32])) 0x00000001[32]))}
  addr={defs={0x08048486}, expr=0x080496fb<134518523>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v29080[32])
  addr={defs={0x08048486}, expr=0x080496fa<134518522>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v29080[32])
  addr={defs={0x08048486}, expr=0x080496f9<134518521>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v29080[32])
  addr={defs={0x08048486}, expr=0x080496f8<134518520>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v29080[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048480 value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048480 value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048480 value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048480 value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048498: mov    dword ss:[esp], 0x00000000
registers:
  eip          [writer=0x08048498] write-only = {defs={0x08048498}, expr=0x0804849f<134513823>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) writer=0x08048498 write-only value={defs={0x08048498}, expr=0x00[8]}
  addr=(add[32] esp_0[32] 0x00000002[32]) writer=0x08048498 write-only value={defs={0x08048498}, expr=0x00[8]}
  addr=(add[32] esp_0[32] 0x00000001[32]) writer=0x08048498 write-only value={defs={0x08048498}, expr=0x00[8]}
  addr=esp_0[32] writer=0x08048498 write-only value={defs={0x08048498}, expr=0x00[8]}

0x0804849f: call   0x08048320<_exit@plt>
registers:
  esp          [writer=0x0804849f] read-before-write = {defs={0x0804849f}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x0804849f] = {defs={0x0804849f}, expr=0x08048320<134513440>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x0804849f}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x0804849f write-only value={defs={0x0804849f}, expr=0x08[8]}
  addr={defs={0x0804849f}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x0804849f write-only value={defs={0x0804849f}, expr=0x04[8]}
  addr={defs={0x0804849f}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x0804849f write-only value={defs={0x0804849f}, expr=0x84<-124>[8]}
  addr={defs={0x0804849f}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x0804849f write-only value={defs={0x0804849f}, expr=0xa4<-92>[8]}
  addr=(add[32] esp_0[32] 0x00000003[32]) writer=0x08048498 write-only value={defs={0x08048498}, expr=0x00[8]}
  addr=(add[32] esp_0[32] 0x00000002[32]) writer=0x08048498 write-only value={defs={0x08048498}, expr=0x00[8]}
  addr=(add[32] esp_0[32] 0x00000001[32]) writer=0x08048498 write-only value={defs={0x08048498}, expr=0x00[8]}
  addr=esp_0[32] writer=0x08048498 write-only value={defs={0x08048498}, expr=0x00[8]}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080484b0: push   ebp
registers:
  esp          [writer=0x080484b0] read-before-write = {defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080484b0] write-only = {defs={0x080484b0}, expr=0x080484b1<134513841>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080484b1: mov    ebp, esp
registers:
  esp          [writer=0x080484b0] read-before-write = {defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  ebp          [writer=0x080484b1] read-before-write = {defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080484b1] write-only = {defs={0x080484b1}, expr=0x080484b3<134513843>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080484b3: push   edi
registers:
  esp          [writer=0x080484b3] read-before-write = {defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])}
  ebp          [writer=0x080484b1] read-before-write = {defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080484b3] write-only = {defs={0x080484b3}, expr=0x080484b4<134513844>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080484b4: push   esi
registers:
  esp          [writer=0x080484b4] read-before-write = {defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x080484b1] read-before-write = {defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080484b4] write-only = {defs={0x080484b4}, expr=0x080484b5<134513845>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32])} writer=0x080484b4 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32])} writer=0x080484b4 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32])} writer=0x080484b4 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])} writer=0x080484b4 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080484b5: push   ebx
registers:
  esp          [writer=0x080484b5] read-before-write = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])}
  ebp          [writer=0x080484b1] read-before-write = {defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080484b5] write-only = {defs={0x080484b5}, expr=0x080484b6<134513846>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x080484b5 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x080484b5 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x080484b5 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x080484b5 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32])} writer=0x080484b4 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32])} writer=0x080484b4 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32])} writer=0x080484b4 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])} writer=0x080484b4 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080484b6: sub    esp, 0x0c
registers:
  esp          [writer=0x080484b6] read-before-write = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])}
  ebp          [writer=0x080484b1] read-before-write = {defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080484b6] write-only = {defs={0x080484b6}, expr=0x080484b9<134513849>[32]}
  cf           [writer=0x080484b6] write-only = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))}
  pf           [writer=0x080484b6] write-only = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))))}
  af           [writer=0x080484b6] write-only = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))}
  zf           [writer=0x080484b6] write-only = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(zerop[1] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))}
  sf           [writer=0x080484b6] write-only = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))}
  of           [writer=0x080484b6] write-only = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x080484b5 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x080484b5 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x080484b5 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x080484b5 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32])} writer=0x080484b4 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32])} writer=0x080484b4 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32])} writer=0x080484b4 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])} writer=0x080484b4 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080484b9: call   0x080484be<<Insn>>
registers:
  esp          [writer=0x080484b9] read-before-write = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] esp_0[32] 0xffffffe0<4294967264,-32>[32])}
  ebp          [writer=0x080484b1] read-before-write = {defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080484b9] = {defs={0x080484b9}, expr=0x080484be<134513854>[32]}
  cf           [writer=0x080484b6] write-only = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))}
  pf           [writer=0x080484b6] write-only = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))))}
  af           [writer=0x080484b6] write-only = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))}
  zf           [writer=0x080484b6] write-only = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(zerop[1] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))}
  sf           [writer=0x080484b6] write-only = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))}
  of           [writer=0x080484b6] write-only = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] esp_0[32] 0xffffffe3<4294967267,-29>[32])} writer=0x080484b9 write-only value={defs={0x080484b9}, expr=0x08[8]}
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] esp_0[32] 0xffffffe2<4294967266,-30>[32])} writer=0x080484b9 write-only value={defs={0x080484b9}, expr=0x04[8]}
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] esp_0[32] 0xffffffe1<4294967265,-31>[32])} writer=0x080484b9 write-only value={defs={0x080484b9}, expr=0x84<-124>[8]}
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] esp_0[32] 0xffffffe0<4294967264,-32>[32])} writer=0x080484b9 write-only value={defs={0x080484b9}, expr=0xbe<-66>[8]}
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x080484b5 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x080484b5 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x080484b5 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x080484b5 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32])} writer=0x080484b4 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32])} writer=0x080484b4 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32])} writer=0x080484b4 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])} writer=0x080484b4 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x080484b3 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080484b0 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080484be: pop    ebx
registers:
  ebx          [writer=0x080484be] write-only = v30706[32]
  esp          [writer=0x080484be] read-before-write = {defs={0x080484be}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x080484be] write-only = {defs={0x080484be}, expr=0x080484bf<134513855>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v30706[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v30706[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v30706[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v30706[32])

0x080484bf: add    ebx, 0x0000120a<4618>
registers:
  ebx          [writer=0x080484bf] = {defs={0x080484bf}, expr=(add[32] v30706[32] 0x0000120a<4618>[32])}
  esp          [writer=0x080484be] read-before-write = {defs={0x080484be}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x080484bf] write-only = {defs={0x080484bf}, expr=0x080484c5<134513861>[32]}
  cf           [writer=0x080484bf] write-only = {defs={0x080484bf}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v30706[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v30706[32]) 0x00000120a<4618>[33]))}
  pf           [writer=0x080484bf] write-only = {defs={0x080484bf}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v30706[32] 0x0000120a<4618>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v30706[32] 0x0000120a<4618>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v30706[32] 0x0000120a<4618>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v30706[32] 0x0000120a<4618>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v30706[32] 0x0000120a<4618>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v30706[32] 0x0000120a<4618>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v30706[32] 0x0000120a<4618>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v30706[32] 0x0000120a<4618>[32]))))}
  af           [writer=0x080484bf] write-only = {defs={0x080484bf}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v30706[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v30706[32]) 0x00000120a<4618>[33]))}
  zf           [writer=0x080484bf] write-only = {defs={0x080484bf}, expr=(zerop[1] (add[32] v30706[32] 0x0000120a<4618>[32]))}
  sf           [writer=0x080484bf] write-only = {defs={0x080484bf}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v30706[32] 0x0000120a<4618>[32]))}
  of           [writer=0x080484bf] write-only = {defs={0x080484bf}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v30706[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v30706[32]) 0x00000120a<4618>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v30706[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v30706[32]) 0x00000120a<4618>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v30706[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v30706[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v30706[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v30706[32])

0x080484c5: call   0x080482c8<_init>
registers:
  ebx          [writer=0x080484bf] = {defs={0x080484bf}, expr=(add[32] v30706[32] 0x0000120a<4618>[32])}
  eip          [writer=0x080484c5] = {defs={0x080484c5}, expr=0x080482c8<134513352>[32]}
  cf           [writer=0x080484bf] write-only = {defs={0x080484bf}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v30706[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v30706[32]) 0x00000120a<4618>[33]))}
  pf           [writer=0x080484bf] write-only = {defs={0x080484bf}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v30706[32] 0x0000120a<4618>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v30706[32] 0x0000120a<4618>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v30706[32] 0x0000120a<4618>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v30706[32] 0x0000120a<4618>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v30706[32] 0x0000120a<4618>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v30706[32] 0x0000120a<4618>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v30706[32] 0x0000120a<4618>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v30706[32] 0x0000120a<4618>[32]))))}
  af           [writer=0x080484bf] write-only = {defs={0x080484bf}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v30706[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v30706[32]) 0x00000120a<4618>[33]))}
  zf           [writer=0x080484bf] write-only = {defs={0x080484bf}, expr=(zerop[1] (add[32] v30706[32] 0x0000120a<4618>[32]))}
  sf           [writer=0x080484bf] write-only = {defs={0x080484bf}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v30706[32] 0x0000120a<4618>[32]))}
  of           [writer=0x080484bf] write-only = {defs={0x080484bf}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v30706[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v30706[32]) 0x00000120a<4618>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v30706[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v30706[32]) 0x00000120a<4618>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080484be,0x080484c5}, expr=(add[32] esp_0[32] 0x00000003[32])} writer=0x080484c5 write-only value={defs={0x080484c5}, expr=0x08[8]}
  addr={defs={0x080484be,0x080484c5}, expr=(add[32] esp_0[32] 0x00000002[32])} writer=0x080484c5 write-only value={defs={0x080484c5}, expr=0x04[8]}
  addr={defs={0x080484be,0x080484c5}, expr=(add[32] esp_0[32] 0x00000001[32])} writer=0x080484c5 write-only value={defs={0x080484c5}, expr=0x84<-124>[8]}
  addr={defs={0x080484be,0x080484c5}, expr=esp_0[32]} writer=0x080484c5 write-only value={defs={0x080484c5}, expr=0xca<-54>[8]}
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v30706[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v30706[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v30706[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v30706[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080484ca: lea    eax, [ebx + 0xffffff20<-224>]
registers:
  eax          [writer=0x080484ca] write-only = {defs={0x080484ca}, expr=(add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])}
  eip          [writer=0x080484ca] write-only = {defs={0x080484ca}, expr=0x080484d0<134513872>[32]}
  fpstatus_top = 0x0[3]
memory:

0x080484d0: lea    edx, [ebx + 0xffffff20<-224>]
registers:
  eax          [writer=0x080484ca] write-only = {defs={0x080484ca}, expr=(add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])}
  edx          [writer=0x080484d0] write-only = {defs={0x080484d0}, expr=(add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])}
  eip          [writer=0x080484d0] write-only = {defs={0x080484d0}, expr=0x080484d6<134513878>[32]}
  fpstatus_top = 0x0[3]
memory:

0x080484d6: sub    eax, edx
registers:
  eax          [writer=0x080484d6] = {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])}
  edx          [writer=0x080484d0] = {defs={0x080484d0}, expr=(add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])}
  eip          [writer=0x080484d6] write-only = {defs={0x080484d6}, expr=0x080484d8<134513880>[32]}
  cf           [writer=0x080484d6] write-only = {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))))}
  pf           [writer=0x080484d6] write-only = {defs={0x080484ca,0x080484d0,0x080484d6}, expr=true[1]}
  af           [writer=0x080484d6] write-only = {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))))}
  zf           [writer=0x080484d6] write-only = {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(zerop[1] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))}
  sf           [writer=0x080484d6] write-only = {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))}
  of           [writer=0x080484d6] write-only = {defs={0x080484ca,0x080484d0,0x080484d6}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:

0x080484d8: sar    eax, 0x02
registers:
  eax          [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))}
  edx          [writer=0x080484d0] = {defs={0x080484d0}, expr=(add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])}
  eip          [writer=0x080484d8] write-only = {defs={0x080484d8}, expr=0x080484db<134513883>[32]}
  cf           [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))}
  pf           [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=true[1]}
  af           [writer=0x080484d8] = {defs={0x080484d8}, expr=v31291[1]<unspec>}
  zf           [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  sf           [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  of           [writer=0x080484d8] = {defs={0x080484d8}, expr=v31295[1]<unspec>}
  fpstatus_top = 0x0[3]
memory:

0x080484db: mov    dword ss:[ebp + 0xf0<-16>], eax
registers:
  eax          [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))}
  edx          [writer=0x080484d0] = {defs={0x080484d0}, expr=(add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])}
  eip          [writer=0x080484db] write-only = {defs={0x080484db}, expr=0x080484de<134513886>[32]}
  cf           [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))}
  pf           [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=true[1]}
  af           [writer=0x080484d8] = {defs={0x080484d8}, expr=v31291[1]<unspec>}
  zf           [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  sf           [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  of           [writer=0x080484d8] = {defs={0x080484d8}, expr=v31295[1]<unspec>}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x080484db write-only value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x080484db write-only value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x080484db write-only value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x080484db write-only value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}

0x080484de: jne    0x080484f0<<StaticData@0x080484e8>+8>
registers:
  eax          [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))}
  edx          [writer=0x080484d0] = {defs={0x080484d0}, expr=(add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])}
  eip          [writer=0x080484de] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484de}, expr=0x080484e0<134513888>[32]}
  cf           [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))}
  pf           [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=true[1]}
  af           [writer=0x080484d8] = {defs={0x080484d8}, expr=v31291[1]<unspec>}
  zf           [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  sf           [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  of           [writer=0x080484d8] = {defs={0x080484d8}, expr=v31295[1]<unspec>}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x080484db write-only value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x080484db write-only value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x080484db write-only value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x080484db write-only value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}

0x080484e0: add    esp, 0x0c
registers:
  eax          [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))}
  edx          [writer=0x080484d0] = {defs={0x080484d0}, expr=(add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])}
  esp          [writer=0x080484e0] read-before-write = {defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000c[32])}
  eip          [writer=0x080484e0] = {defs={0x080484e0}, expr=0x080484e3<134513891>[32]}
  cf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  pf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))}
  af           [writer=0x080484e0] = {defs={0x080484e0}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  zf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(zerop[1] (add[32] esp_0[32] 0x0000000c[32]))}
  sf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))}
  of           [writer=0x080484e0] = {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x080484db write-only value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x080484db write-only value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x080484db write-only value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x080484db write-only value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}

0x080484e3: pop    ebx
registers:
  eax          [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))}
  edx          [writer=0x080484d0] = {defs={0x080484d0}, expr=(add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])}
  ebx          [writer=0x080484e3] read-before-write = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31384[8] (add[32] esp_0[32] 0x0000000f[32]) (extract[8] 0x00000018[32] 0x00000020[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000f[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31378[8] (add[32] esp_0[32] 0x0000000e[32]) (extract[8] 0x00000010[32] 0x00000018[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000e[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31372[8] (add[32] esp_0[32] 0x0000000d[32]) (extract[8] 0x00000008[32] 0x00000010[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000d[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31367[8] (add[32] esp_0[32] 0x0000000c[32]) (extract[8] 0x00000000[32] 0x00000008[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000c[32])))}
  esp          [writer=0x080484e3] read-before-write = {defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 0x00000010[32])}
  eip          [writer=0x080484e3] = {defs={0x080484e3}, expr=0x080484e4<134513892>[32]}
  cf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  pf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))}
  af           [writer=0x080484e0] = {defs={0x080484e0}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  zf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(zerop[1] (add[32] esp_0[32] 0x0000000c[32]))}
  sf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))}
  of           [writer=0x080484e0] = {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000f[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v31363[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000e[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v31363[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000d[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v31363[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000c[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v31363[32])
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}

0x080484e4: pop    esi
registers:
  eax          [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))}
  edx          [writer=0x080484d0] = {defs={0x080484d0}, expr=(add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])}
  ebx          [writer=0x080484e3] read-before-write = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31384[8] (add[32] esp_0[32] 0x0000000f[32]) (extract[8] 0x00000018[32] 0x00000020[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000f[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31378[8] (add[32] esp_0[32] 0x0000000e[32]) (extract[8] 0x00000010[32] 0x00000018[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000e[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31372[8] (add[32] esp_0[32] 0x0000000d[32]) (extract[8] 0x00000008[32] 0x00000010[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000d[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31367[8] (add[32] esp_0[32] 0x0000000c[32]) (extract[8] 0x00000000[32] 0x00000008[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000c[32])))}
  esp          [writer=0x080484e4] read-before-write = {defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 0x00000014[32])}
  esi          [writer=0x080484e4] write-only = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31410[8] (add[32] esp_0[32] 0x00000013[32]) (extract[8] 0x00000018[32] 0x00000020[32] v31389[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000013[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31404[8] (add[32] esp_0[32] 0x00000012[32]) (extract[8] 0x00000010[32] 0x00000018[32] v31389[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000012[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31398[8] (add[32] esp_0[32] 0x00000011[32]) (extract[8] 0x00000008[32] 0x00000010[32] v31389[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000011[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31393[8] (add[32] esp_0[32] 0x00000010[32]) (extract[8] 0x00000000[32] 0x00000008[32] v31389[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000010[32])))}
  eip          [writer=0x080484e4] = {defs={0x080484e4}, expr=0x080484e5<134513893>[32]}
  cf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  pf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))}
  af           [writer=0x080484e0] = {defs={0x080484e0}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  zf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(zerop[1] (add[32] esp_0[32] 0x0000000c[32]))}
  sf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))}
  of           [writer=0x080484e0] = {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 0x00000013[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v31389[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 0x00000012[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v31389[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 0x00000011[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v31389[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 0x00000010[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v31389[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000f[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v31363[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000e[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v31363[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000d[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v31363[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000c[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v31363[32])
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}

0x080484e5: pop    edi
registers:
  eax          [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))}
  edx          [writer=0x080484d0] = {defs={0x080484d0}, expr=(add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])}
  ebx          [writer=0x080484e3] read-before-write = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31384[8] (add[32] esp_0[32] 0x0000000f[32]) (extract[8] 0x00000018[32] 0x00000020[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000f[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31378[8] (add[32] esp_0[32] 0x0000000e[32]) (extract[8] 0x00000010[32] 0x00000018[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000e[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31372[8] (add[32] esp_0[32] 0x0000000d[32]) (extract[8] 0x00000008[32] 0x00000010[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000d[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31367[8] (add[32] esp_0[32] 0x0000000c[32]) (extract[8] 0x00000000[32] 0x00000008[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000c[32])))}
  esp          [writer=0x080484e5] read-before-write = {defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] esp_0[32] 0x00000018[32])}
  esi          [writer=0x080484e4] write-only = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31410[8] (add[32] esp_0[32] 0x00000013[32]) (extract[8] 0x00000018[32] 0x00000020[32] v31389[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000013[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31404[8] (add[32] esp_0[32] 0x00000012[32]) (extract[8] 0x00000010[32] 0x00000018[32] v31389[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000012[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31398[8] (add[32] esp_0[32] 0x00000011[32]) (extract[8] 0x00000008[32] 0x00000010[32] v31389[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000011[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31393[8] (add[32] esp_0[32] 0x00000010[32]) (extract[8] 0x00000000[32] 0x00000008[32] v31389[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000010[32])))}
  edi          [writer=0x080484e5] write-only = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31436[8] (add[32] esp_0[32] 0x00000017[32]) (extract[8] 0x00000018[32] 0x00000020[32] v31415[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000017[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31430[8] (add[32] esp_0[32] 0x00000016[32]) (extract[8] 0x00000010[32] 0x00000018[32] v31415[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000016[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31424[8] (add[32] esp_0[32] 0x00000015[32]) (extract[8] 0x00000008[32] 0x00000010[32] v31415[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000015[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31419[8] (add[32] esp_0[32] 0x00000014[32]) (extract[8] 0x00000000[32] 0x00000008[32] v31415[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000014[32])))}
  eip          [writer=0x080484e5] = {defs={0x080484e5}, expr=0x080484e6<134513894>[32]}
  cf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  pf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))}
  af           [writer=0x080484e0] = {defs={0x080484e0}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  zf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(zerop[1] (add[32] esp_0[32] 0x0000000c[32]))}
  sf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))}
  of           [writer=0x080484e0] = {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 0x00000017[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v31415[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 0x00000016[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v31415[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 0x00000015[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v31415[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 0x00000014[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v31415[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 0x00000013[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v31389[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 0x00000012[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v31389[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 0x00000011[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v31389[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 0x00000010[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v31389[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000f[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v31363[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000e[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v31363[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000d[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v31363[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000c[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v31363[32])
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}

0x080484e6: pop    ebp
registers:
  eax          [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))}
  edx          [writer=0x080484d0] = {defs={0x080484d0}, expr=(add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])}
  ebx          [writer=0x080484e3] read-before-write = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31384[8] (add[32] esp_0[32] 0x0000000f[32]) (extract[8] 0x00000018[32] 0x00000020[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000f[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31378[8] (add[32] esp_0[32] 0x0000000e[32]) (extract[8] 0x00000010[32] 0x00000018[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000e[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31372[8] (add[32] esp_0[32] 0x0000000d[32]) (extract[8] 0x00000008[32] 0x00000010[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000d[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31367[8] (add[32] esp_0[32] 0x0000000c[32]) (extract[8] 0x00000000[32] 0x00000008[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000c[32])))}
  esp          [writer=0x080484e6] read-before-write = {defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] esp_0[32] 0x0000001c[32])}
  ebp          [writer=0x080484e6] read-before-write = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31462[8] (add[32] esp_0[32] 0x0000001b[32]) (extract[8] 0x00000018[32] 0x00000020[32] v31441[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000001b[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31456[8] (add[32] esp_0[32] 0x0000001a[32]) (extract[8] 0x00000010[32] 0x00000018[32] v31441[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000001a[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31450[8] (add[32] esp_0[32] 0x00000019[32]) (extract[8] 0x00000008[32] 0x00000010[32] v31441[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000019[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31445[8] (add[32] esp_0[32] 0x00000018[32]) (extract[8] 0x00000000[32] 0x00000008[32] v31441[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000018[32])))}
  esi          [writer=0x080484e4] write-only = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31410[8] (add[32] esp_0[32] 0x00000013[32]) (extract[8] 0x00000018[32] 0x00000020[32] v31389[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000013[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31404[8] (add[32] esp_0[32] 0x00000012[32]) (extract[8] 0x00000010[32] 0x00000018[32] v31389[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000012[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31398[8] (add[32] esp_0[32] 0x00000011[32]) (extract[8] 0x00000008[32] 0x00000010[32] v31389[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000011[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31393[8] (add[32] esp_0[32] 0x00000010[32]) (extract[8] 0x00000000[32] 0x00000008[32] v31389[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000010[32])))}
  edi          [writer=0x080484e5] write-only = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31436[8] (add[32] esp_0[32] 0x00000017[32]) (extract[8] 0x00000018[32] 0x00000020[32] v31415[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000017[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31430[8] (add[32] esp_0[32] 0x00000016[32]) (extract[8] 0x00000010[32] 0x00000018[32] v31415[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000016[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31424[8] (add[32] esp_0[32] 0x00000015[32]) (extract[8] 0x00000008[32] 0x00000010[32] v31415[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000015[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31419[8] (add[32] esp_0[32] 0x00000014[32]) (extract[8] 0x00000000[32] 0x00000008[32] v31415[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000014[32])))}
  eip          [writer=0x080484e6] = {defs={0x080484e6}, expr=0x080484e7<134513895>[32]}
  cf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  pf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))}
  af           [writer=0x080484e0] = {defs={0x080484e0}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  zf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(zerop[1] (add[32] esp_0[32] 0x0000000c[32]))}
  sf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))}
  of           [writer=0x080484e0] = {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] esp_0[32] 0x0000001b[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v31441[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] esp_0[32] 0x0000001a[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v31441[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] esp_0[32] 0x00000019[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v31441[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] esp_0[32] 0x00000018[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v31441[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 0x00000017[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v31415[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 0x00000016[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v31415[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 0x00000015[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v31415[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 0x00000014[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v31415[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 0x00000013[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v31389[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 0x00000012[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v31389[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 0x00000011[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v31389[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 0x00000010[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v31389[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000f[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v31363[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000e[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v31363[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000d[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v31363[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000c[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v31363[32])
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}

0x080484e7: ret    
registers:
  eax          [writer=0x080484d8] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))}
  edx          [writer=0x080484d0] = {defs={0x080484d0}, expr=(add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])}
  ebx          [writer=0x080484e3] read-before-write = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31384[8] (add[32] esp_0[32] 0x0000000f[32]) (extract[8] 0x00000018[32] 0x00000020[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000f[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31378[8] (add[32] esp_0[32] 0x0000000e[32]) (extract[8] 0x00000010[32] 0x00000018[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000e[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31372[8] (add[32] esp_0[32] 0x0000000d[32]) (extract[8] 0x00000008[32] 0x00000010[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000d[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31367[8] (add[32] esp_0[32] 0x0000000c[32]) (extract[8] 0x00000000[32] 0x00000008[32] v31363[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000000c[32])))}
  esp          [writer=0x080484e7] read-before-write = {defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6,0x080484e7}, expr=(add[32] esp_0[32] 0x00000020[32])}
  ebp          [writer=0x080484e6] read-before-write = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31462[8] (add[32] esp_0[32] 0x0000001b[32]) (extract[8] 0x00000018[32] 0x00000020[32] v31441[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000001b[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31456[8] (add[32] esp_0[32] 0x0000001a[32]) (extract[8] 0x00000010[32] 0x00000018[32] v31441[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000001a[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31450[8] (add[32] esp_0[32] 0x00000019[32]) (extract[8] 0x00000008[32] 0x00000010[32] v31441[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000019[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31445[8] (add[32] esp_0[32] 0x00000018[32]) (extract[8] 0x00000000[32] 0x00000008[32] v31441[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000018[32])))}
  esi          [writer=0x080484e4] write-only = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31410[8] (add[32] esp_0[32] 0x00000013[32]) (extract[8] 0x00000018[32] 0x00000020[32] v31389[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000013[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31404[8] (add[32] esp_0[32] 0x00000012[32]) (extract[8] 0x00000010[32] 0x00000018[32] v31389[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000012[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31398[8] (add[32] esp_0[32] 0x00000011[32]) (extract[8] 0x00000008[32] 0x00000010[32] v31389[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000011[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31393[8] (add[32] esp_0[32] 0x00000010[32]) (extract[8] 0x00000000[32] 0x00000008[32] v31389[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000010[32])))}
  edi          [writer=0x080484e5] write-only = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31436[8] (add[32] esp_0[32] 0x00000017[32]) (extract[8] 0x00000018[32] 0x00000020[32] v31415[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000017[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31430[8] (add[32] esp_0[32] 0x00000016[32]) (extract[8] 0x00000010[32] 0x00000018[32] v31415[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000016[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31424[8] (add[32] esp_0[32] 0x00000015[32]) (extract[8] 0x00000008[32] 0x00000010[32] v31415[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000015[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31419[8] (add[32] esp_0[32] 0x00000014[32]) (extract[8] 0x00000000[32] 0x00000008[32] v31415[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x00000014[32])))}
  eip          [writer=0x080484e7] = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31488[8] (add[32] esp_0[32] 0x0000001f[32]) (extract[8] 0x00000018[32] 0x00000020[32] v31467[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000001f[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31482[8] (add[32] esp_0[32] 0x0000001e[32]) (extract[8] 0x00000010[32] 0x00000018[32] v31467[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000001e[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31476[8] (add[32] esp_0[32] 0x0000001d[32]) (extract[8] 0x00000008[32] 0x00000010[32] v31467[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000001d[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] m31471[8] (add[32] esp_0[32] 0x0000001c[32]) (extract[8] 0x00000000[32] 0x00000008[32] v31467[32])) (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) (extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) (extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) (extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) (add[32] esp_0[32] 0x0000001c[32])))}
  cf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  pf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))}
  af           [writer=0x080484e0] = {defs={0x080484e0}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  zf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(zerop[1] (add[32] esp_0[32] 0x0000000c[32]))}
  sf           [writer=0x080484e0] = {defs={0x080484e0}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))}
  of           [writer=0x080484e0] = {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] esp_0[32] 0x0000001f[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v31467[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] esp_0[32] 0x0000001e[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v31467[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] esp_0[32] 0x0000001d[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v31467[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] esp_0[32] 0x0000001c[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v31467[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] esp_0[32] 0x0000001b[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v31441[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] esp_0[32] 0x0000001a[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v31441[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] esp_0[32] 0x00000019[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v31441[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] esp_0[32] 0x00000018[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v31441[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 0x00000017[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v31415[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 0x00000016[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v31415[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 0x00000015[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v31415[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 0x00000014[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v31415[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 0x00000013[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v31389[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 0x00000012[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v31389[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 0x00000011[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v31389[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 0x00000010[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v31389[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000f[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v31363[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000e[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v31363[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000d[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v31363[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 0x0000000c[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v31363[32])
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x080484db value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048520: push   ebp
registers:
  esp          [writer=0x08048520] read-before-write = {defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048520] write-only = {defs={0x08048520}, expr=0x08048521<134513953>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048521: mov    ebp, esp
registers:
  esp          [writer=0x08048520] read-before-write = {defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  ebp          [writer=0x08048521] read-before-write = {defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048521] write-only = {defs={0x08048521}, expr=0x08048523<134513955>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048523: push   edi
registers:
  esp          [writer=0x08048523] read-before-write = {defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])}
  ebp          [writer=0x08048521] read-before-write = {defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048523] write-only = {defs={0x08048523}, expr=0x08048524<134513956>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048524: push   esi
registers:
  esp          [writer=0x08048524] read-before-write = {defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048521] read-before-write = {defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048524] write-only = {defs={0x08048524}, expr=0x08048525<134513957>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32])} writer=0x08048524 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32])} writer=0x08048524 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32])} writer=0x08048524 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])} writer=0x08048524 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] esi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048525: push   ebx
registers:
  esp          [writer=0x08048525] read-before-write = {defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])}
  ebp          [writer=0x08048521] read-before-write = {defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048525] write-only = {defs={0x08048525}, expr=0x08048526<134513958>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x08048525 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x08048525 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x08048525 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x08048525 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32])} writer=0x08048524 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32])} writer=0x08048524 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32])} writer=0x08048524 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])} writer=0x08048524 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] esi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048526: sub    esp, 0x0c
registers:
  esp          [writer=0x08048526] read-before-write = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])}
  ebp          [writer=0x08048521] read-before-write = {defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048526] write-only = {defs={0x08048526}, expr=0x08048529<134513961>[32]}
  cf           [writer=0x08048526] write-only = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))}
  pf           [writer=0x08048526] write-only = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))))}
  af           [writer=0x08048526] write-only = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))}
  zf           [writer=0x08048526] write-only = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(zerop[1] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))}
  sf           [writer=0x08048526] write-only = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))}
  of           [writer=0x08048526] write-only = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x08048525 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x08048525 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x08048525 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x08048525 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32])} writer=0x08048524 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32])} writer=0x08048524 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32])} writer=0x08048524 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])} writer=0x08048524 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] esi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048529: call   0x0804852e<<Insn>>
registers:
  esp          [writer=0x08048529] read-before-write = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] esp_0[32] 0xffffffe0<4294967264,-32>[32])}
  ebp          [writer=0x08048521] read-before-write = {defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048529] = {defs={0x08048529}, expr=0x0804852e<134513966>[32]}
  cf           [writer=0x08048526] write-only = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))}
  pf           [writer=0x08048526] write-only = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))))}
  af           [writer=0x08048526] write-only = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))}
  zf           [writer=0x08048526] write-only = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(zerop[1] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))}
  sf           [writer=0x08048526] write-only = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))}
  of           [writer=0x08048526] write-only = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] esp_0[32] 0xffffffe3<4294967267,-29>[32])} writer=0x08048529 write-only value={defs={0x08048529}, expr=0x08[8]}
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] esp_0[32] 0xffffffe2<4294967266,-30>[32])} writer=0x08048529 write-only value={defs={0x08048529}, expr=0x04[8]}
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] esp_0[32] 0xffffffe1<4294967265,-31>[32])} writer=0x08048529 write-only value={defs={0x08048529}, expr=0x85<-123>[8]}
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] esp_0[32] 0xffffffe0<4294967264,-32>[32])} writer=0x08048529 write-only value={defs={0x08048529}, expr=0x2e[8]}
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x08048525 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x08048525 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x08048525 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x08048525 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32])} writer=0x08048524 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32])} writer=0x08048524 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32])} writer=0x08048524 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])} writer=0x08048524 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] esi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x08048523 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048520 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x0804852e: pop    ebx
registers:
  ebx          [writer=0x0804852e] write-only = v32537[32]
  esp          [writer=0x0804852e] read-before-write = {defs={0x0804852e}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x0804852e] write-only = {defs={0x0804852e}, expr=0x0804852f<134513967>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v32537[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v32537[32])

0x0804852f: add    ebx, 0x0000119a<4506>
registers:
  ebx          [writer=0x0804852f] = {defs={0x0804852f}, expr=(add[32] v32537[32] 0x0000119a<4506>[32])}
  esp          [writer=0x0804852e] read-before-write = {defs={0x0804852e}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=0x08048535<134513973>[32]}
  cf           [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33]))}
  pf           [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v32537[32] 0x0000119a<4506>[32]))))}
  af           [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33]))}
  zf           [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=(zerop[1] (add[32] v32537[32] 0x0000119a<4506>[32]))}
  sf           [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v32537[32] 0x0000119a<4506>[32]))}
  of           [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v32537[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v32537[32])

0x08048535: lea    eax, [ebx + 0xffffff20<-224>]
registers:
  eax          [writer=0x08048535] write-only = {defs={0x0804852f,0x08048535}, expr=(add[32] v32537[32] 0x000010ba<4282>[32])}
  ebx          [writer=0x0804852f] = {defs={0x0804852f}, expr=(add[32] v32537[32] 0x0000119a<4506>[32])}
  esp          [writer=0x0804852e] read-before-write = {defs={0x0804852e}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x08048535] write-only = {defs={0x08048535}, expr=0x0804853b<134513979>[32]}
  cf           [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33]))}
  pf           [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v32537[32] 0x0000119a<4506>[32]))))}
  af           [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33]))}
  zf           [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=(zerop[1] (add[32] v32537[32] 0x0000119a<4506>[32]))}
  sf           [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v32537[32] 0x0000119a<4506>[32]))}
  of           [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v32537[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v32537[32])

0x0804853b: lea    edx, [ebx + 0xffffff20<-224>]
registers:
  eax          [writer=0x08048535] write-only = {defs={0x0804852f,0x08048535}, expr=(add[32] v32537[32] 0x000010ba<4282>[32])}
  edx          [writer=0x0804853b] write-only = {defs={0x0804852f,0x0804853b}, expr=(add[32] v32537[32] 0x000010ba<4282>[32])}
  ebx          [writer=0x0804852f] = {defs={0x0804852f}, expr=(add[32] v32537[32] 0x0000119a<4506>[32])}
  esp          [writer=0x0804852e] read-before-write = {defs={0x0804852e}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x0804853b] write-only = {defs={0x0804853b}, expr=0x08048541<134513985>[32]}
  cf           [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33]))}
  pf           [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v32537[32] 0x0000119a<4506>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v32537[32] 0x0000119a<4506>[32]))))}
  af           [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33]))}
  zf           [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=(zerop[1] (add[32] v32537[32] 0x0000119a<4506>[32]))}
  sf           [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v32537[32] 0x0000119a<4506>[32]))}
  of           [writer=0x0804852f] write-only = {defs={0x0804852f}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v32537[32]) 0x00000119a<4506>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v32537[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v32537[32])

0x08048541: sub    eax, edx
registers:
  eax          [writer=0x08048541] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])}
  edx          [writer=0x0804853b] = {defs={0x0804852f,0x0804853b}, expr=(add[32] v32537[32] 0x000010ba<4282>[32])}
  ebx          [writer=0x0804852f] = {defs={0x0804852f}, expr=(add[32] v32537[32] 0x0000119a<4506>[32])}
  esp          [writer=0x0804852e] read-before-write = {defs={0x0804852e}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x08048541] write-only = {defs={0x08048541}, expr=0x08048543<134513987>[32]}
  cf           [writer=0x08048541] write-only = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v32537[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v32537[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32]))))))}
  pf           [writer=0x08048541] write-only = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=true[1]}
  af           [writer=0x08048541] write-only = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v32537[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v32537[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32]))))))}
  zf           [writer=0x08048541] write-only = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(zerop[1] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32]))}
  sf           [writer=0x08048541] write-only = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32]))}
  of           [writer=0x08048541] write-only = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v32537[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v32537[32])

0x08048543: sar    eax, 0x02
registers:
  eax          [writer=0x08048543] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32]))}
  edx          [writer=0x0804853b] = {defs={0x0804852f,0x0804853b}, expr=(add[32] v32537[32] 0x000010ba<4282>[32])}
  ebx          [writer=0x0804852f] = {defs={0x0804852f}, expr=(add[32] v32537[32] 0x0000119a<4506>[32])}
  esp          [writer=0x0804852e] read-before-write = {defs={0x0804852e}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x08048543] write-only = {defs={0x08048543}, expr=0x08048546<134513990>[32]}
  cf           [writer=0x08048543] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32]))}
  pf           [writer=0x08048543] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=true[1]}
  af           [writer=0x08048543] = {defs={0x08048543}, expr=v32637[1]<unspec>}
  zf           [writer=0x08048543] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  sf           [writer=0x08048543] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  of           [writer=0x08048543] = {defs={0x08048543}, expr=v32641[1]<unspec>}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v32537[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v32537[32])

0x08048546: mov    dword ss:[ebp + 0xf0<-16>], eax
registers:
  eax          [writer=0x08048543] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32]))}
  edx          [writer=0x0804853b] = {defs={0x0804852f,0x0804853b}, expr=(add[32] v32537[32] 0x000010ba<4282>[32])}
  ebx          [writer=0x0804852f] = {defs={0x0804852f}, expr=(add[32] v32537[32] 0x0000119a<4506>[32])}
  esp          [writer=0x0804852e] read-before-write = {defs={0x0804852e}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x08048546] write-only = {defs={0x08048546}, expr=0x08048549<134513993>[32]}
  cf           [writer=0x08048543] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32]))}
  pf           [writer=0x08048543] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=true[1]}
  af           [writer=0x08048543] = {defs={0x08048543}, expr=v32637[1]<unspec>}
  zf           [writer=0x08048543] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  sf           [writer=0x08048543] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  of           [writer=0x08048543] = {defs={0x08048543}, expr=v32641[1]<unspec>}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v32537[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v32537[32])

0x08048549: dec    eax
registers:
  eax          [writer=0x08048549] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])}
  edx          [writer=0x0804853b] = {defs={0x0804852f,0x0804853b}, expr=(add[32] v32537[32] 0x000010ba<4282>[32])}
  ebx          [writer=0x0804852f] = {defs={0x0804852f}, expr=(add[32] v32537[32] 0x0000119a<4506>[32])}
  esp          [writer=0x0804852e] read-before-write = {defs={0x0804852e}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x08048549] write-only = {defs={0x08048549}, expr=0x0804854a<134513994>[32]}
  cf           [writer=0x08048543] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32]))}
  pf           [writer=0x08048549] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=true[1]}
  af           [writer=0x08048549] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=true[1]}
  zf           [writer=0x08048549] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(zerop[1] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))}
  sf           [writer=0x08048549] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))}
  of           [writer=0x08048549] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v32537[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v32537[32])

0x0804854a: cmp    eax, 0xff<-1>
registers:
  eax          [writer=0x08048549] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])}
  edx          [writer=0x0804853b] = {defs={0x0804852f,0x0804853b}, expr=(add[32] v32537[32] 0x000010ba<4282>[32])}
  ebx          [writer=0x0804852f] = {defs={0x0804852f}, expr=(add[32] v32537[32] 0x0000119a<4506>[32])}
  esp          [writer=0x0804852e] read-before-write = {defs={0x0804852e}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x0804854a] write-only = {defs={0x0804854a}, expr=0x0804854d<134513997>[32]}
  cf           [writer=0x0804854a] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])))}
  pf           [writer=0x0804854a] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=true[1]}
  af           [writer=0x0804854a] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])))}
  zf           [writer=0x0804854a] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  sf           [writer=0x0804854a] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  of           [writer=0x0804854a] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v32537[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v32537[32])

0x0804854d: je     0x0804856b<<Insn>>
registers:
  eax          [writer=0x08048549] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])}
  edx          [writer=0x0804853b] = {defs={0x0804852f,0x0804853b}, expr=(add[32] v32537[32] 0x000010ba<4282>[32])}
  ebx          [writer=0x0804852f] = {defs={0x0804852f}, expr=(add[32] v32537[32] 0x0000119a<4506>[32])}
  esp          [writer=0x0804852e] read-before-write = {defs={0x0804852e}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x0804854d] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a,0x0804854d}, expr=0x0804856b<134514027>[32]}
  cf           [writer=0x0804854a] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])))}
  pf           [writer=0x0804854a] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=true[1]}
  af           [writer=0x0804854a] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])))}
  zf           [writer=0x0804854a] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  sf           [writer=0x0804854a] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  of           [writer=0x0804854a] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v32537[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v32537[32])

0x0804856b: call   0x080485b0<_fini>
registers:
  eax          [writer=0x08048549] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])}
  edx          [writer=0x0804853b] = {defs={0x0804852f,0x0804853b}, expr=(add[32] v32537[32] 0x000010ba<4282>[32])}
  ebx          [writer=0x0804852f] = {defs={0x0804852f}, expr=(add[32] v32537[32] 0x0000119a<4506>[32])}
  eip          [writer=0x0804856b] = {defs={0x0804856b}, expr=0x080485b0<134514096>[32]}
  cf           [writer=0x0804854a] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])))}
  pf           [writer=0x0804854a] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=true[1]}
  af           [writer=0x0804854a] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])))}
  zf           [writer=0x0804854a] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  sf           [writer=0x0804854a] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  of           [writer=0x0804854a] = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x0804852e,0x0804856b}, expr=(add[32] esp_0[32] 0x00000003[32])} writer=0x0804856b write-only value={defs={0x0804856b}, expr=0x08[8]}
  addr={defs={0x0804852e,0x0804856b}, expr=(add[32] esp_0[32] 0x00000002[32])} writer=0x0804856b write-only value={defs={0x0804856b}, expr=0x04[8]}
  addr={defs={0x0804852e,0x0804856b}, expr=(add[32] esp_0[32] 0x00000001[32])} writer=0x0804856b write-only value={defs={0x0804856b}, expr=0x85<-123>[8]}
  addr={defs={0x0804852e,0x0804856b}, expr=esp_0[32]} writer=0x0804856b write-only value={defs={0x0804856b}, expr=0x70[8]}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x08048546 write-only value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v32537[32] 0x000010ba<4282>[32])) v32537[32] 0x000010bb<4283>[32])))}
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v32537[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v32537[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v32537[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x0804854f: lea    esi, [edx + eax*0x04]
registers:
  esi          [writer=0x0804854f] write-only = {defs={0x0804854f}, expr=(add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32])}
  eip          [writer=0x0804854f] write-only = {defs={0x0804854f}, expr=0x08048552<134514002>[32]}
  fpstatus_top = 0x0[3]
memory:

0x08048552: xor    edi, edi
registers:
  esi          [writer=0x0804854f] write-only = {defs={0x0804854f}, expr=(add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32])}
  edi          [writer=0x08048552] write-only = {defs={0x08048552}, expr=0x00000000[32]}
  eip          [writer=0x08048552] write-only = {defs={0x08048552}, expr=0x08048554<134514004>[32]}
  cf           [writer=0x08048552] write-only = {defs={0x08048552}, expr=false[1]}
  pf           [writer=0x08048552] write-only = {defs={0x08048552}, expr=true[1]}
  af           [writer=0x08048552] write-only = v33232[1]<unspec>
  zf           [writer=0x08048552] write-only = {defs={0x08048552}, expr=true[1]}
  sf           [writer=0x08048552] write-only = {defs={0x08048552}, expr=false[1]}
  of           [writer=0x08048552] write-only = {defs={0x08048552}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:

0x08048554: lea    esi, [esi + 0x00000000]
registers:
  esi          [writer=0x08048554] = {defs={0x0804854f,0x08048554}, expr=(add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32])}
  edi          [writer=0x08048552] write-only = {defs={0x08048552}, expr=0x00000000[32]}
  eip          [writer=0x08048554] write-only = {defs={0x08048554}, expr=0x0804855a<134514010>[32]}
  cf           [writer=0x08048552] write-only = {defs={0x08048552}, expr=false[1]}
  pf           [writer=0x08048552] write-only = {defs={0x08048552}, expr=true[1]}
  af           [writer=0x08048552] write-only = v33232[1]<unspec>
  zf           [writer=0x08048552] write-only = {defs={0x08048552}, expr=true[1]}
  sf           [writer=0x08048552] write-only = {defs={0x08048552}, expr=false[1]}
  of           [writer=0x08048552] write-only = {defs={0x08048552}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:

0x0804855a: lea    edi, [edi + 0x00000000]
registers:
  esi          [writer=0x08048554] = {defs={0x0804854f,0x08048554}, expr=(add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32])}
  edi          [writer=0x0804855a] = {defs={0x08048552,0x0804855a}, expr=0x00000000[32]}
  eip          [writer=0x0804855a] write-only = {defs={0x0804855a}, expr=0x08048560<134514016>[32]}
  cf           [writer=0x08048552] write-only = {defs={0x08048552}, expr=false[1]}
  pf           [writer=0x08048552] write-only = {defs={0x08048552}, expr=true[1]}
  af           [writer=0x08048552] write-only = v33232[1]<unspec>
  zf           [writer=0x08048552] write-only = {defs={0x08048552}, expr=true[1]}
  sf           [writer=0x08048552] write-only = {defs={0x08048552}, expr=false[1]}
  of           [writer=0x08048552] write-only = {defs={0x08048552}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:

0x08048560: call   dword ds:[esi]
registers:
  esp          [writer=0x08048560] read-before-write = {defs={0x08048560}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  esi          [writer=0x08048554] = {defs={0x0804854f,0x08048554}, expr=(add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32])}
  edi          [writer=0x0804855a] = {defs={0x08048552,0x0804855a}, expr=0x00000000[32]}
  eip          [writer=0x08048560] = v33240[32]
  cf           [writer=0x08048552] write-only = {defs={0x08048552}, expr=false[1]}
  pf           [writer=0x08048552] write-only = {defs={0x08048552}, expr=true[1]}
  af           [writer=0x08048552] write-only = v33232[1]<unspec>
  zf           [writer=0x08048552] write-only = {defs={0x08048552}, expr=true[1]}
  sf           [writer=0x08048552] write-only = {defs={0x08048552}, expr=false[1]}
  of           [writer=0x08048552] write-only = {defs={0x08048552}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048560}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048560 write-only value={defs={0x08048560}, expr=0x08[8]}
  addr={defs={0x08048560}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048560 write-only value={defs={0x08048560}, expr=0x04[8]}
  addr={defs={0x08048560}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048560 write-only value={defs={0x08048560}, expr=0x85<-123>[8]}
  addr={defs={0x08048560}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048560 write-only value={defs={0x08048560}, expr=0x62[8]}
  addr={defs={0x0804854f,0x08048554}, expr=(add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32] 0x00000003[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v33240[32])
  addr={defs={0x0804854f,0x08048554}, expr=(add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32] 0x00000002[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v33240[32])
  addr={defs={0x0804854f,0x08048554}, expr=(add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32] 0x00000001[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v33240[32])
  addr={defs={0x0804854f,0x08048554}, expr=(add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v33240[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048562: inc    edi
registers:
  edi          [writer=0x08048562] read-before-write = {defs={0x08048562}, expr=(add[32] edi_0[32] 0x00000001[32])}
  eip          [writer=0x08048562] write-only = {defs={0x08048562}, expr=0x08048563<134514019>[32]}
  pf           [writer=0x08048562] write-only = {defs={0x08048562}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32]))))}
  af           [writer=0x08048562] write-only = {defs={0x08048562}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]))}
  zf           [writer=0x08048562] write-only = {defs={0x08048562}, expr=(zerop[1] (add[32] edi_0[32] 0x00000001[32]))}
  sf           [writer=0x08048562] write-only = {defs={0x08048562}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] edi_0[32] 0x00000001[32]))}
  of           [writer=0x08048562] write-only = {defs={0x08048562}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33])))}
  fpstatus_top = 0x0[3]
memory:

0x08048563: sub    esi, 0x04
registers:
  esi          [writer=0x08048563] read-before-write = {defs={0x08048563}, expr=(add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])}
  edi          [writer=0x08048562] read-before-write = {defs={0x08048562}, expr=(add[32] edi_0[32] 0x00000001[32])}
  eip          [writer=0x08048563] write-only = {defs={0x08048563}, expr=0x08048566<134514022>[32]}
  cf           [writer=0x08048563] write-only = {defs={0x08048563}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33])))}
  pf           [writer=0x08048563] write-only = {defs={0x08048563}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))))}
  af           [writer=0x08048563] write-only = {defs={0x08048563}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33])))}
  zf           [writer=0x08048563] write-only = {defs={0x08048563}, expr=(zerop[1] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))}
  sf           [writer=0x08048563] write-only = {defs={0x08048563}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))}
  of           [writer=0x08048563] write-only = {defs={0x08048563}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33])))}
  fpstatus_top = 0x0[3]
memory:

0x08048566: cmp    dword ss:[ebp + 0xf0<-16>], edi
registers:
  esi          [writer=0x08048563] read-before-write = {defs={0x08048563}, expr=(add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])}
  edi          [writer=0x08048562] read-before-write = {defs={0x08048562}, expr=(add[32] edi_0[32] 0x00000001[32])}
  eip          [writer=0x08048566] write-only = {defs={0x08048566}, expr=0x08048569<134514025>[32]}
  cf           [writer=0x08048566] write-only = {defs={0x08048562,0x08048566}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v33821[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v33821[32]))))}
  pf           [writer=0x08048566] write-only = {defs={0x08048562,0x08048566}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32]))))}
  af           [writer=0x08048566] write-only = {defs={0x08048562,0x08048566}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v33821[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v33821[32]))))}
  zf           [writer=0x08048566] write-only = {defs={0x08048562,0x08048566}, expr=(zerop[1] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32]))}
  sf           [writer=0x08048566] write-only = {defs={0x08048562,0x08048566}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32]))}
  of           [writer=0x08048566] write-only = {defs={0x08048562,0x08048566}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v33821[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v33821[32]))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v33821[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v33821[32]))))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048566}, expr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v33821[32])
  addr={defs={0x08048566}, expr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v33821[32])
  addr={defs={0x08048566}, expr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v33821[32])
  addr={defs={0x08048566}, expr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v33821[32])

0x08048569: jne    0x08048560<<Insn>>
registers:
  esi          [writer=0x08048563] read-before-write = {defs={0x08048563}, expr=(add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])}
  edi          [writer=0x08048562] read-before-write = {defs={0x08048562}, expr=(add[32] edi_0[32] 0x00000001[32])}
  eip          [writer=0x08048569] = {defs={0x08048562,0x08048566,0x08048569}, expr=(ite[32] (invert[1] (zerop[1] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32]))) 0x08048560<134514016>[32] 0x0804856b<134514027>[32])}
  cf           [writer=0x08048566] write-only = {defs={0x08048562,0x08048566}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v33821[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v33821[32]))))}
  pf           [writer=0x08048566] write-only = {defs={0x08048562,0x08048566}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32]))))}
  af           [writer=0x08048566] write-only = {defs={0x08048562,0x08048566}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v33821[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v33821[32]))))}
  zf           [writer=0x08048566] = {defs={0x08048562,0x08048566}, expr=(zerop[1] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32]))}
  sf           [writer=0x08048566] write-only = {defs={0x08048562,0x08048566}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v33821[32] 0x00000001[32]))}
  of           [writer=0x08048566] write-only = {defs={0x08048562,0x08048566}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v33821[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v33821[32]))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v33821[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v33821[32]))))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048566}, expr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v33821[32])
  addr={defs={0x08048566}, expr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v33821[32])
  addr={defs={0x08048566}, expr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v33821[32])
  addr={defs={0x08048566}, expr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v33821[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048570: add    esp, 0x0c
registers:
  esp          [writer=0x08048570] read-before-write = {defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000c[32])}
  eip          [writer=0x08048570] write-only = {defs={0x08048570}, expr=0x08048573<134514035>[32]}
  cf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  pf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))}
  af           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  zf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(zerop[1] (add[32] esp_0[32] 0x0000000c[32]))}
  sf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))}
  of           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))}
  fpstatus_top = 0x0[3]
memory:

0x08048573: pop    ebx
registers:
  ebx          [writer=0x08048573] write-only = v34391[32]
  esp          [writer=0x08048573] read-before-write = {defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 0x00000010[32])}
  eip          [writer=0x08048573] write-only = {defs={0x08048573}, expr=0x08048574<134514036>[32]}
  cf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  pf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))}
  af           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  zf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(zerop[1] (add[32] esp_0[32] 0x0000000c[32]))}
  sf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))}
  of           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000f[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34391[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000e[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34391[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000d[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34391[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000c[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34391[32])

0x08048574: pop    esi
registers:
  ebx          [writer=0x08048573] write-only = v34391[32]
  esp          [writer=0x08048574] read-before-write = {defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 0x00000014[32])}
  esi          [writer=0x08048574] write-only = v34409[32]
  eip          [writer=0x08048574] write-only = {defs={0x08048574}, expr=0x08048575<134514037>[32]}
  cf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  pf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))}
  af           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  zf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(zerop[1] (add[32] esp_0[32] 0x0000000c[32]))}
  sf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))}
  of           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 0x00000013[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34409[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 0x00000012[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34409[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 0x00000011[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34409[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 0x00000010[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34409[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000f[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34391[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000e[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34391[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000d[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34391[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000c[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34391[32])

0x08048575: pop    edi
registers:
  ebx          [writer=0x08048573] write-only = v34391[32]
  esp          [writer=0x08048575] read-before-write = {defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] esp_0[32] 0x00000018[32])}
  esi          [writer=0x08048574] write-only = v34409[32]
  edi          [writer=0x08048575] write-only = v34427[32]
  eip          [writer=0x08048575] write-only = {defs={0x08048575}, expr=0x08048576<134514038>[32]}
  cf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  pf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))}
  af           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  zf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(zerop[1] (add[32] esp_0[32] 0x0000000c[32]))}
  sf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))}
  of           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 0x00000017[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34427[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 0x00000016[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34427[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 0x00000015[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34427[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 0x00000014[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34427[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 0x00000013[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34409[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 0x00000012[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34409[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 0x00000011[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34409[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 0x00000010[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34409[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000f[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34391[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000e[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34391[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000d[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34391[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000c[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34391[32])

0x08048576: pop    ebp
registers:
  ebx          [writer=0x08048573] write-only = v34391[32]
  esp          [writer=0x08048576] read-before-write = {defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] esp_0[32] 0x0000001c[32])}
  ebp          [writer=0x08048576] write-only = v34445[32]
  esi          [writer=0x08048574] write-only = v34409[32]
  edi          [writer=0x08048575] write-only = v34427[32]
  eip          [writer=0x08048576] write-only = {defs={0x08048576}, expr=0x08048577<134514039>[32]}
  cf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  pf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))}
  af           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  zf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(zerop[1] (add[32] esp_0[32] 0x0000000c[32]))}
  sf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))}
  of           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] esp_0[32] 0x0000001b[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34445[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] esp_0[32] 0x0000001a[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34445[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] esp_0[32] 0x00000019[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34445[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] esp_0[32] 0x00000018[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34445[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 0x00000017[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34427[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 0x00000016[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34427[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 0x00000015[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34427[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 0x00000014[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34427[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 0x00000013[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34409[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 0x00000012[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34409[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 0x00000011[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34409[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 0x00000010[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34409[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000f[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34391[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000e[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34391[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000d[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34391[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000c[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34391[32])

0x08048577: ret    
registers:
  ebx          [writer=0x08048573] write-only = v34391[32]
  esp          [writer=0x08048577] read-before-write = {defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576,0x08048577}, expr=(add[32] esp_0[32] 0x00000020[32])}
  ebp          [writer=0x08048576] write-only = v34445[32]
  esi          [writer=0x08048574] write-only = v34409[32]
  edi          [writer=0x08048575] write-only = v34427[32]
  eip          [writer=0x08048577] write-only = v34463[32]
  cf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  pf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))}
  af           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))}
  zf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(zerop[1] (add[32] esp_0[32] 0x0000000c[32]))}
  sf           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))}
  of           [writer=0x08048570] write-only = {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] esp_0[32] 0x0000001f[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34463[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] esp_0[32] 0x0000001e[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34463[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] esp_0[32] 0x0000001d[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34463[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] esp_0[32] 0x0000001c[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34463[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] esp_0[32] 0x0000001b[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34445[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] esp_0[32] 0x0000001a[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34445[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] esp_0[32] 0x00000019[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34445[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] esp_0[32] 0x00000018[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34445[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 0x00000017[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34427[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 0x00000016[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34427[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 0x00000015[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34427[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 0x00000014[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34427[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 0x00000013[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34409[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 0x00000012[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34409[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 0x00000011[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34409[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 0x00000010[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34409[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000f[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34391[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000e[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34391[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000d[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34391[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 0x0000000c[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34391[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048580: push   ebp
registers:
  esp          [writer=0x08048580] read-before-write = {defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048580] write-only = {defs={0x08048580}, expr=0x08048581<134514049>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048581: mov    ebp, esp
registers:
  esp          [writer=0x08048580] read-before-write = {defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  ebp          [writer=0x08048581] read-before-write = {defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048581] write-only = {defs={0x08048581}, expr=0x08048583<134514051>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048583: push   ebx
registers:
  esp          [writer=0x08048583] read-before-write = {defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])}
  ebp          [writer=0x08048581] read-before-write = {defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048583] write-only = {defs={0x08048583}, expr=0x08048584<134514052>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x08048583 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x08048583 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x08048583 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x08048583 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048584: sub    esp, 0x04
registers:
  esp          [writer=0x08048584] read-before-write = {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048581] read-before-write = {defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048584] write-only = {defs={0x08048584}, expr=0x08048587<134514055>[32]}
  cf           [writer=0x08048584] write-only = {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))}
  pf           [writer=0x08048584] write-only = {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))}
  af           [writer=0x08048584] write-only = {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))}
  zf           [writer=0x08048584] write-only = {defs={0x08048580,0x08048583,0x08048584}, expr=(zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  sf           [writer=0x08048584] write-only = {defs={0x08048580,0x08048583,0x08048584}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  of           [writer=0x08048584] write-only = {defs={0x08048580,0x08048583,0x08048584}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x08048583 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x08048583 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x08048583 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x08048583 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048587: mov    ebx, 0x080495e8<.ctors>
registers:
  ebx          [writer=0x08048587] read-before-write = {defs={0x08048587}, expr=0x080495e8<134518248>[32]}
  esp          [writer=0x08048584] read-before-write = {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048581] read-before-write = {defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048587] write-only = {defs={0x08048587}, expr=0x0804858c<134514060>[32]}
  cf           [writer=0x08048584] write-only = {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))}
  pf           [writer=0x08048584] write-only = {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))}
  af           [writer=0x08048584] write-only = {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))}
  zf           [writer=0x08048584] write-only = {defs={0x08048580,0x08048583,0x08048584}, expr=(zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  sf           [writer=0x08048584] write-only = {defs={0x08048580,0x08048583,0x08048584}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  of           [writer=0x08048584] write-only = {defs={0x08048580,0x08048583,0x08048584}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x08048583 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x08048583 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x08048583 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x08048583 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048580 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x0804858c: mov    eax, dword ds:[0x080495e8<.ctors>]
registers:
  eax          [writer=0x0804858c] write-only = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))
  ebx          [writer=0x08048587] read-before-write = {defs={0x08048587}, expr=0x080495e8<134518248>[32]}
  esp          [writer=0x08048584] read-before-write = {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048581] read-before-write = {defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x0804858c] write-only = {defs={0x0804858c}, expr=0x08048591<134514065>[32]}
  cf           [writer=0x08048584] write-only = {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))}
  pf           [writer=0x08048584] write-only = {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))}
  af           [writer=0x08048584] write-only = {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))}
  zf           [writer=0x08048584] write-only = {defs={0x08048580,0x08048583,0x08048584}, expr=(zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  sf           [writer=0x08048584] write-only = {defs={0x08048580,0x08048583,0x08048584}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))}
  of           [writer=0x08048584] write-only = {defs={0x08048580,0x08048583,0x08048584}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x0804858c}, expr=0x080495eb<134518251>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v35018[32])
  addr={defs={0x0804858c}, expr=0x080495ea<134518250>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v35018[32])
  addr={defs={0x0804858c}, expr=0x080495e9<134518249>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v35018[32])
  addr={defs={0x0804858c}, expr=0x080495e8<134518248>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v35018[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x08048583 value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x08048583 value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x08048583 value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x08048583 value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048580 value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048580 value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048580 value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048580 value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048591: cmp    eax, 0xff<-1>
registers:
  eax          [writer=0x0804858c] = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))
  ebx          [writer=0x08048587] read-before-write = {defs={0x08048587}, expr=0x080495e8<134518248>[32]}
  esp          [writer=0x08048584] read-before-write = {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048581] read-before-write = {defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048591] write-only = {defs={0x08048591}, expr=0x08048594<134514068>[32]}
  cf           [writer=0x08048591] write-only = {defs={0x08048591}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))) 0x000000000[33])))}
  pf           [writer=0x08048591] write-only = {defs={0x08048591}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32]))))}
  af           [writer=0x08048591] write-only = {defs={0x08048591}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))) 0x000000000[33])))}
  zf           [writer=0x08048591] write-only = {defs={0x08048591}, expr=(zerop[1] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32]))}
  sf           [writer=0x08048591] write-only = {defs={0x08048591}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32]))}
  of           [writer=0x08048591] write-only = {defs={0x08048591}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))) 0x000000000[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x0804858c}, expr=0x080495eb<134518251>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v35018[32])
  addr={defs={0x0804858c}, expr=0x080495ea<134518250>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v35018[32])
  addr={defs={0x0804858c}, expr=0x080495e9<134518249>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v35018[32])
  addr={defs={0x0804858c}, expr=0x080495e8<134518248>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v35018[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x08048583 value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x08048583 value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x08048583 value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x08048583 value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048580 value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048580 value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048580 value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048580 value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048594: je     0x080485ac<<Insn>>
registers:
  eax          [writer=0x0804858c] = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))
  ebx          [writer=0x08048587] read-before-write = {defs={0x08048587}, expr=0x080495e8<134518248>[32]}
  esp          [writer=0x08048584] read-before-write = {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x08048581] read-before-write = {defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x08048594] = {defs={0x08048591,0x08048594}, expr=(ite[32] (zerop[1] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32])) 0x080485ac<134514092>[32] 0x08048596<134514070>[32])}
  cf           [writer=0x08048591] write-only = {defs={0x08048591}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))) 0x000000000[33])))}
  pf           [writer=0x08048591] write-only = {defs={0x08048591}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32]))))}
  af           [writer=0x08048591] write-only = {defs={0x08048591}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))) 0x000000000[33])))}
  zf           [writer=0x08048591] = {defs={0x08048591}, expr=(zerop[1] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32]))}
  sf           [writer=0x08048591] write-only = {defs={0x08048591}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32])) 0x00000001[32]))}
  of           [writer=0x08048591] write-only = {defs={0x08048591}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35039[8] 0x080495eb<134518251>[32] (extract[8] 0x00000018[32] 0x00000020[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495eb<134518251>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35033[8] 0x080495ea<134518250>[32] (extract[8] 0x00000010[32] 0x00000018[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495ea<134518250>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35027[8] 0x080495e9<134518249>[32] (extract[8] 0x00000008[32] 0x00000010[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e9<134518249>[32]) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m35022[8] 0x080495e8<134518248>[32] (extract[8] 0x00000000[32] 0x00000008[32] v35018[32])) (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])) (add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])) (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) (extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])) (add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) (extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])) 0x080495e8<134518248>[32]))) 0x000000000[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x0804858c}, expr=0x080495eb<134518251>[32]} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v35018[32])
  addr={defs={0x0804858c}, expr=0x080495ea<134518250>[32]} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v35018[32])
  addr={defs={0x0804858c}, expr=0x080495e9<134518249>[32]} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v35018[32])
  addr={defs={0x0804858c}, expr=0x080495e8<134518248>[32]} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v35018[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x08048583 value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x08048583 value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x08048583 value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x08048583 value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x08048580 value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x08048580 value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x08048580 value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x08048580 value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048596: lea    esi, [esi + 0x00]
registers:
  eip          [writer=0x08048596] write-only = {defs={0x08048596}, expr=0x08048599<134514073>[32]}
  fpstatus_top = 0x0[3]
memory:

0x08048599: lea    edi, [edi + 0x00000000]
registers:
  eip          [writer=0x08048599] write-only = {defs={0x08048599}, expr=0x080485a0<134514080>[32]}
  fpstatus_top = 0x0[3]
memory:

0x080485a0: sub    ebx, 0x04
registers:
  ebx          [writer=0x080485a0] read-before-write = {defs={0x080485a0}, expr=(add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080485a0] write-only = {defs={0x080485a0}, expr=0x080485a3<134514083>[32]}
  cf           [writer=0x080485a0] write-only = {defs={0x080485a0}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])))}
  pf           [writer=0x080485a0] write-only = {defs={0x080485a0}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))))}
  af           [writer=0x080485a0] write-only = {defs={0x080485a0}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])))}
  zf           [writer=0x080485a0] write-only = {defs={0x080485a0}, expr=(zerop[1] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))}
  sf           [writer=0x080485a0] write-only = {defs={0x080485a0}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))}
  of           [writer=0x080485a0] write-only = {defs={0x080485a0}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])))}
  fpstatus_top = 0x0[3]
memory:

0x080485a3: call   eax
registers:
  ebx          [writer=0x080485a0] read-before-write = {defs={0x080485a0}, expr=(add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])}
  esp          [writer=0x080485a3] read-before-write = {defs={0x080485a3}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080485a3] = eax_0[32]
  cf           [writer=0x080485a0] write-only = {defs={0x080485a0}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])))}
  pf           [writer=0x080485a0] write-only = {defs={0x080485a0}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))))}
  af           [writer=0x080485a0] write-only = {defs={0x080485a0}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])))}
  zf           [writer=0x080485a0] write-only = {defs={0x080485a0}, expr=(zerop[1] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))}
  sf           [writer=0x080485a0] write-only = {defs={0x080485a0}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))}
  of           [writer=0x080485a0] write-only = {defs={0x080485a0}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080485a3}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080485a3 write-only value={defs={0x080485a3}, expr=0x08[8]}
  addr={defs={0x080485a3}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080485a3 write-only value={defs={0x080485a3}, expr=0x04[8]}
  addr={defs={0x080485a3}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080485a3 write-only value={defs={0x080485a3}, expr=0x85<-123>[8]}
  addr={defs={0x080485a3}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080485a3 write-only value={defs={0x080485a3}, expr=0xa5<-91>[8]}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080485a5: mov    eax, dword ds:[ebx]
registers:
  eax          [writer=0x080485a5] write-only = v36096[32]
  eip          [writer=0x080485a5] write-only = {defs={0x080485a5}, expr=0x080485a7<134514087>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebx_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v36096[32])
  addr=(add[32] ebx_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v36096[32])
  addr=(add[32] ebx_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v36096[32])
  addr=ebx_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v36096[32])

0x080485a7: cmp    eax, 0xff<-1>
registers:
  eax          [writer=0x080485a5] = v36096[32]
  eip          [writer=0x080485a7] write-only = {defs={0x080485a7}, expr=0x080485aa<134514090>[32]}
  cf           [writer=0x080485a7] write-only = {defs={0x080485a7}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v36096[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v36096[32]) 0x000000000[33])))}
  pf           [writer=0x080485a7] write-only = {defs={0x080485a7}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v36096[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v36096[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v36096[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v36096[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v36096[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v36096[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v36096[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v36096[32] 0x00000001[32]))))}
  af           [writer=0x080485a7] write-only = {defs={0x080485a7}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v36096[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v36096[32]) 0x000000000[33])))}
  zf           [writer=0x080485a7] write-only = {defs={0x080485a7}, expr=(zerop[1] (add[32] v36096[32] 0x00000001[32]))}
  sf           [writer=0x080485a7] write-only = {defs={0x080485a7}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v36096[32] 0x00000001[32]))}
  of           [writer=0x080485a7] write-only = {defs={0x080485a7}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v36096[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v36096[32]) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v36096[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v36096[32]) 0x000000000[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebx_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v36096[32])
  addr=(add[32] ebx_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v36096[32])
  addr=(add[32] ebx_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v36096[32])
  addr=ebx_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v36096[32])

0x080485aa: jne    0x080485a0<<Insn>>
registers:
  eax          [writer=0x080485a5] = v36096[32]
  eip          [writer=0x080485aa] = {defs={0x080485a7,0x080485aa}, expr=(ite[32] (invert[1] (zerop[1] (add[32] v36096[32] 0x00000001[32]))) 0x080485a0<134514080>[32] 0x080485ac<134514092>[32])}
  cf           [writer=0x080485a7] write-only = {defs={0x080485a7}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v36096[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v36096[32]) 0x000000000[33])))}
  pf           [writer=0x080485a7] write-only = {defs={0x080485a7}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v36096[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v36096[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v36096[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v36096[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v36096[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v36096[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v36096[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v36096[32] 0x00000001[32]))))}
  af           [writer=0x080485a7] write-only = {defs={0x080485a7}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v36096[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v36096[32]) 0x000000000[33])))}
  zf           [writer=0x080485a7] = {defs={0x080485a7}, expr=(zerop[1] (add[32] v36096[32] 0x00000001[32]))}
  sf           [writer=0x080485a7] write-only = {defs={0x080485a7}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v36096[32] 0x00000001[32]))}
  of           [writer=0x080485a7] write-only = {defs={0x080485a7}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v36096[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v36096[32]) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v36096[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v36096[32]) 0x000000000[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebx_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v36096[32])
  addr=(add[32] ebx_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v36096[32])
  addr=(add[32] ebx_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v36096[32])
  addr=ebx_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v36096[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080485ac: pop    eax
registers:
  eax          [writer=0x080485ac] write-only = v36632[32]
  esp          [writer=0x080485ac] read-before-write = {defs={0x080485ac}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x080485ac] write-only = {defs={0x080485ac}, expr=0x080485ad<134514093>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v36632[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v36632[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v36632[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v36632[32])

0x080485ad: pop    ebx
registers:
  eax          [writer=0x080485ac] write-only = v36632[32]
  ebx          [writer=0x080485ad] write-only = v36650[32]
  esp          [writer=0x080485ad] read-before-write = {defs={0x080485ac,0x080485ad}, expr=(add[32] esp_0[32] 0x00000008[32])}
  eip          [writer=0x080485ad] write-only = {defs={0x080485ad}, expr=0x080485ae<134514094>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 0x00000007[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v36650[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 0x00000006[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v36650[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 0x00000005[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v36650[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 0x00000004[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v36650[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v36632[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v36632[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v36632[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v36632[32])

0x080485ae: pop    ebp
registers:
  eax          [writer=0x080485ac] write-only = v36632[32]
  ebx          [writer=0x080485ad] write-only = v36650[32]
  esp          [writer=0x080485ae] read-before-write = {defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] esp_0[32] 0x0000000c[32])}
  ebp          [writer=0x080485ae] write-only = v36668[32]
  eip          [writer=0x080485ae] write-only = {defs={0x080485ae}, expr=0x080485af<134514095>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080485ac,0x080485ad}, expr=(add[32] esp_0[32] 0x0000000b[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v36668[32])
  addr={defs={0x080485ac,0x080485ad}, expr=(add[32] esp_0[32] 0x0000000a[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v36668[32])
  addr={defs={0x080485ac,0x080485ad}, expr=(add[32] esp_0[32] 0x00000009[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v36668[32])
  addr={defs={0x080485ac,0x080485ad}, expr=(add[32] esp_0[32] 0x00000008[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v36668[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 0x00000007[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v36650[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 0x00000006[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v36650[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 0x00000005[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v36650[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 0x00000004[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v36650[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v36632[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v36632[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v36632[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v36632[32])

0x080485af: ret    
registers:
  eax          [writer=0x080485ac] write-only = v36632[32]
  ebx          [writer=0x080485ad] write-only = v36650[32]
  esp          [writer=0x080485af] read-before-write = {defs={0x080485ac,0x080485ad,0x080485ae,0x080485af}, expr=(add[32] esp_0[32] 0x00000010[32])}
  ebp          [writer=0x080485ae] write-only = v36668[32]
  eip          [writer=0x080485af] write-only = v36686[32]
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] esp_0[32] 0x0000000f[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v36686[32])
  addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] esp_0[32] 0x0000000e[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v36686[32])
  addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] esp_0[32] 0x0000000d[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v36686[32])
  addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] esp_0[32] 0x0000000c[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v36686[32])
  addr={defs={0x080485ac,0x080485ad}, expr=(add[32] esp_0[32] 0x0000000b[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v36668[32])
  addr={defs={0x080485ac,0x080485ad}, expr=(add[32] esp_0[32] 0x0000000a[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v36668[32])
  addr={defs={0x080485ac,0x080485ad}, expr=(add[32] esp_0[32] 0x00000009[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v36668[32])
  addr={defs={0x080485ac,0x080485ad}, expr=(add[32] esp_0[32] 0x00000008[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v36668[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 0x00000007[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v36650[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 0x00000006[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v36650[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 0x00000005[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v36650[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 0x00000004[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v36650[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v36632[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v36632[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v36632[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v36632[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080485b0: push   ebp
registers:
  esp          [writer=0x080485b0] read-before-write = {defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080485b0] write-only = {defs={0x080485b0}, expr=0x080485b1<134514097>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080485b1: mov    ebp, esp
registers:
  esp          [writer=0x080485b0] read-before-write = {defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  ebp          [writer=0x080485b1] read-before-write = {defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080485b1] write-only = {defs={0x080485b1}, expr=0x080485b3<134514099>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080485b3: push   ebx
registers:
  esp          [writer=0x080485b3] read-before-write = {defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])}
  ebp          [writer=0x080485b1] read-before-write = {defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080485b3] write-only = {defs={0x080485b3}, expr=0x080485b4<134514100>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x080485b3 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x080485b3 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x080485b3 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x080485b3 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080485b4: push   eax
registers:
  esp          [writer=0x080485b4] read-before-write = {defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])}
  ebp          [writer=0x080485b1] read-before-write = {defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080485b4] write-only = {defs={0x080485b4}, expr=0x080485b5<134514101>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32])} writer=0x080485b4 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32])} writer=0x080485b4 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32])} writer=0x080485b4 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])} writer=0x080485b4 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x080485b3 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x080485b3 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x080485b3 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x080485b3 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080485b5: call   0x080485ba<<Insn>>
registers:
  esp          [writer=0x080485b5] read-before-write = {defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])}
  ebp          [writer=0x080485b1] read-before-write = {defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080485b5] = {defs={0x080485b5}, expr=0x080485ba<134514106>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32])} writer=0x080485b5 write-only value={defs={0x080485b5}, expr=0x08[8]}
  addr={defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32])} writer=0x080485b5 write-only value={defs={0x080485b5}, expr=0x04[8]}
  addr={defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32])} writer=0x080485b5 write-only value={defs={0x080485b5}, expr=0x85<-123>[8]}
  addr={defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])} writer=0x080485b5 write-only value={defs={0x080485b5}, expr=0xba<-70>[8]}
  addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32])} writer=0x080485b4 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32])} writer=0x080485b4 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32])} writer=0x080485b4 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])} writer=0x080485b4 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x080485b3 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x080485b3 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x080485b3 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x080485b3 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080485b0 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080485ba: pop    ebx
registers:
  ebx          [writer=0x080485ba] write-only = v37697[32]
  esp          [writer=0x080485ba] read-before-write = {defs={0x080485ba}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x080485ba] write-only = {defs={0x080485ba}, expr=0x080485bb<134514107>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v37697[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v37697[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v37697[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v37697[32])

0x080485bb: add    ebx, 0x0000110e<4366>
registers:
  ebx          [writer=0x080485bb] = {defs={0x080485bb}, expr=(add[32] v37697[32] 0x0000110e<4366>[32])}
  esp          [writer=0x080485ba] read-before-write = {defs={0x080485ba}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x080485bb] write-only = {defs={0x080485bb}, expr=0x080485c1<134514113>[32]}
  cf           [writer=0x080485bb] write-only = {defs={0x080485bb}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v37697[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v37697[32]) 0x00000110e<4366>[33]))}
  pf           [writer=0x080485bb] write-only = {defs={0x080485bb}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v37697[32] 0x0000110e<4366>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v37697[32] 0x0000110e<4366>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v37697[32] 0x0000110e<4366>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v37697[32] 0x0000110e<4366>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v37697[32] 0x0000110e<4366>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v37697[32] 0x0000110e<4366>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v37697[32] 0x0000110e<4366>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v37697[32] 0x0000110e<4366>[32]))))}
  af           [writer=0x080485bb] write-only = {defs={0x080485bb}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v37697[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v37697[32]) 0x00000110e<4366>[33]))}
  zf           [writer=0x080485bb] write-only = {defs={0x080485bb}, expr=(zerop[1] (add[32] v37697[32] 0x0000110e<4366>[32]))}
  sf           [writer=0x080485bb] write-only = {defs={0x080485bb}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v37697[32] 0x0000110e<4366>[32]))}
  of           [writer=0x080485bb] write-only = {defs={0x080485bb}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v37697[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v37697[32]) 0x00000110e<4366>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v37697[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v37697[32]) 0x00000110e<4366>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v37697[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v37697[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v37697[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v37697[32])

0x080485c1: call   0x08048390<__do_global_dtors_aux>
registers:
  ebx          [writer=0x080485bb] = {defs={0x080485bb}, expr=(add[32] v37697[32] 0x0000110e<4366>[32])}
  eip          [writer=0x080485c1] = {defs={0x080485c1}, expr=0x08048390<134513552>[32]}
  cf           [writer=0x080485bb] write-only = {defs={0x080485bb}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v37697[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v37697[32]) 0x00000110e<4366>[33]))}
  pf           [writer=0x080485bb] write-only = {defs={0x080485bb}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v37697[32] 0x0000110e<4366>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v37697[32] 0x0000110e<4366>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v37697[32] 0x0000110e<4366>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v37697[32] 0x0000110e<4366>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v37697[32] 0x0000110e<4366>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v37697[32] 0x0000110e<4366>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v37697[32] 0x0000110e<4366>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v37697[32] 0x0000110e<4366>[32]))))}
  af           [writer=0x080485bb] write-only = {defs={0x080485bb}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v37697[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v37697[32]) 0x00000110e<4366>[33]))}
  zf           [writer=0x080485bb] write-only = {defs={0x080485bb}, expr=(zerop[1] (add[32] v37697[32] 0x0000110e<4366>[32]))}
  sf           [writer=0x080485bb] write-only = {defs={0x080485bb}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v37697[32] 0x0000110e<4366>[32]))}
  of           [writer=0x080485bb] write-only = {defs={0x080485bb}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v37697[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v37697[32]) 0x00000110e<4366>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v37697[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v37697[32]) 0x00000110e<4366>[33])))}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080485ba,0x080485c1}, expr=(add[32] esp_0[32] 0x00000003[32])} writer=0x080485c1 write-only value={defs={0x080485c1}, expr=0x08[8]}
  addr={defs={0x080485ba,0x080485c1}, expr=(add[32] esp_0[32] 0x00000002[32])} writer=0x080485c1 write-only value={defs={0x080485c1}, expr=0x04[8]}
  addr={defs={0x080485ba,0x080485c1}, expr=(add[32] esp_0[32] 0x00000001[32])} writer=0x080485c1 write-only value={defs={0x080485c1}, expr=0x85<-123>[8]}
  addr={defs={0x080485ba,0x080485c1}, expr=esp_0[32]} writer=0x080485c1 write-only value={defs={0x080485c1}, expr=0xc6<-58>[8]}
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v37697[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v37697[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v37697[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v37697[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080485c6: pop    eax
registers:
  eax          [writer=0x080485c6] write-only = v38235[32]
  esp          [writer=0x080485c6] read-before-write = {defs={0x080485c6}, expr=(add[32] esp_0[32] 0x00000004[32])}
  eip          [writer=0x080485c6] write-only = {defs={0x080485c6}, expr=0x080485c7<134514119>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38235[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38235[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38235[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38235[32])

0x080485c7: pop    ebx
registers:
  eax          [writer=0x080485c6] write-only = v38235[32]
  ebx          [writer=0x080485c7] write-only = v38253[32]
  esp          [writer=0x080485c7] read-before-write = {defs={0x080485c6,0x080485c7}, expr=(add[32] esp_0[32] 0x00000008[32])}
  eip          [writer=0x080485c7] write-only = {defs={0x080485c7}, expr=0x080485c8<134514120>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 0x00000007[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38253[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 0x00000006[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38253[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 0x00000005[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38253[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 0x00000004[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38253[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38235[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38235[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38235[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38235[32])

0x080485c8: leave  
registers:
  eax          [writer=0x080485c6] write-only = v38235[32]
  ebx          [writer=0x080485c7] write-only = v38253[32]
  esp          [writer=0x080485c8] read-before-write = {defs={0x080485c8}, expr=(add[32] ebp_0[32] 0x00000004[32])}
  ebp          [writer=0x080485c8] read-before-write = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m38293[8] (add[32] ebp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38272[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v38235[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38235[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38235[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38235[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v38253[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38253[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38253[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38253[32])) (add[32] ebp_0[32] 0x00000003[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m38287[8] (add[32] ebp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38272[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v38235[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38235[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38235[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38235[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v38253[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38253[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38253[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38253[32])) (add[32] ebp_0[32] 0x00000002[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m38281[8] (add[32] ebp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38272[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v38235[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38235[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38235[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38235[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v38253[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38253[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38253[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38253[32])) (add[32] ebp_0[32] 0x00000001[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m38276[8] ebp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v38272[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v38235[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38235[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38235[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38235[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v38253[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38253[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38253[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38253[32])) ebp_0[32]))
  eip          [writer=0x080485c8] write-only = {defs={0x080485c8}, expr=0x080485c9<134514121>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38272[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38272[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38272[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38272[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 0x00000007[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38253[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 0x00000006[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38253[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 0x00000005[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38253[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 0x00000004[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38253[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38235[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38235[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38235[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38235[32])

0x080485c9: ret    
registers:
  eax          [writer=0x080485c6] write-only = v38235[32]
  ebx          [writer=0x080485c7] write-only = v38253[32]
  esp          [writer=0x080485c9] read-before-write = {defs={0x080485c8,0x080485c9}, expr=(add[32] ebp_0[32] 0x00000008[32])}
  ebp          [writer=0x080485c8] read-before-write = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m38293[8] (add[32] ebp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38272[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v38235[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38235[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38235[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38235[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v38253[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38253[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38253[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38253[32])) (add[32] ebp_0[32] 0x00000003[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m38287[8] (add[32] ebp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38272[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v38235[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38235[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38235[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38235[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v38253[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38253[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38253[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38253[32])) (add[32] ebp_0[32] 0x00000002[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m38281[8] (add[32] ebp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38272[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v38235[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38235[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38235[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38235[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v38253[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38253[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38253[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38253[32])) (add[32] ebp_0[32] 0x00000001[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m38276[8] ebp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v38272[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v38235[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38235[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38235[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38235[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v38253[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38253[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38253[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38253[32])) ebp_0[32]))
  eip          [writer=0x080485c9] write-only = (concat[32] (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m38319[8] (add[32] ebp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38298[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v38235[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38235[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38235[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38235[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v38253[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38253[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38253[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38253[32])) (add[32] ebp_0[32] 0x00000007[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m38313[8] (add[32] ebp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38298[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v38235[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38235[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38235[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38235[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v38253[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38253[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38253[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38253[32])) (add[32] ebp_0[32] 0x00000006[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m38307[8] (add[32] ebp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38298[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v38235[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38235[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38235[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38235[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v38253[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38253[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38253[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38253[32])) (add[32] ebp_0[32] 0x00000005[32])) (read[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] (write[8] m38302[8] (add[32] ebp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v38298[32])) esp_0[32] (extract[8] 0x00000000[32] 0x00000008[32] v38235[32])) (add[32] esp_0[32] 0x00000001[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38235[32])) (add[32] esp_0[32] 0x00000002[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38235[32])) (add[32] esp_0[32] 0x00000003[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38235[32])) (add[32] esp_0[32] 0x00000004[32]) (extract[8] 0x00000000[32] 0x00000008[32] v38253[32])) (add[32] esp_0[32] 0x00000005[32]) (extract[8] 0x00000008[32] 0x00000010[32] v38253[32])) (add[32] esp_0[32] 0x00000006[32]) (extract[8] 0x00000010[32] 0x00000018[32] v38253[32])) (add[32] esp_0[32] 0x00000007[32]) (extract[8] 0x00000018[32] 0x00000020[32] v38253[32])) (add[32] ebp_0[32] 0x00000004[32])))
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080485c8}, expr=(add[32] ebp_0[32] 0x00000007[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38298[32])
  addr={defs={0x080485c8}, expr=(add[32] ebp_0[32] 0x00000006[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38298[32])
  addr={defs={0x080485c8}, expr=(add[32] ebp_0[32] 0x00000005[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38298[32])
  addr={defs={0x080485c8}, expr=(add[32] ebp_0[32] 0x00000004[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38298[32])
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38272[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38272[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38272[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38272[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 0x00000007[32])} read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38253[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 0x00000006[32])} read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38253[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 0x00000005[32])} read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38253[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 0x00000004[32])} read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38253[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38235[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38235[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38235[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38235[32])
analyzed headers: 1
