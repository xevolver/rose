=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080482c8: push   ebp
Symbolic@0x18f2ee0: startInstruction(0x080482c8: push   ebp)
Symbolic@0x18f2ee0 insn@0x080482c8[0]: number_(32, 134513352) = 0x080482c8<134513352>[32]
Symbolic@0x18f2ee0 insn@0x080482c8[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080482c8[0]: add(0x080482c8<134513352>[32], 0x00000001[32]) = 0x080482c9<134513353>[32]
Symbolic@0x18f2ee0 insn@0x080482c8[0]: writeRegister(eip, 0x080482c9<134513353>[32])
Symbolic@0x18f2ee0 insn@0x080482c8[0]: undefined_(32) = v14653[32]
Symbolic@0x18f2ee0 insn@0x080482c8[0]: readRegister(ebp, v14653[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x080482c8[0]: undefined_(32) = v14654[32]
Symbolic@0x18f2ee0 insn@0x080482c8[0]: readRegister(esp, v14654[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x080482c8[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080482c8[0]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x080482c8[0]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080482c8[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080482c8[0]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), ebp_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x080482c8[0]: finishInstruction(push   ebp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080482c9<134513353>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080482c9: mov    ebp, esp
Symbolic@0x18f2ee0: startInstruction(0x080482c9: mov    ebp, esp)
Symbolic@0x18f2ee0 insn@0x080482c9[1]: number_(32, 134513353) = 0x080482c9<134513353>[32]
Symbolic@0x18f2ee0 insn@0x080482c9[1]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080482c9[1]: add(0x080482c9<134513353>[32], 0x00000002[32]) = 0x080482cb<134513355>[32]
Symbolic@0x18f2ee0 insn@0x080482c9[1]: writeRegister(eip, 0x080482cb<134513355>[32])
Symbolic@0x18f2ee0 insn@0x080482c9[1]: undefined_(32) = v14669[32]
Symbolic@0x18f2ee0 insn@0x080482c9[1]: readRegister(esp, v14669[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x080482c9[1]: writeRegister(ebp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080482c9[1]: finishInstruction(mov    ebp, esp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080482cb<134513355>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080482cb: sub    esp, 0x08
Symbolic@0x18f2ee0: startInstruction(0x080482cb: sub    esp, 0x08)
Symbolic@0x18f2ee0 insn@0x080482cb[2]: number_(32, 134513355) = 0x080482cb<134513355>[32]
Symbolic@0x18f2ee0 insn@0x080482cb[2]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x080482cb[2]: add(0x080482cb<134513355>[32], 0x00000003[32]) = 0x080482ce<134513358>[32]
Symbolic@0x18f2ee0 insn@0x080482cb[2]: writeRegister(eip, 0x080482ce<134513358>[32])
Symbolic@0x18f2ee0 insn@0x080482cb[2]: undefined_(32) = v14676[32]
Symbolic@0x18f2ee0 insn@0x080482cb[2]: readRegister(esp, v14676[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x080482cb[2]: number_(8, 8) = 0x08[8]
Symbolic@0x18f2ee0 insn@0x080482cb[2]: signExtend(0x08[8], 32) = 0x00000008[32]
Symbolic@0x18f2ee0 insn@0x080482cb[2]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080482cb[2]: invert(0x00000008[32]) = 0xfffffff7<4294967287,-9>[32]
Symbolic@0x18f2ee0 insn@0x080482cb[2]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x080482cb[2]: addWithCarries((add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0xfffffff7<4294967287,-9>[32], true[1]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x080482cb[2]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: extract((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: extract((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: equalToZero((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: writeRegister(zf, (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: invert((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: writeRegister(cf, (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080482cb[2]: finishInstruction(sub    esp, 0x08)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080482ce<134513358>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080482ce: call   0x08048364<call_gmon_start>
Symbolic@0x18f2ee0: startInstruction(0x080482ce: call   0x08048364<call_gmon_start>)
Symbolic@0x18f2ee0 insn@0x080482ce[3]: number_(32, 134513358) = 0x080482ce<134513358>[32]
Symbolic@0x18f2ee0 insn@0x080482ce[3]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x080482ce[3]: add(0x080482ce<134513358>[32], 0x00000005[32]) = 0x080482d3<134513363>[32]
Symbolic@0x18f2ee0 insn@0x080482ce[3]: writeRegister(eip, 0x080482d3<134513363>[32])
Symbolic@0x18f2ee0 insn@0x080482ce[3]: number_(32, 134513508) = 0x08048364<134513508>[32]
Symbolic@0x18f2ee0 insn@0x080482ce[3]: unsignedExtend(0x08048364<134513508>[32], 32) = 0x08048364<134513508>[32]
Symbolic@0x18f2ee0 insn@0x080482ce[3]: undefined_(32) = v14723[32]
Symbolic@0x18f2ee0 insn@0x080482ce[3]: readRegister(esp, v14723[32]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x080482ce[3]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080482ce[3]: add((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])
Symbolic@0x18f2ee0 insn@0x080482ce[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080482ce[3]: undefined_(32) = v14726[32]
Symbolic@0x18f2ee0 insn@0x080482ce[3]: readRegister(eip, v14726[32]) = 0x080482d3<134513363>[32]
Symbolic@0x18f2ee0 insn@0x080482ce[3]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]), 0x080482d3<134513363>[32], true[1])
Symbolic@0x18f2ee0 insn@0x080482ce[3]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]))
Symbolic@0x18f2ee0 insn@0x080482ce[3]: filterCallTarget(0x08048364<134513508>[32]) = 0x08048364<134513508>[32]
Symbolic@0x18f2ee0 insn@0x080482ce[3]: writeRegister(eip, 0x08048364<134513508>[32])
Symbolic@0x18f2ee0 insn@0x080482ce[3]: finishInstruction(call   0x08048364<call_gmon_start>)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = 0x08048364<134513508>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32]) write-only value=0x82<-126>[8]
  addr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]) write-only value=0xd3<-45>[8]
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080482d3: call   0x080483d0<frame_dummy>
Symbolic@0x18f2ee0: startInstruction(0x080482d3: call   0x080483d0<frame_dummy>)
Symbolic@0x18f2ee0 insn@0x080482d3[0]: number_(32, 134513363) = 0x080482d3<134513363>[32]
Symbolic@0x18f2ee0 insn@0x080482d3[0]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x080482d3[0]: add(0x080482d3<134513363>[32], 0x00000005[32]) = 0x080482d8<134513368>[32]
Symbolic@0x18f2ee0 insn@0x080482d3[0]: writeRegister(eip, 0x080482d8<134513368>[32])
Symbolic@0x18f2ee0 insn@0x080482d3[0]: number_(32, 134513616) = 0x080483d0<134513616>[32]
Symbolic@0x18f2ee0 insn@0x080482d3[0]: unsignedExtend(0x080483d0<134513616>[32], 32) = 0x080483d0<134513616>[32]
Symbolic@0x18f2ee0 insn@0x080482d3[0]: undefined_(32) = v15225[32]
Symbolic@0x18f2ee0 insn@0x080482d3[0]: readRegister(esp, v15225[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x080482d3[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080482d3[0]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x080482d3[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080482d3[0]: undefined_(32) = v15227[32]
Symbolic@0x18f2ee0 insn@0x080482d3[0]: readRegister(eip, v15227[32]) = 0x080482d8<134513368>[32]
Symbolic@0x18f2ee0 insn@0x080482d3[0]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0x080482d8<134513368>[32], true[1])
Symbolic@0x18f2ee0 insn@0x080482d3[0]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080482d3[0]: filterCallTarget(0x080483d0<134513616>[32]) = 0x080483d0<134513616>[32]
Symbolic@0x18f2ee0 insn@0x080482d3[0]: writeRegister(eip, 0x080483d0<134513616>[32])
Symbolic@0x18f2ee0 insn@0x080482d3[0]: finishInstruction(call   0x080483d0<frame_dummy>)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = 0x080483d0<134513616>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=0x82<-126>[8]
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=0xd8<-40>[8]
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080482d8: call   0x08048580<__do_global_ctors_aux>
Symbolic@0x18f2ee0: startInstruction(0x080482d8: call   0x08048580<__do_global_ctors_aux>)
Symbolic@0x18f2ee0 insn@0x080482d8[0]: number_(32, 134513368) = 0x080482d8<134513368>[32]
Symbolic@0x18f2ee0 insn@0x080482d8[0]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x080482d8[0]: add(0x080482d8<134513368>[32], 0x00000005[32]) = 0x080482dd<134513373>[32]
Symbolic@0x18f2ee0 insn@0x080482d8[0]: writeRegister(eip, 0x080482dd<134513373>[32])
Symbolic@0x18f2ee0 insn@0x080482d8[0]: number_(32, 134514048) = 0x08048580<134514048>[32]
Symbolic@0x18f2ee0 insn@0x080482d8[0]: unsignedExtend(0x08048580<134514048>[32], 32) = 0x08048580<134514048>[32]
Symbolic@0x18f2ee0 insn@0x080482d8[0]: undefined_(32) = v15726[32]
Symbolic@0x18f2ee0 insn@0x080482d8[0]: readRegister(esp, v15726[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x080482d8[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080482d8[0]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x080482d8[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080482d8[0]: undefined_(32) = v15728[32]
Symbolic@0x18f2ee0 insn@0x080482d8[0]: readRegister(eip, v15728[32]) = 0x080482dd<134513373>[32]
Symbolic@0x18f2ee0 insn@0x080482d8[0]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0x080482dd<134513373>[32], true[1])
Symbolic@0x18f2ee0 insn@0x080482d8[0]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080482d8[0]: filterCallTarget(0x08048580<134514048>[32]) = 0x08048580<134514048>[32]
Symbolic@0x18f2ee0 insn@0x080482d8[0]: writeRegister(eip, 0x08048580<134514048>[32])
Symbolic@0x18f2ee0 insn@0x080482d8[0]: finishInstruction(call   0x08048580<__do_global_ctors_aux>)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = 0x08048580<134514048>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=0x82<-126>[8]
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=0xdd<-35>[8]
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080482dd: leave  
Symbolic@0x18f2ee0: startInstruction(0x080482dd: leave)
Symbolic@0x18f2ee0 insn@0x080482dd[0]: number_(32, 134513373) = 0x080482dd<134513373>[32]
Symbolic@0x18f2ee0 insn@0x080482dd[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080482dd[0]: add(0x080482dd<134513373>[32], 0x00000001[32]) = 0x080482de<134513374>[32]
Symbolic@0x18f2ee0 insn@0x080482dd[0]: writeRegister(eip, 0x080482de<134513374>[32])
Symbolic@0x18f2ee0 insn@0x080482dd[0]: undefined_(32) = v16226[32]
Symbolic@0x18f2ee0 insn@0x080482dd[0]: readRegister(ebp, v16226[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x080482dd[0]: writeRegister(esp, ebp_0[32])
Symbolic@0x18f2ee0 insn@0x080482dd[0]: undefined_(32) = v16227[32]
Symbolic@0x18f2ee0 insn@0x080482dd[0]: readRegister(esp, v16227[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x080482dd[0]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080482dd[0]: add(ebp_0[32], 0x00000004[32]) = (add[32] ebp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x080482dd[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080482dd[0]: undefined_(32) = v16230[32]
Symbolic@0x18f2ee0 insn@0x080482dd[0]: readMemory(ss, ebp_0[32], v16230[32], true[1]) = v16230[32]
Symbolic@0x18f2ee0 insn@0x080482dd[0]: writeRegister(ebp, v16230[32])
Symbolic@0x18f2ee0 insn@0x080482dd[0]: writeRegister(esp, (add[32] ebp_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080482dd[0]: finishInstruction(leave)
registers:
  esp          = (add[32] ebp_0[32] 0x00000004[32])
  ebp          read-before-write = v16230[32]
  eip          write-only = 0x080482de<134513374>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v16230[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v16230[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v16230[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v16230[32])

0x080482de: ret    
Symbolic@0x18f2ee0: startInstruction(0x080482de: ret)
Symbolic@0x18f2ee0 insn@0x080482de[1]: number_(32, 134513374) = 0x080482de<134513374>[32]
Symbolic@0x18f2ee0 insn@0x080482de[1]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080482de[1]: add(0x080482de<134513374>[32], 0x00000001[32]) = 0x080482df<134513375>[32]
Symbolic@0x18f2ee0 insn@0x080482de[1]: writeRegister(eip, 0x080482df<134513375>[32])
Symbolic@0x18f2ee0 insn@0x080482de[1]: undefined_(32) = v16252[32]
Symbolic@0x18f2ee0 insn@0x080482de[1]: readRegister(esp, v16252[32]) = (add[32] ebp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x080482de[1]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080482de[1]: add((add[32] ebp_0[32] 0x00000004[32]), 0x00000004[32]) = (add[32] ebp_0[32] 0x00000008[32])
Symbolic@0x18f2ee0 insn@0x080482de[1]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080482de[1]: undefined_(32) = v16255[32]
Symbolic@0x18f2ee0 insn@0x080482de[1]: readMemory(ss, (add[32] ebp_0[32] 0x00000004[32]), v16255[32], true[1]) = v16255[32]
Symbolic@0x18f2ee0 insn@0x080482de[1]: filterReturnTarget(v16255[32]) = v16255[32]
Symbolic@0x18f2ee0 insn@0x080482de[1]: writeRegister(eip, v16255[32])
Symbolic@0x18f2ee0 insn@0x080482de[1]: writeRegister(esp, (add[32] ebp_0[32] 0x00000008[32]))
Symbolic@0x18f2ee0 insn@0x080482de[1]: finishInstruction(ret)
registers:
  esp          = (add[32] ebp_0[32] 0x00000008[32])
  ebp          read-before-write = v16230[32]
  eip          write-only = v16255[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000007[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v16255[32])
  addr=(add[32] ebp_0[32] 0x00000006[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v16255[32])
  addr=(add[32] ebp_0[32] 0x00000005[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v16255[32])
  addr=(add[32] ebp_0[32] 0x00000004[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v16255[32])
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v16230[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v16230[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v16230[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v16230[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080482f0: jmp    dword ds:[0x080496d4<.got.plt+0x0c>]
Symbolic@0x18f2ee0: startInstruction(0x080482f0: jmp    dword ds:[0x080496d4<.got.plt+0x0c>])
Symbolic@0x18f2ee0 insn@0x080482f0[0]: number_(32, 134513392) = 0x080482f0<134513392>[32]
Symbolic@0x18f2ee0 insn@0x080482f0[0]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x080482f0[0]: add(0x080482f0<134513392>[32], 0x00000006[32]) = 0x080482f6<134513398>[32]
Symbolic@0x18f2ee0 insn@0x080482f0[0]: writeRegister(eip, 0x080482f6<134513398>[32])
Symbolic@0x18f2ee0 insn@0x080482f0[0]: number_(32, 134518484) = 0x080496d4<134518484>[32]
Symbolic@0x18f2ee0 insn@0x080482f0[0]: undefined_(32) = v16761[32]
Symbolic@0x18f2ee0 insn@0x080482f0[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080482f0[0]: readMemory(ds, 0x080496d4<134518484>[32], v16761[32], true[1]) = v16761[32]
Symbolic@0x18f2ee0 insn@0x080482f0[0]: unsignedExtend(v16761[32], 32) = v16761[32]
Symbolic@0x18f2ee0 insn@0x080482f0[0]: filterIndirectJumpTarget(v16761[32]) = v16761[32]
Symbolic@0x18f2ee0 insn@0x080482f0[0]: writeRegister(eip, v16761[32])
Symbolic@0x18f2ee0 insn@0x080482f0[0]: finishInstruction(jmp    dword ds:[0x080496d4<.got.plt+0x0c>])
registers:
  eip          write-only = v16761[32]
  fpstatus_top = 0x0[3]
memory:
  addr=0x080496d7<134518487>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v16761[32])
  addr=0x080496d6<134518486>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v16761[32])
  addr=0x080496d5<134518485>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v16761[32])
  addr=0x080496d4<134518484>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v16761[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048300: jmp    dword ds:[0x080496d8<.got.plt+0x10>]
Symbolic@0x18f2ee0: startInstruction(0x08048300: jmp    dword ds:[0x080496d8<.got.plt+0x10>])
Symbolic@0x18f2ee0 insn@0x08048300[0]: number_(32, 134513408) = 0x08048300<134513408>[32]
Symbolic@0x18f2ee0 insn@0x08048300[0]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x08048300[0]: add(0x08048300<134513408>[32], 0x00000006[32]) = 0x08048306<134513414>[32]
Symbolic@0x18f2ee0 insn@0x08048300[0]: writeRegister(eip, 0x08048306<134513414>[32])
Symbolic@0x18f2ee0 insn@0x08048300[0]: number_(32, 134518488) = 0x080496d8<134518488>[32]
Symbolic@0x18f2ee0 insn@0x08048300[0]: undefined_(32) = v17267[32]
Symbolic@0x18f2ee0 insn@0x08048300[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048300[0]: readMemory(ds, 0x080496d8<134518488>[32], v17267[32], true[1]) = v17267[32]
Symbolic@0x18f2ee0 insn@0x08048300[0]: unsignedExtend(v17267[32], 32) = v17267[32]
Symbolic@0x18f2ee0 insn@0x08048300[0]: filterIndirectJumpTarget(v17267[32]) = v17267[32]
Symbolic@0x18f2ee0 insn@0x08048300[0]: writeRegister(eip, v17267[32])
Symbolic@0x18f2ee0 insn@0x08048300[0]: finishInstruction(jmp    dword ds:[0x080496d8<.got.plt+0x10>])
registers:
  eip          write-only = v17267[32]
  fpstatus_top = 0x0[3]
memory:
  addr=0x080496db<134518491>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v17267[32])
  addr=0x080496da<134518490>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v17267[32])
  addr=0x080496d9<134518489>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v17267[32])
  addr=0x080496d8<134518488>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v17267[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048310: jmp    dword ds:[0x080496dc<.got.plt+0x14>]
Symbolic@0x18f2ee0: startInstruction(0x08048310: jmp    dword ds:[0x080496dc<.got.plt+0x14>])
Symbolic@0x18f2ee0 insn@0x08048310[0]: number_(32, 134513424) = 0x08048310<134513424>[32]
Symbolic@0x18f2ee0 insn@0x08048310[0]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x08048310[0]: add(0x08048310<134513424>[32], 0x00000006[32]) = 0x08048316<134513430>[32]
Symbolic@0x18f2ee0 insn@0x08048310[0]: writeRegister(eip, 0x08048316<134513430>[32])
Symbolic@0x18f2ee0 insn@0x08048310[0]: number_(32, 134518492) = 0x080496dc<134518492>[32]
Symbolic@0x18f2ee0 insn@0x08048310[0]: undefined_(32) = v17773[32]
Symbolic@0x18f2ee0 insn@0x08048310[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048310[0]: readMemory(ds, 0x080496dc<134518492>[32], v17773[32], true[1]) = v17773[32]
Symbolic@0x18f2ee0 insn@0x08048310[0]: unsignedExtend(v17773[32], 32) = v17773[32]
Symbolic@0x18f2ee0 insn@0x08048310[0]: filterIndirectJumpTarget(v17773[32]) = v17773[32]
Symbolic@0x18f2ee0 insn@0x08048310[0]: writeRegister(eip, v17773[32])
Symbolic@0x18f2ee0 insn@0x08048310[0]: finishInstruction(jmp    dword ds:[0x080496dc<.got.plt+0x14>])
registers:
  eip          write-only = v17773[32]
  fpstatus_top = 0x0[3]
memory:
  addr=0x080496df<134518495>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v17773[32])
  addr=0x080496de<134518494>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v17773[32])
  addr=0x080496dd<134518493>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v17773[32])
  addr=0x080496dc<134518492>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v17773[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048320: jmp    dword ds:[0x080496e0<.got.plt+0x18>]
Symbolic@0x18f2ee0: startInstruction(0x08048320: jmp    dword ds:[0x080496e0<.got.plt+0x18>])
Symbolic@0x18f2ee0 insn@0x08048320[0]: number_(32, 134513440) = 0x08048320<134513440>[32]
Symbolic@0x18f2ee0 insn@0x08048320[0]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x08048320[0]: add(0x08048320<134513440>[32], 0x00000006[32]) = 0x08048326<134513446>[32]
Symbolic@0x18f2ee0 insn@0x08048320[0]: writeRegister(eip, 0x08048326<134513446>[32])
Symbolic@0x18f2ee0 insn@0x08048320[0]: number_(32, 134518496) = 0x080496e0<134518496>[32]
Symbolic@0x18f2ee0 insn@0x08048320[0]: undefined_(32) = v18279[32]
Symbolic@0x18f2ee0 insn@0x08048320[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048320[0]: readMemory(ds, 0x080496e0<134518496>[32], v18279[32], true[1]) = v18279[32]
Symbolic@0x18f2ee0 insn@0x08048320[0]: unsignedExtend(v18279[32], 32) = v18279[32]
Symbolic@0x18f2ee0 insn@0x08048320[0]: filterIndirectJumpTarget(v18279[32]) = v18279[32]
Symbolic@0x18f2ee0 insn@0x08048320[0]: writeRegister(eip, v18279[32])
Symbolic@0x18f2ee0 insn@0x08048320[0]: finishInstruction(jmp    dword ds:[0x080496e0<.got.plt+0x18>])
registers:
  eip          write-only = v18279[32]
  fpstatus_top = 0x0[3]
memory:
  addr=0x080496e3<134518499>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v18279[32])
  addr=0x080496e2<134518498>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v18279[32])
  addr=0x080496e1<134518497>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v18279[32])
  addr=0x080496e0<134518496>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v18279[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048330: jmp    dword ds:[0x080496e4<.got.plt+0x1c>]
Symbolic@0x18f2ee0: startInstruction(0x08048330: jmp    dword ds:[0x080496e4<.got.plt+0x1c>])
Symbolic@0x18f2ee0 insn@0x08048330[0]: number_(32, 134513456) = 0x08048330<134513456>[32]
Symbolic@0x18f2ee0 insn@0x08048330[0]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x08048330[0]: add(0x08048330<134513456>[32], 0x00000006[32]) = 0x08048336<134513462>[32]
Symbolic@0x18f2ee0 insn@0x08048330[0]: writeRegister(eip, 0x08048336<134513462>[32])
Symbolic@0x18f2ee0 insn@0x08048330[0]: number_(32, 134518500) = 0x080496e4<134518500>[32]
Symbolic@0x18f2ee0 insn@0x08048330[0]: undefined_(32) = v18785[32]
Symbolic@0x18f2ee0 insn@0x08048330[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048330[0]: readMemory(ds, 0x080496e4<134518500>[32], v18785[32], true[1]) = v18785[32]
Symbolic@0x18f2ee0 insn@0x08048330[0]: unsignedExtend(v18785[32], 32) = v18785[32]
Symbolic@0x18f2ee0 insn@0x08048330[0]: filterIndirectJumpTarget(v18785[32]) = v18785[32]
Symbolic@0x18f2ee0 insn@0x08048330[0]: writeRegister(eip, v18785[32])
Symbolic@0x18f2ee0 insn@0x08048330[0]: finishInstruction(jmp    dword ds:[0x080496e4<.got.plt+0x1c>])
registers:
  eip          write-only = v18785[32]
  fpstatus_top = 0x0[3]
memory:
  addr=0x080496e7<134518503>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v18785[32])
  addr=0x080496e6<134518502>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v18785[32])
  addr=0x080496e5<134518501>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v18785[32])
  addr=0x080496e4<134518500>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v18785[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048340: xor    ebp, ebp
Symbolic@0x18f2ee0: startInstruction(0x08048340: xor    ebp, ebp)
Symbolic@0x18f2ee0 insn@0x08048340[0]: number_(32, 134513472) = 0x08048340<134513472>[32]
Symbolic@0x18f2ee0 insn@0x08048340[0]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x08048340[0]: add(0x08048340<134513472>[32], 0x00000002[32]) = 0x08048342<134513474>[32]
Symbolic@0x18f2ee0 insn@0x08048340[0]: writeRegister(eip, 0x08048342<134513474>[32])
Symbolic@0x18f2ee0 insn@0x08048340[0]: number_(32, 0) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x08048340[0]: extract(0x00000000[32], 0, 8) = 0x00[8]
Symbolic@0x18f2ee0 insn@0x08048340[0]: extract(0x00[8], 1, 2) = false[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: extract(0x00[8], 0, 1) = false[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: extract(0x00[8], 3, 4) = false[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: extract(0x00[8], 2, 3) = false[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: extract(0x00[8], 5, 6) = false[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: extract(0x00[8], 4, 5) = false[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: extract(0x00[8], 7, 8) = false[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: extract(0x00[8], 6, 7) = false[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: writeRegister(pf, true[1])
Symbolic@0x18f2ee0 insn@0x08048340[0]: extract(0x00000000[32], 31, 32) = false[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: writeRegister(sf, false[1])
Symbolic@0x18f2ee0 insn@0x08048340[0]: equalToZero(0x00000000[32]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: writeRegister(zf, true[1])
Symbolic@0x18f2ee0 insn@0x08048340[0]: writeRegister(ebp, 0x00000000[32])
Symbolic@0x18f2ee0 insn@0x08048340[0]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: writeRegister(of, false[1])
Symbolic@0x18f2ee0 insn@0x08048340[0]: unspecified_(1) = v19303[1]<unspec>
Symbolic@0x18f2ee0 insn@0x08048340[0]: writeRegister(af, v19303[1]<unspec>)
Symbolic@0x18f2ee0 insn@0x08048340[0]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048340[0]: writeRegister(cf, false[1])
Symbolic@0x18f2ee0 insn@0x08048340[0]: finishInstruction(xor    ebp, ebp)
registers:
  ebp          write-only = 0x00000000[32]
  eip          write-only = 0x08048342<134513474>[32]
  cf           write-only = false[1]
  pf           write-only = true[1]
  af           write-only = v19303[1]<unspec>
  zf           write-only = true[1]
  sf           write-only = false[1]
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:

0x08048342: pop    esi
Symbolic@0x18f2ee0: startInstruction(0x08048342: pop    esi)
Symbolic@0x18f2ee0 insn@0x08048342[1]: number_(32, 134513474) = 0x08048342<134513474>[32]
Symbolic@0x18f2ee0 insn@0x08048342[1]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048342[1]: add(0x08048342<134513474>[32], 0x00000001[32]) = 0x08048343<134513475>[32]
Symbolic@0x18f2ee0 insn@0x08048342[1]: writeRegister(eip, 0x08048343<134513475>[32])
Symbolic@0x18f2ee0 insn@0x08048342[1]: undefined_(32) = v19308[32]
Symbolic@0x18f2ee0 insn@0x08048342[1]: readRegister(esp, v19308[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x08048342[1]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x08048342[1]: add(esp_0[32], 0x00000004[32]) = (add[32] esp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x08048342[1]: writeRegister(esp, (add[32] esp_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x08048342[1]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048342[1]: undefined_(32) = v19311[32]
Symbolic@0x18f2ee0 insn@0x08048342[1]: readMemory(ss, esp_0[32], v19311[32], true[1]) = v19311[32]
Symbolic@0x18f2ee0 insn@0x08048342[1]: writeRegister(esi, v19311[32])
Symbolic@0x18f2ee0 insn@0x08048342[1]: finishInstruction(pop    esi)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  ebp          write-only = 0x00000000[32]
  esi          write-only = v19311[32]
  eip          write-only = 0x08048343<134513475>[32]
  cf           write-only = false[1]
  pf           write-only = true[1]
  af           write-only = v19303[1]<unspec>
  zf           write-only = true[1]
  sf           write-only = false[1]
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19311[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19311[32])

0x08048343: mov    ecx, esp
Symbolic@0x18f2ee0: startInstruction(0x08048343: mov    ecx, esp)
Symbolic@0x18f2ee0 insn@0x08048343[2]: number_(32, 134513475) = 0x08048343<134513475>[32]
Symbolic@0x18f2ee0 insn@0x08048343[2]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x08048343[2]: add(0x08048343<134513475>[32], 0x00000002[32]) = 0x08048345<134513477>[32]
Symbolic@0x18f2ee0 insn@0x08048343[2]: writeRegister(eip, 0x08048345<134513477>[32])
Symbolic@0x18f2ee0 insn@0x08048343[2]: undefined_(32) = v19331[32]
Symbolic@0x18f2ee0 insn@0x08048343[2]: readRegister(esp, v19331[32]) = (add[32] esp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x08048343[2]: writeRegister(ecx, (add[32] esp_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x08048343[2]: finishInstruction(mov    ecx, esp)
registers:
  ecx          write-only = (add[32] esp_0[32] 0x00000004[32])
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  ebp          write-only = 0x00000000[32]
  esi          write-only = v19311[32]
  eip          write-only = 0x08048345<134513477>[32]
  cf           write-only = false[1]
  pf           write-only = true[1]
  af           write-only = v19303[1]<unspec>
  zf           write-only = true[1]
  sf           write-only = false[1]
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19311[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19311[32])

0x08048345: and    esp, 0xf0<-16>
Symbolic@0x18f2ee0: startInstruction(0x08048345: and    esp, 0xf0<-16>)
Symbolic@0x18f2ee0 insn@0x08048345[3]: number_(32, 134513477) = 0x08048345<134513477>[32]
Symbolic@0x18f2ee0 insn@0x08048345[3]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x08048345[3]: add(0x08048345<134513477>[32], 0x00000003[32]) = 0x08048348<134513480>[32]
Symbolic@0x18f2ee0 insn@0x08048345[3]: writeRegister(eip, 0x08048348<134513480>[32])
Symbolic@0x18f2ee0 insn@0x08048345[3]: undefined_(32) = v19337[32]
Symbolic@0x18f2ee0 insn@0x08048345[3]: readRegister(esp, v19337[32]) = (add[32] esp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x08048345[3]: number_(8, 18446744073709551600) = 0xf0<-16>[8]
Symbolic@0x18f2ee0 insn@0x08048345[3]: signExtend(0xf0<-16>[8], 32) = 0xfffffff0<4294967280,-16>[32]
Symbolic@0x18f2ee0 insn@0x08048345[3]: and_((add[32] esp_0[32] 0x00000004[32]), 0xfffffff0<4294967280,-16>[32]) = (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])
Symbolic@0x18f2ee0 insn@0x08048345[3]: extract((bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x08048345[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x08048345[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x08048345[3]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])))
Symbolic@0x18f2ee0 insn@0x08048345[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x08048345[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x08048345[3]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])))
Symbolic@0x18f2ee0 insn@0x08048345[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x08048345[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x08048345[3]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])))
Symbolic@0x18f2ee0 insn@0x08048345[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x08048345[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x08048345[3]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])))
Symbolic@0x18f2ee0 insn@0x08048345[3]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])))
Symbolic@0x18f2ee0 insn@0x08048345[3]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])))
Symbolic@0x18f2ee0 insn@0x08048345[3]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])))
Symbolic@0x18f2ee0 insn@0x08048345[3]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))))
Symbolic@0x18f2ee0 insn@0x08048345[3]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])))))
Symbolic@0x18f2ee0 insn@0x08048345[3]: extract((bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x08048345[3]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])))
Symbolic@0x18f2ee0 insn@0x08048345[3]: equalToZero((bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) = (zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x08048345[3]: writeRegister(zf, (zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])))
Symbolic@0x18f2ee0 insn@0x08048345[3]: writeRegister(esp, (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x08048345[3]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048345[3]: writeRegister(of, false[1])
Symbolic@0x18f2ee0 insn@0x08048345[3]: unspecified_(1) = v19365[1]<unspec>
Symbolic@0x18f2ee0 insn@0x08048345[3]: writeRegister(af, v19365[1]<unspec>)
Symbolic@0x18f2ee0 insn@0x08048345[3]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048345[3]: writeRegister(cf, false[1])
Symbolic@0x18f2ee0 insn@0x08048345[3]: finishInstruction(and    esp, 0xf0<-16>)
registers:
  ecx          write-only = (add[32] esp_0[32] 0x00000004[32])
  esp          read-before-write = (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])
  ebp          write-only = 0x00000000[32]
  esi          write-only = v19311[32]
  eip          write-only = 0x08048348<134513480>[32]
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))))
  af           write-only = v19365[1]<unspec>
  zf           write-only = (zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19311[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19311[32])

0x08048348: push   eax
Symbolic@0x18f2ee0: startInstruction(0x08048348: push   eax)
Symbolic@0x18f2ee0 insn@0x08048348[4]: number_(32, 134513480) = 0x08048348<134513480>[32]
Symbolic@0x18f2ee0 insn@0x08048348[4]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048348[4]: add(0x08048348<134513480>[32], 0x00000001[32]) = 0x08048349<134513481>[32]
Symbolic@0x18f2ee0 insn@0x08048348[4]: writeRegister(eip, 0x08048349<134513481>[32])
Symbolic@0x18f2ee0 insn@0x08048348[4]: undefined_(32) = v19372[32]
Symbolic@0x18f2ee0 insn@0x08048348[4]: readRegister(eax, v19372[32]) = eax_0[32]
Symbolic@0x18f2ee0 insn@0x08048348[4]: undefined_(32) = v19373[32]
Symbolic@0x18f2ee0 insn@0x08048348[4]: readRegister(esp, v19373[32]) = (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])
Symbolic@0x18f2ee0 insn@0x08048348[4]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048348[4]: add((bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048348[4]: writeRegister(esp, (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048348[4]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048348[4]: writeMemory(ss, (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]), eax_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048348[4]: finishInstruction(push   eax)
registers:
  ecx          write-only = (add[32] esp_0[32] 0x00000004[32])
  esp          read-before-write = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32])
  ebp          write-only = 0x00000000[32]
  esi          write-only = v19311[32]
  eip          write-only = 0x08048349<134513481>[32]
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))))
  af           write-only = v19365[1]<unspec>
  zf           write-only = (zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19311[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19311[32])

0x08048349: push   esp
Symbolic@0x18f2ee0: startInstruction(0x08048349: push   esp)
Symbolic@0x18f2ee0 insn@0x08048349[5]: number_(32, 134513481) = 0x08048349<134513481>[32]
Symbolic@0x18f2ee0 insn@0x08048349[5]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048349[5]: add(0x08048349<134513481>[32], 0x00000001[32]) = 0x0804834a<134513482>[32]
Symbolic@0x18f2ee0 insn@0x08048349[5]: writeRegister(eip, 0x0804834a<134513482>[32])
Symbolic@0x18f2ee0 insn@0x08048349[5]: undefined_(32) = v19389[32]
Symbolic@0x18f2ee0 insn@0x08048349[5]: readRegister(esp, v19389[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048349[5]: undefined_(32) = v19391[32]
Symbolic@0x18f2ee0 insn@0x08048349[5]: readRegister(esp, v19391[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048349[5]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048349[5]: add((add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32])
Symbolic@0x18f2ee0 insn@0x08048349[5]: writeRegister(esp, (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32]))
Symbolic@0x18f2ee0 insn@0x08048349[5]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048349[5]: writeMemory(ss, (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32]), (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]), true[1])
Symbolic@0x18f2ee0 insn@0x08048349[5]: finishInstruction(push   esp)
registers:
  ecx          write-only = (add[32] esp_0[32] 0x00000004[32])
  esp          read-before-write = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32])
  ebp          write-only = 0x00000000[32]
  esi          write-only = v19311[32]
  eip          write-only = 0x0804834a<134513482>[32]
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))))
  af           write-only = v19365[1]<unspec>
  zf           write-only = (zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19311[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19311[32])

0x0804834a: push   edx
Symbolic@0x18f2ee0: startInstruction(0x0804834a: push   edx)
Symbolic@0x18f2ee0 insn@0x0804834a[6]: number_(32, 134513482) = 0x0804834a<134513482>[32]
Symbolic@0x18f2ee0 insn@0x0804834a[6]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x0804834a[6]: add(0x0804834a<134513482>[32], 0x00000001[32]) = 0x0804834b<134513483>[32]
Symbolic@0x18f2ee0 insn@0x0804834a[6]: writeRegister(eip, 0x0804834b<134513483>[32])
Symbolic@0x18f2ee0 insn@0x0804834a[6]: undefined_(32) = v19407[32]
Symbolic@0x18f2ee0 insn@0x0804834a[6]: readRegister(edx, v19407[32]) = edx_0[32]
Symbolic@0x18f2ee0 insn@0x0804834a[6]: undefined_(32) = v19408[32]
Symbolic@0x18f2ee0 insn@0x0804834a[6]: readRegister(esp, v19408[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32])
Symbolic@0x18f2ee0 insn@0x0804834a[6]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x0804834a[6]: add((add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x0804834a[6]: writeRegister(esp, (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x0804834a[6]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x0804834a[6]: writeMemory(ss, (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32]), edx_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x0804834a[6]: finishInstruction(push   edx)
registers:
  ecx          write-only = (add[32] esp_0[32] 0x00000004[32])
  esp          read-before-write = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32])
  ebp          write-only = 0x00000000[32]
  esi          write-only = v19311[32]
  eip          write-only = 0x0804834b<134513483>[32]
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))))
  af           write-only = v19365[1]<unspec>
  zf           write-only = (zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19311[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19311[32])

0x0804834b: push   0x08048520<__libc_csu_fini>
Symbolic@0x18f2ee0: startInstruction(0x0804834b: push   0x08048520<__libc_csu_fini>)
Symbolic@0x18f2ee0 insn@0x0804834b[7]: number_(32, 134513483) = 0x0804834b<134513483>[32]
Symbolic@0x18f2ee0 insn@0x0804834b[7]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x0804834b[7]: add(0x0804834b<134513483>[32], 0x00000005[32]) = 0x08048350<134513488>[32]
Symbolic@0x18f2ee0 insn@0x0804834b[7]: writeRegister(eip, 0x08048350<134513488>[32])
Symbolic@0x18f2ee0 insn@0x0804834b[7]: number_(32, 134513952) = 0x08048520<134513952>[32]
Symbolic@0x18f2ee0 insn@0x0804834b[7]: undefined_(32) = v19424[32]
Symbolic@0x18f2ee0 insn@0x0804834b[7]: readRegister(esp, v19424[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x0804834b[7]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x0804834b[7]: add((add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32])
Symbolic@0x18f2ee0 insn@0x0804834b[7]: writeRegister(esp, (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32]))
Symbolic@0x18f2ee0 insn@0x0804834b[7]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x0804834b[7]: writeMemory(ss, (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32]), 0x08048520<134513952>[32], true[1])
Symbolic@0x18f2ee0 insn@0x0804834b[7]: finishInstruction(push   0x08048520<__libc_csu_fini>)
registers:
  ecx          write-only = (add[32] esp_0[32] 0x00000004[32])
  esp          read-before-write = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32])
  ebp          write-only = 0x00000000[32]
  esi          write-only = v19311[32]
  eip          write-only = 0x08048350<134513488>[32]
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))))
  af           write-only = v19365[1]<unspec>
  zf           write-only = (zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff3<4294967283,-13>[32]) write-only value=0x08[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff2<4294967282,-14>[32]) write-only value=0x04[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff1<4294967281,-15>[32]) write-only value=0x85<-123>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32]) write-only value=0x20[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19311[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19311[32])

0x08048350: push   0x080484b0<__libc_csu_init>
Symbolic@0x18f2ee0: startInstruction(0x08048350: push   0x080484b0<__libc_csu_init>)
Symbolic@0x18f2ee0 insn@0x08048350[8]: number_(32, 134513488) = 0x08048350<134513488>[32]
Symbolic@0x18f2ee0 insn@0x08048350[8]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x08048350[8]: add(0x08048350<134513488>[32], 0x00000005[32]) = 0x08048355<134513493>[32]
Symbolic@0x18f2ee0 insn@0x08048350[8]: writeRegister(eip, 0x08048355<134513493>[32])
Symbolic@0x18f2ee0 insn@0x08048350[8]: number_(32, 134513840) = 0x080484b0<134513840>[32]
Symbolic@0x18f2ee0 insn@0x08048350[8]: undefined_(32) = v19440[32]
Symbolic@0x18f2ee0 insn@0x08048350[8]: readRegister(esp, v19440[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32])
Symbolic@0x18f2ee0 insn@0x08048350[8]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048350[8]: add((add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffec<4294967276,-20>[32])
Symbolic@0x18f2ee0 insn@0x08048350[8]: writeRegister(esp, (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffec<4294967276,-20>[32]))
Symbolic@0x18f2ee0 insn@0x08048350[8]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048350[8]: writeMemory(ss, (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffec<4294967276,-20>[32]), 0x080484b0<134513840>[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048350[8]: finishInstruction(push   0x080484b0<__libc_csu_init>)
registers:
  ecx          write-only = (add[32] esp_0[32] 0x00000004[32])
  esp          read-before-write = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffec<4294967276,-20>[32])
  ebp          write-only = 0x00000000[32]
  esi          write-only = v19311[32]
  eip          write-only = 0x08048355<134513493>[32]
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))))
  af           write-only = v19365[1]<unspec>
  zf           write-only = (zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffef<4294967279,-17>[32]) write-only value=0x08[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffee<4294967278,-18>[32]) write-only value=0x04[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffed<4294967277,-19>[32]) write-only value=0x84<-124>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffec<4294967276,-20>[32]) write-only value=0xb0<-80>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff3<4294967283,-13>[32]) write-only value=0x08[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff2<4294967282,-14>[32]) write-only value=0x04[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff1<4294967281,-15>[32]) write-only value=0x85<-123>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32]) write-only value=0x20[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19311[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19311[32])

0x08048355: push   ecx
Symbolic@0x18f2ee0: startInstruction(0x08048355: push   ecx)
Symbolic@0x18f2ee0 insn@0x08048355[9]: number_(32, 134513493) = 0x08048355<134513493>[32]
Symbolic@0x18f2ee0 insn@0x08048355[9]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048355[9]: add(0x08048355<134513493>[32], 0x00000001[32]) = 0x08048356<134513494>[32]
Symbolic@0x18f2ee0 insn@0x08048355[9]: writeRegister(eip, 0x08048356<134513494>[32])
Symbolic@0x18f2ee0 insn@0x08048355[9]: undefined_(32) = v19456[32]
Symbolic@0x18f2ee0 insn@0x08048355[9]: readRegister(ecx, v19456[32]) = (add[32] esp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x08048355[9]: undefined_(32) = v19458[32]
Symbolic@0x18f2ee0 insn@0x08048355[9]: readRegister(esp, v19458[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffec<4294967276,-20>[32])
Symbolic@0x18f2ee0 insn@0x08048355[9]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048355[9]: add((add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffec<4294967276,-20>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe8<4294967272,-24>[32])
Symbolic@0x18f2ee0 insn@0x08048355[9]: writeRegister(esp, (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe8<4294967272,-24>[32]))
Symbolic@0x18f2ee0 insn@0x08048355[9]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048355[9]: writeMemory(ss, (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe8<4294967272,-24>[32]), (add[32] esp_0[32] 0x00000004[32]), true[1])
Symbolic@0x18f2ee0 insn@0x08048355[9]: finishInstruction(push   ecx)
registers:
  ecx          = (add[32] esp_0[32] 0x00000004[32])
  esp          read-before-write = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe8<4294967272,-24>[32])
  ebp          write-only = 0x00000000[32]
  esi          write-only = v19311[32]
  eip          write-only = 0x08048356<134513494>[32]
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))))
  af           write-only = v19365[1]<unspec>
  zf           write-only = (zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffeb<4294967275,-21>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] esp_0[32] 0x00000004[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffea<4294967274,-22>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] esp_0[32] 0x00000004[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe9<4294967273,-23>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] esp_0[32] 0x00000004[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe8<4294967272,-24>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x00000004[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffef<4294967279,-17>[32]) write-only value=0x08[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffee<4294967278,-18>[32]) write-only value=0x04[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffed<4294967277,-19>[32]) write-only value=0x84<-124>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffec<4294967276,-20>[32]) write-only value=0xb0<-80>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff3<4294967283,-13>[32]) write-only value=0x08[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff2<4294967282,-14>[32]) write-only value=0x04[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff1<4294967281,-15>[32]) write-only value=0x85<-123>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32]) write-only value=0x20[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19311[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19311[32])

0x08048356: push   esi
Symbolic@0x18f2ee0: startInstruction(0x08048356: push   esi)
Symbolic@0x18f2ee0 insn@0x08048356[10]: number_(32, 134513494) = 0x08048356<134513494>[32]
Symbolic@0x18f2ee0 insn@0x08048356[10]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048356[10]: add(0x08048356<134513494>[32], 0x00000001[32]) = 0x08048357<134513495>[32]
Symbolic@0x18f2ee0 insn@0x08048356[10]: writeRegister(eip, 0x08048357<134513495>[32])
Symbolic@0x18f2ee0 insn@0x08048356[10]: undefined_(32) = v19474[32]
Symbolic@0x18f2ee0 insn@0x08048356[10]: readRegister(esi, v19474[32]) = v19311[32]
Symbolic@0x18f2ee0 insn@0x08048356[10]: undefined_(32) = v19476[32]
Symbolic@0x18f2ee0 insn@0x08048356[10]: readRegister(esp, v19476[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe8<4294967272,-24>[32])
Symbolic@0x18f2ee0 insn@0x08048356[10]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048356[10]: add((add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe8<4294967272,-24>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe4<4294967268,-28>[32])
Symbolic@0x18f2ee0 insn@0x08048356[10]: writeRegister(esp, (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x08048356[10]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048356[10]: writeMemory(ss, (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe4<4294967268,-28>[32]), v19311[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048356[10]: finishInstruction(push   esi)
registers:
  ecx          = (add[32] esp_0[32] 0x00000004[32])
  esp          read-before-write = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe4<4294967268,-28>[32])
  ebp          write-only = 0x00000000[32]
  esi          = v19311[32]
  eip          write-only = 0x08048357<134513495>[32]
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))))
  af           write-only = v19365[1]<unspec>
  zf           write-only = (zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe7<4294967271,-25>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] v19311[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe6<4294967270,-26>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] v19311[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe5<4294967269,-27>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] v19311[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe4<4294967268,-28>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] v19311[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffeb<4294967275,-21>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] esp_0[32] 0x00000004[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffea<4294967274,-22>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] esp_0[32] 0x00000004[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe9<4294967273,-23>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] esp_0[32] 0x00000004[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe8<4294967272,-24>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x00000004[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffef<4294967279,-17>[32]) write-only value=0x08[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffee<4294967278,-18>[32]) write-only value=0x04[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffed<4294967277,-19>[32]) write-only value=0x84<-124>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffec<4294967276,-20>[32]) write-only value=0xb0<-80>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff3<4294967283,-13>[32]) write-only value=0x08[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff2<4294967282,-14>[32]) write-only value=0x04[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff1<4294967281,-15>[32]) write-only value=0x85<-123>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32]) write-only value=0x20[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19311[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19311[32])

0x08048357: push   0x08048410<main>
Symbolic@0x18f2ee0: startInstruction(0x08048357: push   0x08048410<main>)
Symbolic@0x18f2ee0 insn@0x08048357[11]: number_(32, 134513495) = 0x08048357<134513495>[32]
Symbolic@0x18f2ee0 insn@0x08048357[11]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x08048357[11]: add(0x08048357<134513495>[32], 0x00000005[32]) = 0x0804835c<134513500>[32]
Symbolic@0x18f2ee0 insn@0x08048357[11]: writeRegister(eip, 0x0804835c<134513500>[32])
Symbolic@0x18f2ee0 insn@0x08048357[11]: number_(32, 134513680) = 0x08048410<134513680>[32]
Symbolic@0x18f2ee0 insn@0x08048357[11]: undefined_(32) = v19492[32]
Symbolic@0x18f2ee0 insn@0x08048357[11]: readRegister(esp, v19492[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe4<4294967268,-28>[32])
Symbolic@0x18f2ee0 insn@0x08048357[11]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048357[11]: add((add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe4<4294967268,-28>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe0<4294967264,-32>[32])
Symbolic@0x18f2ee0 insn@0x08048357[11]: writeRegister(esp, (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe0<4294967264,-32>[32]))
Symbolic@0x18f2ee0 insn@0x08048357[11]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048357[11]: writeMemory(ss, (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe0<4294967264,-32>[32]), 0x08048410<134513680>[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048357[11]: finishInstruction(push   0x08048410<main>)
registers:
  ecx          = (add[32] esp_0[32] 0x00000004[32])
  esp          read-before-write = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe0<4294967264,-32>[32])
  ebp          write-only = 0x00000000[32]
  esi          = v19311[32]
  eip          write-only = 0x0804835c<134513500>[32]
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))))
  af           write-only = v19365[1]<unspec>
  zf           write-only = (zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe3<4294967267,-29>[32]) write-only value=0x08[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe2<4294967266,-30>[32]) write-only value=0x04[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe1<4294967265,-31>[32]) write-only value=0x84<-124>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe0<4294967264,-32>[32]) write-only value=0x10[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe7<4294967271,-25>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] v19311[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe6<4294967270,-26>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] v19311[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe5<4294967269,-27>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] v19311[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe4<4294967268,-28>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] v19311[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffeb<4294967275,-21>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] esp_0[32] 0x00000004[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffea<4294967274,-22>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] esp_0[32] 0x00000004[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe9<4294967273,-23>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] esp_0[32] 0x00000004[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe8<4294967272,-24>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x00000004[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffef<4294967279,-17>[32]) write-only value=0x08[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffee<4294967278,-18>[32]) write-only value=0x04[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffed<4294967277,-19>[32]) write-only value=0x84<-124>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffec<4294967276,-20>[32]) write-only value=0xb0<-80>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff3<4294967283,-13>[32]) write-only value=0x08[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff2<4294967282,-14>[32]) write-only value=0x04[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff1<4294967281,-15>[32]) write-only value=0x85<-123>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32]) write-only value=0x20[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19311[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19311[32])

0x0804835c: call   0x08048310<__libc_start_main@plt>
Symbolic@0x18f2ee0: startInstruction(0x0804835c: call   0x08048310<__libc_start_main@plt>)
Symbolic@0x18f2ee0 insn@0x0804835c[12]: number_(32, 134513500) = 0x0804835c<134513500>[32]
Symbolic@0x18f2ee0 insn@0x0804835c[12]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x0804835c[12]: add(0x0804835c<134513500>[32], 0x00000005[32]) = 0x08048361<134513505>[32]
Symbolic@0x18f2ee0 insn@0x0804835c[12]: writeRegister(eip, 0x08048361<134513505>[32])
Symbolic@0x18f2ee0 insn@0x0804835c[12]: number_(32, 134513424) = 0x08048310<134513424>[32]
Symbolic@0x18f2ee0 insn@0x0804835c[12]: unsignedExtend(0x08048310<134513424>[32], 32) = 0x08048310<134513424>[32]
Symbolic@0x18f2ee0 insn@0x0804835c[12]: undefined_(32) = v19509[32]
Symbolic@0x18f2ee0 insn@0x0804835c[12]: readRegister(esp, v19509[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe0<4294967264,-32>[32])
Symbolic@0x18f2ee0 insn@0x0804835c[12]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x0804835c[12]: add((add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe0<4294967264,-32>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffdc<4294967260,-36>[32])
Symbolic@0x18f2ee0 insn@0x0804835c[12]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x0804835c[12]: undefined_(32) = v19512[32]
Symbolic@0x18f2ee0 insn@0x0804835c[12]: readRegister(eip, v19512[32]) = 0x08048361<134513505>[32]
Symbolic@0x18f2ee0 insn@0x0804835c[12]: writeMemory(ss, (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffdc<4294967260,-36>[32]), 0x08048361<134513505>[32], true[1])
Symbolic@0x18f2ee0 insn@0x0804835c[12]: writeRegister(esp, (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffdc<4294967260,-36>[32]))
Symbolic@0x18f2ee0 insn@0x0804835c[12]: filterCallTarget(0x08048310<134513424>[32]) = 0x08048310<134513424>[32]
Symbolic@0x18f2ee0 insn@0x0804835c[12]: writeRegister(eip, 0x08048310<134513424>[32])
Symbolic@0x18f2ee0 insn@0x0804835c[12]: finishInstruction(call   0x08048310<__libc_start_main@plt>)
registers:
  ecx          = (add[32] esp_0[32] 0x00000004[32])
  esp          read-before-write = (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffdc<4294967260,-36>[32])
  ebp          write-only = 0x00000000[32]
  esi          = v19311[32]
  eip          = 0x08048310<134513424>[32]
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))))
  af           write-only = v19365[1]<unspec>
  zf           write-only = (zerop[1] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]))
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffdf<4294967263,-33>[32]) write-only value=0x08[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffde<4294967262,-34>[32]) write-only value=0x04[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffdd<4294967261,-35>[32]) write-only value=0x83<-125>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffdc<4294967260,-36>[32]) write-only value=0x61[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe3<4294967267,-29>[32]) write-only value=0x08[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe2<4294967266,-30>[32]) write-only value=0x04[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe1<4294967265,-31>[32]) write-only value=0x84<-124>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe0<4294967264,-32>[32]) write-only value=0x10[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe7<4294967271,-25>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] v19311[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe6<4294967270,-26>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] v19311[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe5<4294967269,-27>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] v19311[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe4<4294967268,-28>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] v19311[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffeb<4294967275,-21>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] esp_0[32] 0x00000004[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffea<4294967274,-22>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] esp_0[32] 0x00000004[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe9<4294967273,-23>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] esp_0[32] 0x00000004[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffe8<4294967272,-24>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x00000004[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffef<4294967279,-17>[32]) write-only value=0x08[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffee<4294967278,-18>[32]) write-only value=0x04[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffed<4294967277,-19>[32]) write-only value=0x84<-124>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffec<4294967276,-20>[32]) write-only value=0xb0<-80>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff3<4294967283,-13>[32]) write-only value=0x08[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff2<4294967282,-14>[32]) write-only value=0x04[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff1<4294967281,-15>[32]) write-only value=0x85<-123>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff0<4294967280,-16>[32]) write-only value=0x20[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edx_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0x00000004[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v19311[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v19311[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v19311[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048361: hlt    
Symbolic@0x18f2ee0: startInstruction(0x08048361: hlt)
Symbolic@0x18f2ee0 insn@0x08048361[0]: number_(32, 134513505) = 0x08048361<134513505>[32]
Symbolic@0x18f2ee0 insn@0x08048361[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048361[0]: add(0x08048361<134513505>[32], 0x00000001[32]) = 0x08048362<134513506>[32]
Symbolic@0x18f2ee0 insn@0x08048361[0]: writeRegister(eip, 0x08048362<134513506>[32])
Symbolic@0x18f2ee0 insn@0x08048361[0]: hlt()
Symbolic@0x18f2ee0 insn@0x08048361[0]: number_(32, 134513505) = 0x08048361<134513505>[32]
Symbolic@0x18f2ee0 insn@0x08048361[0]: writeRegister(eip, 0x08048361<134513505>[32])
Symbolic@0x18f2ee0 insn@0x08048361[0]: finishInstruction(hlt)
registers:
  eip          write-only = 0x08048361<134513505>[32]
  fpstatus_top = 0x0[3]
memory:
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048364: push   ebp
Symbolic@0x18f2ee0: startInstruction(0x08048364: push   ebp)
Symbolic@0x18f2ee0 insn@0x08048364[0]: number_(32, 134513508) = 0x08048364<134513508>[32]
Symbolic@0x18f2ee0 insn@0x08048364[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048364[0]: add(0x08048364<134513508>[32], 0x00000001[32]) = 0x08048365<134513509>[32]
Symbolic@0x18f2ee0 insn@0x08048364[0]: writeRegister(eip, 0x08048365<134513509>[32])
Symbolic@0x18f2ee0 insn@0x08048364[0]: undefined_(32) = v20499[32]
Symbolic@0x18f2ee0 insn@0x08048364[0]: readRegister(ebp, v20499[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x08048364[0]: undefined_(32) = v20500[32]
Symbolic@0x18f2ee0 insn@0x08048364[0]: readRegister(esp, v20500[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x08048364[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048364[0]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048364[0]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048364[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048364[0]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), ebp_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048364[0]: finishInstruction(push   ebp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048365<134513509>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048365: mov    ebp, esp
Symbolic@0x18f2ee0: startInstruction(0x08048365: mov    ebp, esp)
Symbolic@0x18f2ee0 insn@0x08048365[1]: number_(32, 134513509) = 0x08048365<134513509>[32]
Symbolic@0x18f2ee0 insn@0x08048365[1]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x08048365[1]: add(0x08048365<134513509>[32], 0x00000002[32]) = 0x08048367<134513511>[32]
Symbolic@0x18f2ee0 insn@0x08048365[1]: writeRegister(eip, 0x08048367<134513511>[32])
Symbolic@0x18f2ee0 insn@0x08048365[1]: undefined_(32) = v20515[32]
Symbolic@0x18f2ee0 insn@0x08048365[1]: readRegister(esp, v20515[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048365[1]: writeRegister(ebp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048365[1]: finishInstruction(mov    ebp, esp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048367<134513511>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048367: push   ebx
Symbolic@0x18f2ee0: startInstruction(0x08048367: push   ebx)
Symbolic@0x18f2ee0 insn@0x08048367[2]: number_(32, 134513511) = 0x08048367<134513511>[32]
Symbolic@0x18f2ee0 insn@0x08048367[2]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048367[2]: add(0x08048367<134513511>[32], 0x00000001[32]) = 0x08048368<134513512>[32]
Symbolic@0x18f2ee0 insn@0x08048367[2]: writeRegister(eip, 0x08048368<134513512>[32])
Symbolic@0x18f2ee0 insn@0x08048367[2]: undefined_(32) = v20522[32]
Symbolic@0x18f2ee0 insn@0x08048367[2]: readRegister(ebx, v20522[32]) = ebx_0[32]
Symbolic@0x18f2ee0 insn@0x08048367[2]: undefined_(32) = v20523[32]
Symbolic@0x18f2ee0 insn@0x08048367[2]: readRegister(esp, v20523[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048367[2]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048367[2]: add((add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])
Symbolic@0x18f2ee0 insn@0x08048367[2]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]))
Symbolic@0x18f2ee0 insn@0x08048367[2]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048367[2]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]), ebx_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048367[2]: finishInstruction(push   ebx)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048368<134513512>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048368: push   ecx
Symbolic@0x18f2ee0: startInstruction(0x08048368: push   ecx)
Symbolic@0x18f2ee0 insn@0x08048368[3]: number_(32, 134513512) = 0x08048368<134513512>[32]
Symbolic@0x18f2ee0 insn@0x08048368[3]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048368[3]: add(0x08048368<134513512>[32], 0x00000001[32]) = 0x08048369<134513513>[32]
Symbolic@0x18f2ee0 insn@0x08048368[3]: writeRegister(eip, 0x08048369<134513513>[32])
Symbolic@0x18f2ee0 insn@0x08048368[3]: undefined_(32) = v20539[32]
Symbolic@0x18f2ee0 insn@0x08048368[3]: readRegister(ecx, v20539[32]) = ecx_0[32]
Symbolic@0x18f2ee0 insn@0x08048368[3]: undefined_(32) = v20540[32]
Symbolic@0x18f2ee0 insn@0x08048368[3]: readRegister(esp, v20540[32]) = (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])
Symbolic@0x18f2ee0 insn@0x08048368[3]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048368[3]: add((add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x08048368[3]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048368[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048368[3]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), ecx_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048368[3]: finishInstruction(push   ecx)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048369<134513513>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ecx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ecx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ecx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ecx_0[32])
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048369: call   0x0804836e<<Insn>>
Symbolic@0x18f2ee0: startInstruction(0x08048369: call   0x0804836e<<Insn>>)
Symbolic@0x18f2ee0 insn@0x08048369[4]: number_(32, 134513513) = 0x08048369<134513513>[32]
Symbolic@0x18f2ee0 insn@0x08048369[4]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x08048369[4]: add(0x08048369<134513513>[32], 0x00000005[32]) = 0x0804836e<134513518>[32]
Symbolic@0x18f2ee0 insn@0x08048369[4]: writeRegister(eip, 0x0804836e<134513518>[32])
Symbolic@0x18f2ee0 insn@0x08048369[4]: number_(32, 134513518) = 0x0804836e<134513518>[32]
Symbolic@0x18f2ee0 insn@0x08048369[4]: unsignedExtend(0x0804836e<134513518>[32], 32) = 0x0804836e<134513518>[32]
Symbolic@0x18f2ee0 insn@0x08048369[4]: undefined_(32) = v20557[32]
Symbolic@0x18f2ee0 insn@0x08048369[4]: readRegister(esp, v20557[32]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x08048369[4]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048369[4]: add((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])
Symbolic@0x18f2ee0 insn@0x08048369[4]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048369[4]: undefined_(32) = v20560[32]
Symbolic@0x18f2ee0 insn@0x08048369[4]: readRegister(eip, v20560[32]) = 0x0804836e<134513518>[32]
Symbolic@0x18f2ee0 insn@0x08048369[4]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]), 0x0804836e<134513518>[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048369[4]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]))
Symbolic@0x18f2ee0 insn@0x08048369[4]: filterCallTarget(0x0804836e<134513518>[32]) = 0x0804836e<134513518>[32]
Symbolic@0x18f2ee0 insn@0x08048369[4]: writeRegister(eip, 0x0804836e<134513518>[32])
Symbolic@0x18f2ee0 insn@0x08048369[4]: finishInstruction(call   0x0804836e<<Insn>>)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = 0x0804836e<134513518>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32]) write-only value=0x83<-125>[8]
  addr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]) write-only value=0x6e[8]
  addr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ecx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ecx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ecx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ecx_0[32])
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x0804836e: pop    ebx
Symbolic@0x18f2ee0: startInstruction(0x0804836e: pop    ebx)
Symbolic@0x18f2ee0 insn@0x0804836e[0]: number_(32, 134513518) = 0x0804836e<134513518>[32]
Symbolic@0x18f2ee0 insn@0x0804836e[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x0804836e[0]: add(0x0804836e<134513518>[32], 0x00000001[32]) = 0x0804836f<134513519>[32]
Symbolic@0x18f2ee0 insn@0x0804836e[0]: writeRegister(eip, 0x0804836f<134513519>[32])
Symbolic@0x18f2ee0 insn@0x0804836e[0]: undefined_(32) = v21058[32]
Symbolic@0x18f2ee0 insn@0x0804836e[0]: readRegister(esp, v21058[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x0804836e[0]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x0804836e[0]: add(esp_0[32], 0x00000004[32]) = (add[32] esp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x0804836e[0]: writeRegister(esp, (add[32] esp_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x0804836e[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x0804836e[0]: undefined_(32) = v21061[32]
Symbolic@0x18f2ee0 insn@0x0804836e[0]: readMemory(ss, esp_0[32], v21061[32], true[1]) = v21061[32]
Symbolic@0x18f2ee0 insn@0x0804836e[0]: writeRegister(ebx, v21061[32])
Symbolic@0x18f2ee0 insn@0x0804836e[0]: finishInstruction(pop    ebx)
registers:
  ebx          write-only = v21061[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x0804836f<134513519>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v21061[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v21061[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v21061[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v21061[32])

0x0804836f: add    ebx, 0x0000135a<4954>
Symbolic@0x18f2ee0: startInstruction(0x0804836f: add    ebx, 0x0000135a<4954>)
Symbolic@0x18f2ee0 insn@0x0804836f[1]: number_(32, 134513519) = 0x0804836f<134513519>[32]
Symbolic@0x18f2ee0 insn@0x0804836f[1]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x0804836f[1]: add(0x0804836f<134513519>[32], 0x00000006[32]) = 0x08048375<134513525>[32]
Symbolic@0x18f2ee0 insn@0x0804836f[1]: writeRegister(eip, 0x08048375<134513525>[32])
Symbolic@0x18f2ee0 insn@0x0804836f[1]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x0804836f[1]: number_(32, 4954) = 0x0000135a<4954>[32]
Symbolic@0x18f2ee0 insn@0x0804836f[1]: undefined_(32) = v21081[32]
Symbolic@0x18f2ee0 insn@0x0804836f[1]: readRegister(ebx, v21081[32]) = v21061[32]
Symbolic@0x18f2ee0 insn@0x0804836f[1]: addWithCarries(v21061[32], 0x0000135a<4954>[32], false[1]) = (add[32] v21061[32] 0x0000135a<4954>[32])
Symbolic@0x18f2ee0 insn@0x0804836f[1]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: extract((add[32] v21061[32] 0x0000135a<4954>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32]))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v21061[32] 0x0000135a<4954>[32]))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v21061[32] 0x0000135a<4954>[32]))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] v21061[32] 0x0000135a<4954>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v21061[32] 0x0000135a<4954>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v21061[32] 0x0000135a<4954>[32])))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v21061[32] 0x0000135a<4954>[32]))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v21061[32] 0x0000135a<4954>[32]))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] v21061[32] 0x0000135a<4954>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v21061[32] 0x0000135a<4954>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v21061[32] 0x0000135a<4954>[32])))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v21061[32] 0x0000135a<4954>[32]))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v21061[32] 0x0000135a<4954>[32]))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] v21061[32] 0x0000135a<4954>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v21061[32] 0x0000135a<4954>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v21061[32] 0x0000135a<4954>[32])))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32]))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v21061[32] 0x0000135a<4954>[32]))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] v21061[32] 0x0000135a<4954>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32])))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v21061[32] 0x0000135a<4954>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v21061[32] 0x0000135a<4954>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v21061[32] 0x0000135a<4954>[32])))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v21061[32] 0x0000135a<4954>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32])))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v21061[32] 0x0000135a<4954>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32])))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32]))))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32])))))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: extract((add[32] v21061[32] 0x0000135a<4954>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v21061[32] 0x0000135a<4954>[32]))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v21061[32] 0x0000135a<4954>[32])))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: equalToZero((add[32] v21061[32] 0x0000135a<4954>[32])) = (zerop[1] (add[32] v21061[32] 0x0000135a<4954>[32]))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: writeRegister(zf, (zerop[1] (add[32] v21061[32] 0x0000135a<4954>[32])))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: writeRegister(af, (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33])))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: writeRegister(cf, (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33])))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33])))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]))))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: writeRegister(ebx, (add[32] v21061[32] 0x0000135a<4954>[32]))
Symbolic@0x18f2ee0 insn@0x0804836f[1]: finishInstruction(add    ebx, 0x0000135a<4954>)
registers:
  ebx          = (add[32] v21061[32] 0x0000135a<4954>[32])
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x08048375<134513525>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]))
  zf           write-only = (zerop[1] (add[32] v21061[32] 0x0000135a<4954>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v21061[32] 0x0000135a<4954>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v21061[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v21061[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v21061[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v21061[32])

0x08048375: mov    edx, dword ds:[ebx + 0xfffffffc<-4>]
Symbolic@0x18f2ee0: startInstruction(0x08048375: mov    edx, dword ds:[ebx + 0xfffffffc<-4>])
Symbolic@0x18f2ee0 insn@0x08048375[2]: number_(32, 134513525) = 0x08048375<134513525>[32]
Symbolic@0x18f2ee0 insn@0x08048375[2]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x08048375[2]: add(0x08048375<134513525>[32], 0x00000006[32]) = 0x0804837b<134513531>[32]
Symbolic@0x18f2ee0 insn@0x08048375[2]: writeRegister(eip, 0x0804837b<134513531>[32])
Symbolic@0x18f2ee0 insn@0x08048375[2]: undefined_(32) = v21122[32]
Symbolic@0x18f2ee0 insn@0x08048375[2]: readRegister(ebx, v21122[32]) = (add[32] v21061[32] 0x0000135a<4954>[32])
Symbolic@0x18f2ee0 insn@0x08048375[2]: number_(32, 4294967292) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048375[2]: add((add[32] v21061[32] 0x0000135a<4954>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] v21061[32] 0x00001356<4950>[32])
Symbolic@0x18f2ee0 insn@0x08048375[2]: undefined_(32) = v21125[32]
Symbolic@0x18f2ee0 insn@0x08048375[2]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048375[2]: readMemory(ds, (add[32] v21061[32] 0x00001356<4950>[32]), v21125[32], true[1]) = v21125[32]
Symbolic@0x18f2ee0 insn@0x08048375[2]: writeRegister(edx, v21125[32])
Symbolic@0x18f2ee0 insn@0x08048375[2]: finishInstruction(mov    edx, dword ds:[ebx + 0xfffffffc<-4>])
registers:
  edx          write-only = v21125[32]
  ebx          = (add[32] v21061[32] 0x0000135a<4954>[32])
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x0804837b<134513531>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v21061[32] 0x0000135a<4954>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v21061[32] 0x0000135a<4954>[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]))
  zf           write-only = (zerop[1] (add[32] v21061[32] 0x0000135a<4954>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v21061[32] 0x0000135a<4954>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33]) (uextend[33] 0x00000021[32] v21061[32]) 0x00000135a<4954>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] v21061[32] 0x00001359<4953>[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v21125[32])
  addr=(add[32] v21061[32] 0x00001358<4952>[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v21125[32])
  addr=(add[32] v21061[32] 0x00001357<4951>[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v21125[32])
  addr=(add[32] v21061[32] 0x00001356<4950>[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v21125[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v21061[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v21061[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v21061[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v21061[32])

0x0804837b: test   edx, edx
Symbolic@0x18f2ee0: startInstruction(0x0804837b: test   edx, edx)
Symbolic@0x18f2ee0 insn@0x0804837b[3]: number_(32, 134513531) = 0x0804837b<134513531>[32]
Symbolic@0x18f2ee0 insn@0x0804837b[3]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x0804837b[3]: add(0x0804837b<134513531>[32], 0x00000002[32]) = 0x0804837d<134513533>[32]
Symbolic@0x18f2ee0 insn@0x0804837b[3]: writeRegister(eip, 0x0804837d<134513533>[32])
Symbolic@0x18f2ee0 insn@0x0804837b[3]: undefined_(32) = v21145[32]
Symbolic@0x18f2ee0 insn@0x0804837b[3]: readRegister(edx, v21145[32]) = v21125[32]
Symbolic@0x18f2ee0 insn@0x0804837b[3]: undefined_(32) = v21147[32]
Symbolic@0x18f2ee0 insn@0x0804837b[3]: readRegister(edx, v21147[32]) = v21125[32]
Symbolic@0x18f2ee0 insn@0x0804837b[3]: and_(v21125[32], v21125[32]) = v21125[32]
Symbolic@0x18f2ee0 insn@0x0804837b[3]: extract(v21125[32], 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] v21125[32])
Symbolic@0x18f2ee0 insn@0x0804837b[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] v21125[32]), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] v21125[32])
Symbolic@0x18f2ee0 insn@0x0804837b[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] v21125[32]), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] v21125[32])
Symbolic@0x18f2ee0 insn@0x0804837b[3]: xor_((extract[1] 0x00000000[32] 0x00000001[32] v21125[32]), (extract[1] 0x00000001[32] 0x00000002[32] v21125[32])) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v21125[32]) (extract[1] 0x00000001[32] 0x00000002[32] v21125[32]))
Symbolic@0x18f2ee0 insn@0x0804837b[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] v21125[32]), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] v21125[32])
Symbolic@0x18f2ee0 insn@0x0804837b[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] v21125[32]), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] v21125[32])
Symbolic@0x18f2ee0 insn@0x0804837b[3]: xor_((extract[1] 0x00000002[32] 0x00000003[32] v21125[32]), (extract[1] 0x00000003[32] 0x00000004[32] v21125[32])) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] v21125[32]) (extract[1] 0x00000003[32] 0x00000004[32] v21125[32]))
Symbolic@0x18f2ee0 insn@0x0804837b[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] v21125[32]), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] v21125[32])
Symbolic@0x18f2ee0 insn@0x0804837b[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] v21125[32]), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] v21125[32])
Symbolic@0x18f2ee0 insn@0x0804837b[3]: xor_((extract[1] 0x00000004[32] 0x00000005[32] v21125[32]), (extract[1] 0x00000005[32] 0x00000006[32] v21125[32])) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v21125[32]) (extract[1] 0x00000005[32] 0x00000006[32] v21125[32]))
Symbolic@0x18f2ee0 insn@0x0804837b[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] v21125[32]), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] v21125[32])
Symbolic@0x18f2ee0 insn@0x0804837b[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] v21125[32]), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] v21125[32])
Symbolic@0x18f2ee0 insn@0x0804837b[3]: xor_((extract[1] 0x00000006[32] 0x00000007[32] v21125[32]), (extract[1] 0x00000007[32] 0x00000008[32] v21125[32])) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] v21125[32]) (extract[1] 0x00000007[32] 0x00000008[32] v21125[32]))
Symbolic@0x18f2ee0 insn@0x0804837b[3]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v21125[32]) (extract[1] 0x00000001[32] 0x00000002[32] v21125[32])), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] v21125[32]) (extract[1] 0x00000003[32] 0x00000004[32] v21125[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v21125[32]) (extract[1] 0x00000001[32] 0x00000002[32] v21125[32]) (extract[1] 0x00000002[32] 0x00000003[32] v21125[32]) (extract[1] 0x00000003[32] 0x00000004[32] v21125[32]))
Symbolic@0x18f2ee0 insn@0x0804837b[3]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v21125[32]) (extract[1] 0x00000005[32] 0x00000006[32] v21125[32])), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] v21125[32]) (extract[1] 0x00000007[32] 0x00000008[32] v21125[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v21125[32]) (extract[1] 0x00000005[32] 0x00000006[32] v21125[32]) (extract[1] 0x00000006[32] 0x00000007[32] v21125[32]) (extract[1] 0x00000007[32] 0x00000008[32] v21125[32]))
Symbolic@0x18f2ee0 insn@0x0804837b[3]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v21125[32]) (extract[1] 0x00000001[32] 0x00000002[32] v21125[32]) (extract[1] 0x00000002[32] 0x00000003[32] v21125[32]) (extract[1] 0x00000003[32] 0x00000004[32] v21125[32])), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v21125[32]) (extract[1] 0x00000005[32] 0x00000006[32] v21125[32]) (extract[1] 0x00000006[32] 0x00000007[32] v21125[32]) (extract[1] 0x00000007[32] 0x00000008[32] v21125[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v21125[32]) (extract[1] 0x00000001[32] 0x00000002[32] v21125[32]) (extract[1] 0x00000002[32] 0x00000003[32] v21125[32]) (extract[1] 0x00000003[32] 0x00000004[32] v21125[32]) (extract[1] 0x00000004[32] 0x00000005[32] v21125[32]) (extract[1] 0x00000005[32] 0x00000006[32] v21125[32]) (extract[1] 0x00000006[32] 0x00000007[32] v21125[32]) (extract[1] 0x00000007[32] 0x00000008[32] v21125[32]))
Symbolic@0x18f2ee0 insn@0x0804837b[3]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v21125[32]) (extract[1] 0x00000001[32] 0x00000002[32] v21125[32]) (extract[1] 0x00000002[32] 0x00000003[32] v21125[32]) (extract[1] 0x00000003[32] 0x00000004[32] v21125[32]) (extract[1] 0x00000004[32] 0x00000005[32] v21125[32]) (extract[1] 0x00000005[32] 0x00000006[32] v21125[32]) (extract[1] 0x00000006[32] 0x00000007[32] v21125[32]) (extract[1] 0x00000007[32] 0x00000008[32] v21125[32]))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v21125[32]) (extract[1] 0x00000001[32] 0x00000002[32] v21125[32]) (extract[1] 0x00000002[32] 0x00000003[32] v21125[32]) (extract[1] 0x00000003[32] 0x00000004[32] v21125[32]) (extract[1] 0x00000004[32] 0x00000005[32] v21125[32]) (extract[1] 0x00000005[32] 0x00000006[32] v21125[32]) (extract[1] 0x00000006[32] 0x00000007[32] v21125[32]) (extract[1] 0x00000007[32] 0x00000008[32] v21125[32])))
Symbolic@0x18f2ee0 insn@0x0804837b[3]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v21125[32]) (extract[1] 0x00000001[32] 0x00000002[32] v21125[32]) (extract[1] 0x00000002[32] 0x00000003[32] v21125[32]) (extract[1] 0x00000003[32] 0x00000004[32] v21125[32]) (extract[1] 0x00000004[32] 0x00000005[32] v21125[32]) (extract[1] 0x00000005[32] 0x00000006[32] v21125[32]) (extract[1] 0x00000006[32] 0x00000007[32] v21125[32]) (extract[1] 0x00000007[32] 0x00000008[32] v21125[32]))))
Symbolic@0x18f2ee0 insn@0x0804837b[3]: extract(v21125[32], 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] v21125[32])
Symbolic@0x18f2ee0 insn@0x0804837b[3]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] v21125[32]))
Symbolic@0x18f2ee0 insn@0x0804837b[3]: equalToZero(v21125[32]) = (zerop[1] v21125[32])
Symbolic@0x18f2ee0 insn@0x0804837b[3]: writeRegister(zf, (zerop[1] v21125[32]))
Symbolic@0x18f2ee0 insn@0x0804837b[3]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x0804837b[3]: writeRegister(of, false[1])
Symbolic@0x18f2ee0 insn@0x0804837b[3]: unspecified_(1) = v21173[1]<unspec>
Symbolic@0x18f2ee0 insn@0x0804837b[3]: writeRegister(af, v21173[1]<unspec>)
Symbolic@0x18f2ee0 insn@0x0804837b[3]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x0804837b[3]: writeRegister(cf, false[1])
Symbolic@0x18f2ee0 insn@0x0804837b[3]: finishInstruction(test   edx, edx)
registers:
  edx          = v21125[32]
  ebx          = (add[32] v21061[32] 0x0000135a<4954>[32])
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x0804837d<134513533>[32]
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v21125[32]) (extract[1] 0x00000001[32] 0x00000002[32] v21125[32]) (extract[1] 0x00000002[32] 0x00000003[32] v21125[32]) (extract[1] 0x00000003[32] 0x00000004[32] v21125[32]) (extract[1] 0x00000004[32] 0x00000005[32] v21125[32]) (extract[1] 0x00000005[32] 0x00000006[32] v21125[32]) (extract[1] 0x00000006[32] 0x00000007[32] v21125[32]) (extract[1] 0x00000007[32] 0x00000008[32] v21125[32])))
  af           write-only = v21173[1]<unspec>
  zf           write-only = (zerop[1] v21125[32])
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] v21125[32])
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] v21061[32] 0x00001359<4953>[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v21125[32])
  addr=(add[32] v21061[32] 0x00001358<4952>[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v21125[32])
  addr=(add[32] v21061[32] 0x00001357<4951>[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v21125[32])
  addr=(add[32] v21061[32] 0x00001356<4950>[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v21125[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v21061[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v21061[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v21061[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v21061[32])

0x0804837d: je     0x08048384<<Insn>>
Symbolic@0x18f2ee0: startInstruction(0x0804837d: je     0x08048384<<Insn>>)
Symbolic@0x18f2ee0 insn@0x0804837d[4]: number_(32, 134513533) = 0x0804837d<134513533>[32]
Symbolic@0x18f2ee0 insn@0x0804837d[4]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x0804837d[4]: add(0x0804837d<134513533>[32], 0x00000002[32]) = 0x0804837f<134513535>[32]
Symbolic@0x18f2ee0 insn@0x0804837d[4]: writeRegister(eip, 0x0804837f<134513535>[32])
Symbolic@0x18f2ee0 insn@0x0804837d[4]: undefined_(1) = v21180[1]
Symbolic@0x18f2ee0 insn@0x0804837d[4]: readRegister(zf, v21180[1]) = (zerop[1] v21125[32])
Symbolic@0x18f2ee0 insn@0x0804837d[4]: undefined_(32) = v21182[32]
Symbolic@0x18f2ee0 insn@0x0804837d[4]: readRegister(eip, v21182[32]) = 0x0804837f<134513535>[32]
Symbolic@0x18f2ee0 insn@0x0804837d[4]: number_(32, 134513540) = 0x08048384<134513540>[32]
Symbolic@0x18f2ee0 insn@0x0804837d[4]: unsignedExtend(0x08048384<134513540>[32], 32) = 0x08048384<134513540>[32]
Symbolic@0x18f2ee0 insn@0x0804837d[4]: ite((zerop[1] v21125[32]), 0x08048384<134513540>[32], 0x0804837f<134513535>[32]) = (ite[32] (zerop[1] v21125[32]) 0x08048384<134513540>[32] 0x0804837f<134513535>[32])
Symbolic@0x18f2ee0 insn@0x0804837d[4]: writeRegister(eip, (ite[32] (zerop[1] v21125[32]) 0x08048384<134513540>[32] 0x0804837f<134513535>[32]))
Symbolic@0x18f2ee0 insn@0x0804837d[4]: finishInstruction(je     0x08048384<<Insn>>)
registers:
  edx          = v21125[32]
  ebx          = (add[32] v21061[32] 0x0000135a<4954>[32])
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          = (ite[32] (zerop[1] v21125[32]) 0x08048384<134513540>[32] 0x0804837f<134513535>[32])
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v21125[32]) (extract[1] 0x00000001[32] 0x00000002[32] v21125[32]) (extract[1] 0x00000002[32] 0x00000003[32] v21125[32]) (extract[1] 0x00000003[32] 0x00000004[32] v21125[32]) (extract[1] 0x00000004[32] 0x00000005[32] v21125[32]) (extract[1] 0x00000005[32] 0x00000006[32] v21125[32]) (extract[1] 0x00000006[32] 0x00000007[32] v21125[32]) (extract[1] 0x00000007[32] 0x00000008[32] v21125[32])))
  af           write-only = v21173[1]<unspec>
  zf           = (zerop[1] v21125[32])
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] v21125[32])
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] v21061[32] 0x00001359<4953>[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v21125[32])
  addr=(add[32] v21061[32] 0x00001358<4952>[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v21125[32])
  addr=(add[32] v21061[32] 0x00001357<4951>[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v21125[32])
  addr=(add[32] v21061[32] 0x00001356<4950>[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v21125[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v21061[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v21061[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v21061[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v21061[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x0804837f: call   0x08048330<__gmon_start__@plt>
Symbolic@0x18f2ee0: startInstruction(0x0804837f: call   0x08048330<__gmon_start__@plt>)
Symbolic@0x18f2ee0 insn@0x0804837f[0]: number_(32, 134513535) = 0x0804837f<134513535>[32]
Symbolic@0x18f2ee0 insn@0x0804837f[0]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x0804837f[0]: add(0x0804837f<134513535>[32], 0x00000005[32]) = 0x08048384<134513540>[32]
Symbolic@0x18f2ee0 insn@0x0804837f[0]: writeRegister(eip, 0x08048384<134513540>[32])
Symbolic@0x18f2ee0 insn@0x0804837f[0]: number_(32, 134513456) = 0x08048330<134513456>[32]
Symbolic@0x18f2ee0 insn@0x0804837f[0]: unsignedExtend(0x08048330<134513456>[32], 32) = 0x08048330<134513456>[32]
Symbolic@0x18f2ee0 insn@0x0804837f[0]: undefined_(32) = v21676[32]
Symbolic@0x18f2ee0 insn@0x0804837f[0]: readRegister(esp, v21676[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x0804837f[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x0804837f[0]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x0804837f[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x0804837f[0]: undefined_(32) = v21678[32]
Symbolic@0x18f2ee0 insn@0x0804837f[0]: readRegister(eip, v21678[32]) = 0x08048384<134513540>[32]
Symbolic@0x18f2ee0 insn@0x0804837f[0]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0x08048384<134513540>[32], true[1])
Symbolic@0x18f2ee0 insn@0x0804837f[0]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x0804837f[0]: filterCallTarget(0x08048330<134513456>[32]) = 0x08048330<134513456>[32]
Symbolic@0x18f2ee0 insn@0x0804837f[0]: writeRegister(eip, 0x08048330<134513456>[32])
Symbolic@0x18f2ee0 insn@0x0804837f[0]: finishInstruction(call   0x08048330<__gmon_start__@plt>)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = 0x08048330<134513456>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=0x83<-125>[8]
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=0x84<-124>[8]
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048384: pop    eax
Symbolic@0x18f2ee0: startInstruction(0x08048384: pop    eax)
Symbolic@0x18f2ee0 insn@0x08048384[0]: number_(32, 134513540) = 0x08048384<134513540>[32]
Symbolic@0x18f2ee0 insn@0x08048384[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048384[0]: add(0x08048384<134513540>[32], 0x00000001[32]) = 0x08048385<134513541>[32]
Symbolic@0x18f2ee0 insn@0x08048384[0]: writeRegister(eip, 0x08048385<134513541>[32])
Symbolic@0x18f2ee0 insn@0x08048384[0]: undefined_(32) = v22176[32]
Symbolic@0x18f2ee0 insn@0x08048384[0]: readRegister(esp, v22176[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x08048384[0]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x08048384[0]: add(esp_0[32], 0x00000004[32]) = (add[32] esp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x08048384[0]: writeRegister(esp, (add[32] esp_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x08048384[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048384[0]: undefined_(32) = v22179[32]
Symbolic@0x18f2ee0 insn@0x08048384[0]: readMemory(ss, esp_0[32], v22179[32], true[1]) = v22179[32]
Symbolic@0x18f2ee0 insn@0x08048384[0]: writeRegister(eax, v22179[32])
Symbolic@0x18f2ee0 insn@0x08048384[0]: finishInstruction(pop    eax)
registers:
  eax          write-only = v22179[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x08048385<134513541>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v22179[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v22179[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v22179[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v22179[32])

0x08048385: pop    ebx
Symbolic@0x18f2ee0: startInstruction(0x08048385: pop    ebx)
Symbolic@0x18f2ee0 insn@0x08048385[1]: number_(32, 134513541) = 0x08048385<134513541>[32]
Symbolic@0x18f2ee0 insn@0x08048385[1]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048385[1]: add(0x08048385<134513541>[32], 0x00000001[32]) = 0x08048386<134513542>[32]
Symbolic@0x18f2ee0 insn@0x08048385[1]: writeRegister(eip, 0x08048386<134513542>[32])
Symbolic@0x18f2ee0 insn@0x08048385[1]: undefined_(32) = v22199[32]
Symbolic@0x18f2ee0 insn@0x08048385[1]: readRegister(esp, v22199[32]) = (add[32] esp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x08048385[1]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x08048385[1]: add((add[32] esp_0[32] 0x00000004[32]), 0x00000004[32]) = (add[32] esp_0[32] 0x00000008[32])
Symbolic@0x18f2ee0 insn@0x08048385[1]: writeRegister(esp, (add[32] esp_0[32] 0x00000008[32]))
Symbolic@0x18f2ee0 insn@0x08048385[1]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048385[1]: undefined_(32) = v22203[32]
Symbolic@0x18f2ee0 insn@0x08048385[1]: readMemory(ss, (add[32] esp_0[32] 0x00000004[32]), v22203[32], true[1]) = v22203[32]
Symbolic@0x18f2ee0 insn@0x08048385[1]: writeRegister(ebx, v22203[32])
Symbolic@0x18f2ee0 insn@0x08048385[1]: finishInstruction(pop    ebx)
registers:
  eax          write-only = v22179[32]
  ebx          write-only = v22203[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000008[32])
  eip          write-only = 0x08048386<134513542>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000007[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v22203[32])
  addr=(add[32] esp_0[32] 0x00000006[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v22203[32])
  addr=(add[32] esp_0[32] 0x00000005[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v22203[32])
  addr=(add[32] esp_0[32] 0x00000004[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v22203[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v22179[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v22179[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v22179[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v22179[32])

0x08048386: leave  
Symbolic@0x18f2ee0: startInstruction(0x08048386: leave)
Symbolic@0x18f2ee0 insn@0x08048386[2]: number_(32, 134513542) = 0x08048386<134513542>[32]
Symbolic@0x18f2ee0 insn@0x08048386[2]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048386[2]: add(0x08048386<134513542>[32], 0x00000001[32]) = 0x08048387<134513543>[32]
Symbolic@0x18f2ee0 insn@0x08048386[2]: writeRegister(eip, 0x08048387<134513543>[32])
Symbolic@0x18f2ee0 insn@0x08048386[2]: undefined_(32) = v22223[32]
Symbolic@0x18f2ee0 insn@0x08048386[2]: readRegister(ebp, v22223[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x08048386[2]: writeRegister(esp, ebp_0[32])
Symbolic@0x18f2ee0 insn@0x08048386[2]: undefined_(32) = v22225[32]
Symbolic@0x18f2ee0 insn@0x08048386[2]: readRegister(esp, v22225[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x08048386[2]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x08048386[2]: add(ebp_0[32], 0x00000004[32]) = (add[32] ebp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x08048386[2]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048386[2]: undefined_(32) = v22228[32]
Symbolic@0x18f2ee0 insn@0x08048386[2]: readMemory(ss, ebp_0[32], v22228[32], true[1]) = v22228[32]
Symbolic@0x18f2ee0 insn@0x08048386[2]: writeRegister(ebp, v22228[32])
Symbolic@0x18f2ee0 insn@0x08048386[2]: writeRegister(esp, (add[32] ebp_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x08048386[2]: finishInstruction(leave)
registers:
  eax          write-only = v22179[32]
  ebx          write-only = v22203[32]
  esp          read-before-write = (add[32] ebp_0[32] 0x00000004[32])
  ebp          read-before-write = v22228[32]
  eip          write-only = 0x08048387<134513543>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v22228[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v22228[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v22228[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v22228[32])
  addr=(add[32] esp_0[32] 0x00000007[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v22203[32])
  addr=(add[32] esp_0[32] 0x00000006[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v22203[32])
  addr=(add[32] esp_0[32] 0x00000005[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v22203[32])
  addr=(add[32] esp_0[32] 0x00000004[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v22203[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v22179[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v22179[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v22179[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v22179[32])

0x08048387: ret    
Symbolic@0x18f2ee0: startInstruction(0x08048387: ret)
Symbolic@0x18f2ee0 insn@0x08048387[3]: number_(32, 134513543) = 0x08048387<134513543>[32]
Symbolic@0x18f2ee0 insn@0x08048387[3]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048387[3]: add(0x08048387<134513543>[32], 0x00000001[32]) = 0x08048388<134513544>[32]
Symbolic@0x18f2ee0 insn@0x08048387[3]: writeRegister(eip, 0x08048388<134513544>[32])
Symbolic@0x18f2ee0 insn@0x08048387[3]: undefined_(32) = v22250[32]
Symbolic@0x18f2ee0 insn@0x08048387[3]: readRegister(esp, v22250[32]) = (add[32] ebp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x08048387[3]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x08048387[3]: add((add[32] ebp_0[32] 0x00000004[32]), 0x00000004[32]) = (add[32] ebp_0[32] 0x00000008[32])
Symbolic@0x18f2ee0 insn@0x08048387[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048387[3]: undefined_(32) = v22253[32]
Symbolic@0x18f2ee0 insn@0x08048387[3]: readMemory(ss, (add[32] ebp_0[32] 0x00000004[32]), v22253[32], true[1]) = v22253[32]
Symbolic@0x18f2ee0 insn@0x08048387[3]: filterReturnTarget(v22253[32]) = v22253[32]
Symbolic@0x18f2ee0 insn@0x08048387[3]: writeRegister(eip, v22253[32])
Symbolic@0x18f2ee0 insn@0x08048387[3]: writeRegister(esp, (add[32] ebp_0[32] 0x00000008[32]))
Symbolic@0x18f2ee0 insn@0x08048387[3]: finishInstruction(ret)
registers:
  eax          write-only = v22179[32]
  ebx          write-only = v22203[32]
  esp          read-before-write = (add[32] ebp_0[32] 0x00000008[32])
  ebp          read-before-write = v22228[32]
  eip          write-only = v22253[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000007[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v22253[32])
  addr=(add[32] ebp_0[32] 0x00000006[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v22253[32])
  addr=(add[32] ebp_0[32] 0x00000005[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v22253[32])
  addr=(add[32] ebp_0[32] 0x00000004[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v22253[32])
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v22228[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v22228[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v22228[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v22228[32])
  addr=(add[32] esp_0[32] 0x00000007[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v22203[32])
  addr=(add[32] esp_0[32] 0x00000006[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v22203[32])
  addr=(add[32] esp_0[32] 0x00000005[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v22203[32])
  addr=(add[32] esp_0[32] 0x00000004[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v22203[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v22179[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v22179[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v22179[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v22179[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048390: push   ebp
Symbolic@0x18f2ee0: startInstruction(0x08048390: push   ebp)
Symbolic@0x18f2ee0 insn@0x08048390[0]: number_(32, 134513552) = 0x08048390<134513552>[32]
Symbolic@0x18f2ee0 insn@0x08048390[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048390[0]: add(0x08048390<134513552>[32], 0x00000001[32]) = 0x08048391<134513553>[32]
Symbolic@0x18f2ee0 insn@0x08048390[0]: writeRegister(eip, 0x08048391<134513553>[32])
Symbolic@0x18f2ee0 insn@0x08048390[0]: undefined_(32) = v22759[32]
Symbolic@0x18f2ee0 insn@0x08048390[0]: readRegister(ebp, v22759[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x08048390[0]: undefined_(32) = v22760[32]
Symbolic@0x18f2ee0 insn@0x08048390[0]: readRegister(esp, v22760[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x08048390[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048390[0]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048390[0]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048390[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048390[0]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), ebp_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048390[0]: finishInstruction(push   ebp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048391<134513553>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048391: mov    ebp, esp
Symbolic@0x18f2ee0: startInstruction(0x08048391: mov    ebp, esp)
Symbolic@0x18f2ee0 insn@0x08048391[1]: number_(32, 134513553) = 0x08048391<134513553>[32]
Symbolic@0x18f2ee0 insn@0x08048391[1]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x08048391[1]: add(0x08048391<134513553>[32], 0x00000002[32]) = 0x08048393<134513555>[32]
Symbolic@0x18f2ee0 insn@0x08048391[1]: writeRegister(eip, 0x08048393<134513555>[32])
Symbolic@0x18f2ee0 insn@0x08048391[1]: undefined_(32) = v22775[32]
Symbolic@0x18f2ee0 insn@0x08048391[1]: readRegister(esp, v22775[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048391[1]: writeRegister(ebp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048391[1]: finishInstruction(mov    ebp, esp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048393<134513555>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048393: sub    esp, 0x08
Symbolic@0x18f2ee0: startInstruction(0x08048393: sub    esp, 0x08)
Symbolic@0x18f2ee0 insn@0x08048393[2]: number_(32, 134513555) = 0x08048393<134513555>[32]
Symbolic@0x18f2ee0 insn@0x08048393[2]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x08048393[2]: add(0x08048393<134513555>[32], 0x00000003[32]) = 0x08048396<134513558>[32]
Symbolic@0x18f2ee0 insn@0x08048393[2]: writeRegister(eip, 0x08048396<134513558>[32])
Symbolic@0x18f2ee0 insn@0x08048393[2]: undefined_(32) = v22782[32]
Symbolic@0x18f2ee0 insn@0x08048393[2]: readRegister(esp, v22782[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048393[2]: number_(8, 8) = 0x08[8]
Symbolic@0x18f2ee0 insn@0x08048393[2]: signExtend(0x08[8], 32) = 0x00000008[32]
Symbolic@0x18f2ee0 insn@0x08048393[2]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048393[2]: invert(0x00000008[32]) = 0xfffffff7<4294967287,-9>[32]
Symbolic@0x18f2ee0 insn@0x08048393[2]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048393[2]: addWithCarries((add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0xfffffff7<4294967287,-9>[32], true[1]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x08048393[2]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048393[2]: extract((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048393[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048393[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048393[2]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048393[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048393[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048393[2]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048393[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048393[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048393[2]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048393[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048393[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048393[2]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048393[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048393[2]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048393[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048393[2]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
Symbolic@0x18f2ee0 insn@0x08048393[2]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))))
Symbolic@0x18f2ee0 insn@0x08048393[2]: extract((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048393[2]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048393[2]: equalToZero((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048393[2]: writeRegister(zf, (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048393[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048393[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048393[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048393[2]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x08048393[2]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x08048393[2]: invert((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x08048393[2]: writeRegister(cf, (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x08048393[2]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x08048393[2]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x08048393[2]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048393[2]: finishInstruction(sub    esp, 0x08)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048396<134513558>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048396: cmp    byte ds:[0x080496f4<.bss>], 0x00
Symbolic@0x18f2ee0: startInstruction(0x08048396: cmp    byte ds:[0x080496f4<.bss>], 0x00)
Symbolic@0x18f2ee0 insn@0x08048396[3]: number_(32, 134513558) = 0x08048396<134513558>[32]
Symbolic@0x18f2ee0 insn@0x08048396[3]: number_(32, 7) = 0x00000007[32]
Symbolic@0x18f2ee0 insn@0x08048396[3]: add(0x08048396<134513558>[32], 0x00000007[32]) = 0x0804839d<134513565>[32]
Symbolic@0x18f2ee0 insn@0x08048396[3]: writeRegister(eip, 0x0804839d<134513565>[32])
Symbolic@0x18f2ee0 insn@0x08048396[3]: number_(32, 134518516) = 0x080496f4<134518516>[32]
Symbolic@0x18f2ee0 insn@0x08048396[3]: undefined_(8) = v22828[8]
Symbolic@0x18f2ee0 insn@0x08048396[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048396[3]: readMemory(ds, 0x080496f4<134518516>[32], v22828[8], true[1]) = v22828[8]
Symbolic@0x18f2ee0 insn@0x08048396[3]: number_(8, 0) = 0x00[8]
Symbolic@0x18f2ee0 insn@0x08048396[3]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048396[3]: invert(0x00[8]) = 0xff<-1>[8]
Symbolic@0x18f2ee0 insn@0x08048396[3]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048396[3]: addWithCarries(v22828[8], 0xff<-1>[8], true[1]) = v22828[8]
Symbolic@0x18f2ee0 insn@0x08048396[3]: also returns: (extract[8] 0x00000001[32] 0x00000009[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9]))
Symbolic@0x18f2ee0 insn@0x08048396[3]: extract(v22828[8], 0, 8) = v22828[8]
Symbolic@0x18f2ee0 insn@0x08048396[3]: extract(v22828[8], 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] v22828[8])
Symbolic@0x18f2ee0 insn@0x08048396[3]: extract(v22828[8], 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] v22828[8])
Symbolic@0x18f2ee0 insn@0x08048396[3]: xor_((extract[1] 0x00000000[32] 0x00000001[32] v22828[8]), (extract[1] 0x00000001[32] 0x00000002[32] v22828[8])) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v22828[8]) (extract[1] 0x00000001[32] 0x00000002[32] v22828[8]))
Symbolic@0x18f2ee0 insn@0x08048396[3]: extract(v22828[8], 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] v22828[8])
Symbolic@0x18f2ee0 insn@0x08048396[3]: extract(v22828[8], 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] v22828[8])
Symbolic@0x18f2ee0 insn@0x08048396[3]: xor_((extract[1] 0x00000002[32] 0x00000003[32] v22828[8]), (extract[1] 0x00000003[32] 0x00000004[32] v22828[8])) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] v22828[8]) (extract[1] 0x00000003[32] 0x00000004[32] v22828[8]))
Symbolic@0x18f2ee0 insn@0x08048396[3]: extract(v22828[8], 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] v22828[8])
Symbolic@0x18f2ee0 insn@0x08048396[3]: extract(v22828[8], 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] v22828[8])
Symbolic@0x18f2ee0 insn@0x08048396[3]: xor_((extract[1] 0x00000004[32] 0x00000005[32] v22828[8]), (extract[1] 0x00000005[32] 0x00000006[32] v22828[8])) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v22828[8]) (extract[1] 0x00000005[32] 0x00000006[32] v22828[8]))
Symbolic@0x18f2ee0 insn@0x08048396[3]: extract(v22828[8], 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] v22828[8])
Symbolic@0x18f2ee0 insn@0x08048396[3]: extract(v22828[8], 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] v22828[8])
Symbolic@0x18f2ee0 insn@0x08048396[3]: xor_((extract[1] 0x00000006[32] 0x00000007[32] v22828[8]), (extract[1] 0x00000007[32] 0x00000008[32] v22828[8])) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] v22828[8]) (extract[1] 0x00000007[32] 0x00000008[32] v22828[8]))
Symbolic@0x18f2ee0 insn@0x08048396[3]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v22828[8]) (extract[1] 0x00000001[32] 0x00000002[32] v22828[8])), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] v22828[8]) (extract[1] 0x00000003[32] 0x00000004[32] v22828[8]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v22828[8]) (extract[1] 0x00000001[32] 0x00000002[32] v22828[8]) (extract[1] 0x00000002[32] 0x00000003[32] v22828[8]) (extract[1] 0x00000003[32] 0x00000004[32] v22828[8]))
Symbolic@0x18f2ee0 insn@0x08048396[3]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v22828[8]) (extract[1] 0x00000005[32] 0x00000006[32] v22828[8])), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] v22828[8]) (extract[1] 0x00000007[32] 0x00000008[32] v22828[8]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v22828[8]) (extract[1] 0x00000005[32] 0x00000006[32] v22828[8]) (extract[1] 0x00000006[32] 0x00000007[32] v22828[8]) (extract[1] 0x00000007[32] 0x00000008[32] v22828[8]))
Symbolic@0x18f2ee0 insn@0x08048396[3]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v22828[8]) (extract[1] 0x00000001[32] 0x00000002[32] v22828[8]) (extract[1] 0x00000002[32] 0x00000003[32] v22828[8]) (extract[1] 0x00000003[32] 0x00000004[32] v22828[8])), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v22828[8]) (extract[1] 0x00000005[32] 0x00000006[32] v22828[8]) (extract[1] 0x00000006[32] 0x00000007[32] v22828[8]) (extract[1] 0x00000007[32] 0x00000008[32] v22828[8]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v22828[8]) (extract[1] 0x00000001[32] 0x00000002[32] v22828[8]) (extract[1] 0x00000002[32] 0x00000003[32] v22828[8]) (extract[1] 0x00000003[32] 0x00000004[32] v22828[8]) (extract[1] 0x00000004[32] 0x00000005[32] v22828[8]) (extract[1] 0x00000005[32] 0x00000006[32] v22828[8]) (extract[1] 0x00000006[32] 0x00000007[32] v22828[8]) (extract[1] 0x00000007[32] 0x00000008[32] v22828[8]))
Symbolic@0x18f2ee0 insn@0x08048396[3]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v22828[8]) (extract[1] 0x00000001[32] 0x00000002[32] v22828[8]) (extract[1] 0x00000002[32] 0x00000003[32] v22828[8]) (extract[1] 0x00000003[32] 0x00000004[32] v22828[8]) (extract[1] 0x00000004[32] 0x00000005[32] v22828[8]) (extract[1] 0x00000005[32] 0x00000006[32] v22828[8]) (extract[1] 0x00000006[32] 0x00000007[32] v22828[8]) (extract[1] 0x00000007[32] 0x00000008[32] v22828[8]))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v22828[8]) (extract[1] 0x00000001[32] 0x00000002[32] v22828[8]) (extract[1] 0x00000002[32] 0x00000003[32] v22828[8]) (extract[1] 0x00000003[32] 0x00000004[32] v22828[8]) (extract[1] 0x00000004[32] 0x00000005[32] v22828[8]) (extract[1] 0x00000005[32] 0x00000006[32] v22828[8]) (extract[1] 0x00000006[32] 0x00000007[32] v22828[8]) (extract[1] 0x00000007[32] 0x00000008[32] v22828[8])))
Symbolic@0x18f2ee0 insn@0x08048396[3]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v22828[8]) (extract[1] 0x00000001[32] 0x00000002[32] v22828[8]) (extract[1] 0x00000002[32] 0x00000003[32] v22828[8]) (extract[1] 0x00000003[32] 0x00000004[32] v22828[8]) (extract[1] 0x00000004[32] 0x00000005[32] v22828[8]) (extract[1] 0x00000005[32] 0x00000006[32] v22828[8]) (extract[1] 0x00000006[32] 0x00000007[32] v22828[8]) (extract[1] 0x00000007[32] 0x00000008[32] v22828[8]))))
Symbolic@0x18f2ee0 insn@0x08048396[3]: extract(v22828[8], 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] v22828[8])
Symbolic@0x18f2ee0 insn@0x08048396[3]: writeRegister(sf, (extract[1] 0x00000007[32] 0x00000008[32] v22828[8]))
Symbolic@0x18f2ee0 insn@0x08048396[3]: equalToZero(v22828[8]) = (zerop[1] v22828[8])
Symbolic@0x18f2ee0 insn@0x08048396[3]: writeRegister(zf, (zerop[1] v22828[8]))
Symbolic@0x18f2ee0 insn@0x08048396[3]: extract((extract[8] 0x00000001[32] 0x00000009[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9])), 7, 8) = (extract[1] 0x00000008[32] 0x00000009[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9]))
Symbolic@0x18f2ee0 insn@0x08048396[3]: extract((extract[8] 0x00000001[32] 0x00000009[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9])), 6, 7) = (extract[1] 0x00000007[32] 0x00000008[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9]))
Symbolic@0x18f2ee0 insn@0x08048396[3]: extract((extract[8] 0x00000001[32] 0x00000009[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9]))
Symbolic@0x18f2ee0 insn@0x08048396[3]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9]))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9])))
Symbolic@0x18f2ee0 insn@0x08048396[3]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9]))))
Symbolic@0x18f2ee0 insn@0x08048396[3]: invert((extract[1] 0x00000008[32] 0x00000009[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9]))) = (invert[1] (extract[1] 0x00000008[32] 0x00000009[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9])))
Symbolic@0x18f2ee0 insn@0x08048396[3]: writeRegister(cf, (invert[1] (extract[1] 0x00000008[32] 0x00000009[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9]))))
Symbolic@0x18f2ee0 insn@0x08048396[3]: xor_((extract[1] 0x00000008[32] 0x00000009[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9])), (extract[1] 0x00000007[32] 0x00000008[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9]))) = (bv-xor[1] (extract[1] 0x00000007[32] 0x00000008[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9])) (extract[1] 0x00000008[32] 0x00000009[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9])))
Symbolic@0x18f2ee0 insn@0x08048396[3]: writeRegister(of, (bv-xor[1] (extract[1] 0x00000007[32] 0x00000008[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9])) (extract[1] 0x00000008[32] 0x00000009[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9]))))
Symbolic@0x18f2ee0 insn@0x08048396[3]: finishInstruction(cmp    byte ds:[0x080496f4<.bss>], 0x00)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x0804839d<134513565>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000008[32] 0x00000009[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v22828[8]) (extract[1] 0x00000001[32] 0x00000002[32] v22828[8]) (extract[1] 0x00000002[32] 0x00000003[32] v22828[8]) (extract[1] 0x00000003[32] 0x00000004[32] v22828[8]) (extract[1] 0x00000004[32] 0x00000005[32] v22828[8]) (extract[1] 0x00000005[32] 0x00000006[32] v22828[8]) (extract[1] 0x00000006[32] 0x00000007[32] v22828[8]) (extract[1] 0x00000007[32] 0x00000008[32] v22828[8])))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9])))
  zf           write-only = (zerop[1] v22828[8])
  sf           write-only = (extract[1] 0x00000007[32] 0x00000008[32] v22828[8])
  of           write-only = (bv-xor[1] (extract[1] 0x00000007[32] 0x00000008[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9])) (extract[1] 0x00000008[32] 0x00000009[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9])))
  fpstatus_top = 0x0[3]
memory:
  addr=0x080496f4<134518516>[32] read-before-write value=v22828[8]
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x0804839d: jne    0x080483cc<<Insn>>
Symbolic@0x18f2ee0: startInstruction(0x0804839d: jne    0x080483cc<<Insn>>)
Symbolic@0x18f2ee0 insn@0x0804839d[4]: number_(32, 134513565) = 0x0804839d<134513565>[32]
Symbolic@0x18f2ee0 insn@0x0804839d[4]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x0804839d[4]: add(0x0804839d<134513565>[32], 0x00000002[32]) = 0x0804839f<134513567>[32]
Symbolic@0x18f2ee0 insn@0x0804839d[4]: writeRegister(eip, 0x0804839f<134513567>[32])
Symbolic@0x18f2ee0 insn@0x0804839d[4]: undefined_(1) = v22880[1]
Symbolic@0x18f2ee0 insn@0x0804839d[4]: readRegister(zf, v22880[1]) = (zerop[1] v22828[8])
Symbolic@0x18f2ee0 insn@0x0804839d[4]: invert((zerop[1] v22828[8])) = (invert[1] (zerop[1] v22828[8]))
Symbolic@0x18f2ee0 insn@0x0804839d[4]: undefined_(32) = v22883[32]
Symbolic@0x18f2ee0 insn@0x0804839d[4]: readRegister(eip, v22883[32]) = 0x0804839f<134513567>[32]
Symbolic@0x18f2ee0 insn@0x0804839d[4]: number_(32, 134513612) = 0x080483cc<134513612>[32]
Symbolic@0x18f2ee0 insn@0x0804839d[4]: unsignedExtend(0x080483cc<134513612>[32], 32) = 0x080483cc<134513612>[32]
Symbolic@0x18f2ee0 insn@0x0804839d[4]: ite((invert[1] (zerop[1] v22828[8])), 0x080483cc<134513612>[32], 0x0804839f<134513567>[32]) = (ite[32] (invert[1] (zerop[1] v22828[8])) 0x080483cc<134513612>[32] 0x0804839f<134513567>[32])
Symbolic@0x18f2ee0 insn@0x0804839d[4]: writeRegister(eip, (ite[32] (invert[1] (zerop[1] v22828[8])) 0x080483cc<134513612>[32] 0x0804839f<134513567>[32]))
Symbolic@0x18f2ee0 insn@0x0804839d[4]: finishInstruction(jne    0x080483cc<<Insn>>)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = (ite[32] (invert[1] (zerop[1] v22828[8])) 0x080483cc<134513612>[32] 0x0804839f<134513567>[32])
  cf           write-only = (invert[1] (extract[1] 0x00000008[32] 0x00000009[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v22828[8]) (extract[1] 0x00000001[32] 0x00000002[32] v22828[8]) (extract[1] 0x00000002[32] 0x00000003[32] v22828[8]) (extract[1] 0x00000003[32] 0x00000004[32] v22828[8]) (extract[1] 0x00000004[32] 0x00000005[32] v22828[8]) (extract[1] 0x00000005[32] 0x00000006[32] v22828[8]) (extract[1] 0x00000006[32] 0x00000007[32] v22828[8]) (extract[1] 0x00000007[32] 0x00000008[32] v22828[8])))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9])))
  zf           = (zerop[1] v22828[8])
  sf           write-only = (extract[1] 0x00000007[32] 0x00000008[32] v22828[8])
  of           write-only = (bv-xor[1] (extract[1] 0x00000007[32] 0x00000008[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9])) (extract[1] 0x00000008[32] 0x00000009[32] (bv-xor[9] (add[9] (uextend[9] 0x00000009[32] v22828[8]) 0x100<256,-256>[9]) (uextend[9] 0x00000009[32] v22828[8]) 0x0ff[9])))
  fpstatus_top = 0x0[3]
memory:
  addr=0x080496f4<134518516>[32] read-before-write value=v22828[8]
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x0804839f: mov    eax, dword ds:[0x080496f0<.data+8>]
Symbolic@0x18f2ee0: startInstruction(0x0804839f: mov    eax, dword ds:[0x080496f0<.data+8>])
Symbolic@0x18f2ee0 insn@0x0804839f[0]: number_(32, 134513567) = 0x0804839f<134513567>[32]
Symbolic@0x18f2ee0 insn@0x0804839f[0]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x0804839f[0]: add(0x0804839f<134513567>[32], 0x00000005[32]) = 0x080483a4<134513572>[32]
Symbolic@0x18f2ee0 insn@0x0804839f[0]: writeRegister(eip, 0x080483a4<134513572>[32])
Symbolic@0x18f2ee0 insn@0x0804839f[0]: number_(32, 134518512) = 0x080496f0<134518512>[32]
Symbolic@0x18f2ee0 insn@0x0804839f[0]: undefined_(32) = v23376[32]
Symbolic@0x18f2ee0 insn@0x0804839f[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x0804839f[0]: readMemory(ds, 0x080496f0<134518512>[32], v23376[32], true[1]) = v23376[32]
Symbolic@0x18f2ee0 insn@0x0804839f[0]: writeRegister(eax, v23376[32])
Symbolic@0x18f2ee0 insn@0x0804839f[0]: finishInstruction(mov    eax, dword ds:[0x080496f0<.data+8>])
registers:
  eax          write-only = v23376[32]
  eip          write-only = 0x080483a4<134513572>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=0x080496f3<134518515>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v23376[32])
  addr=0x080496f2<134518514>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v23376[32])
  addr=0x080496f1<134518513>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v23376[32])
  addr=0x080496f0<134518512>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v23376[32])

0x080483a4: mov    edx, dword ds:[eax]
Symbolic@0x18f2ee0: startInstruction(0x080483a4: mov    edx, dword ds:[eax])
Symbolic@0x18f2ee0 insn@0x080483a4[1]: number_(32, 134513572) = 0x080483a4<134513572>[32]
Symbolic@0x18f2ee0 insn@0x080483a4[1]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080483a4[1]: add(0x080483a4<134513572>[32], 0x00000002[32]) = 0x080483a6<134513574>[32]
Symbolic@0x18f2ee0 insn@0x080483a4[1]: writeRegister(eip, 0x080483a6<134513574>[32])
Symbolic@0x18f2ee0 insn@0x080483a4[1]: undefined_(32) = v23396[32]
Symbolic@0x18f2ee0 insn@0x080483a4[1]: readRegister(eax, v23396[32]) = v23376[32]
Symbolic@0x18f2ee0 insn@0x080483a4[1]: undefined_(32) = v23398[32]
Symbolic@0x18f2ee0 insn@0x080483a4[1]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080483a4[1]: readMemory(ds, v23376[32], v23398[32], true[1]) = v23398[32]
Symbolic@0x18f2ee0 insn@0x080483a4[1]: writeRegister(edx, v23398[32])
Symbolic@0x18f2ee0 insn@0x080483a4[1]: finishInstruction(mov    edx, dword ds:[eax])
registers:
  eax          = v23376[32]
  edx          write-only = v23398[32]
  eip          write-only = 0x080483a6<134513574>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] v23376[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v23398[32])
  addr=(add[32] v23376[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v23398[32])
  addr=(add[32] v23376[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v23398[32])
  addr=v23376[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v23398[32])
  addr=0x080496f3<134518515>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v23376[32])
  addr=0x080496f2<134518514>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v23376[32])
  addr=0x080496f1<134518513>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v23376[32])
  addr=0x080496f0<134518512>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v23376[32])

0x080483a6: test   edx, edx
Symbolic@0x18f2ee0: startInstruction(0x080483a6: test   edx, edx)
Symbolic@0x18f2ee0 insn@0x080483a6[2]: number_(32, 134513574) = 0x080483a6<134513574>[32]
Symbolic@0x18f2ee0 insn@0x080483a6[2]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080483a6[2]: add(0x080483a6<134513574>[32], 0x00000002[32]) = 0x080483a8<134513576>[32]
Symbolic@0x18f2ee0 insn@0x080483a6[2]: writeRegister(eip, 0x080483a8<134513576>[32])
Symbolic@0x18f2ee0 insn@0x080483a6[2]: undefined_(32) = v23418[32]
Symbolic@0x18f2ee0 insn@0x080483a6[2]: readRegister(edx, v23418[32]) = v23398[32]
Symbolic@0x18f2ee0 insn@0x080483a6[2]: undefined_(32) = v23420[32]
Symbolic@0x18f2ee0 insn@0x080483a6[2]: readRegister(edx, v23420[32]) = v23398[32]
Symbolic@0x18f2ee0 insn@0x080483a6[2]: and_(v23398[32], v23398[32]) = v23398[32]
Symbolic@0x18f2ee0 insn@0x080483a6[2]: extract(v23398[32], 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] v23398[32])
Symbolic@0x18f2ee0 insn@0x080483a6[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] v23398[32]), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] v23398[32])
Symbolic@0x18f2ee0 insn@0x080483a6[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] v23398[32]), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] v23398[32])
Symbolic@0x18f2ee0 insn@0x080483a6[2]: xor_((extract[1] 0x00000000[32] 0x00000001[32] v23398[32]), (extract[1] 0x00000001[32] 0x00000002[32] v23398[32])) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v23398[32]) (extract[1] 0x00000001[32] 0x00000002[32] v23398[32]))
Symbolic@0x18f2ee0 insn@0x080483a6[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] v23398[32]), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] v23398[32])
Symbolic@0x18f2ee0 insn@0x080483a6[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] v23398[32]), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] v23398[32])
Symbolic@0x18f2ee0 insn@0x080483a6[2]: xor_((extract[1] 0x00000002[32] 0x00000003[32] v23398[32]), (extract[1] 0x00000003[32] 0x00000004[32] v23398[32])) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] v23398[32]) (extract[1] 0x00000003[32] 0x00000004[32] v23398[32]))
Symbolic@0x18f2ee0 insn@0x080483a6[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] v23398[32]), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] v23398[32])
Symbolic@0x18f2ee0 insn@0x080483a6[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] v23398[32]), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] v23398[32])
Symbolic@0x18f2ee0 insn@0x080483a6[2]: xor_((extract[1] 0x00000004[32] 0x00000005[32] v23398[32]), (extract[1] 0x00000005[32] 0x00000006[32] v23398[32])) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v23398[32]) (extract[1] 0x00000005[32] 0x00000006[32] v23398[32]))
Symbolic@0x18f2ee0 insn@0x080483a6[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] v23398[32]), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] v23398[32])
Symbolic@0x18f2ee0 insn@0x080483a6[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] v23398[32]), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] v23398[32])
Symbolic@0x18f2ee0 insn@0x080483a6[2]: xor_((extract[1] 0x00000006[32] 0x00000007[32] v23398[32]), (extract[1] 0x00000007[32] 0x00000008[32] v23398[32])) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] v23398[32]) (extract[1] 0x00000007[32] 0x00000008[32] v23398[32]))
Symbolic@0x18f2ee0 insn@0x080483a6[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v23398[32]) (extract[1] 0x00000001[32] 0x00000002[32] v23398[32])), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] v23398[32]) (extract[1] 0x00000003[32] 0x00000004[32] v23398[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v23398[32]) (extract[1] 0x00000001[32] 0x00000002[32] v23398[32]) (extract[1] 0x00000002[32] 0x00000003[32] v23398[32]) (extract[1] 0x00000003[32] 0x00000004[32] v23398[32]))
Symbolic@0x18f2ee0 insn@0x080483a6[2]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v23398[32]) (extract[1] 0x00000005[32] 0x00000006[32] v23398[32])), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] v23398[32]) (extract[1] 0x00000007[32] 0x00000008[32] v23398[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v23398[32]) (extract[1] 0x00000005[32] 0x00000006[32] v23398[32]) (extract[1] 0x00000006[32] 0x00000007[32] v23398[32]) (extract[1] 0x00000007[32] 0x00000008[32] v23398[32]))
Symbolic@0x18f2ee0 insn@0x080483a6[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v23398[32]) (extract[1] 0x00000001[32] 0x00000002[32] v23398[32]) (extract[1] 0x00000002[32] 0x00000003[32] v23398[32]) (extract[1] 0x00000003[32] 0x00000004[32] v23398[32])), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v23398[32]) (extract[1] 0x00000005[32] 0x00000006[32] v23398[32]) (extract[1] 0x00000006[32] 0x00000007[32] v23398[32]) (extract[1] 0x00000007[32] 0x00000008[32] v23398[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v23398[32]) (extract[1] 0x00000001[32] 0x00000002[32] v23398[32]) (extract[1] 0x00000002[32] 0x00000003[32] v23398[32]) (extract[1] 0x00000003[32] 0x00000004[32] v23398[32]) (extract[1] 0x00000004[32] 0x00000005[32] v23398[32]) (extract[1] 0x00000005[32] 0x00000006[32] v23398[32]) (extract[1] 0x00000006[32] 0x00000007[32] v23398[32]) (extract[1] 0x00000007[32] 0x00000008[32] v23398[32]))
Symbolic@0x18f2ee0 insn@0x080483a6[2]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v23398[32]) (extract[1] 0x00000001[32] 0x00000002[32] v23398[32]) (extract[1] 0x00000002[32] 0x00000003[32] v23398[32]) (extract[1] 0x00000003[32] 0x00000004[32] v23398[32]) (extract[1] 0x00000004[32] 0x00000005[32] v23398[32]) (extract[1] 0x00000005[32] 0x00000006[32] v23398[32]) (extract[1] 0x00000006[32] 0x00000007[32] v23398[32]) (extract[1] 0x00000007[32] 0x00000008[32] v23398[32]))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v23398[32]) (extract[1] 0x00000001[32] 0x00000002[32] v23398[32]) (extract[1] 0x00000002[32] 0x00000003[32] v23398[32]) (extract[1] 0x00000003[32] 0x00000004[32] v23398[32]) (extract[1] 0x00000004[32] 0x00000005[32] v23398[32]) (extract[1] 0x00000005[32] 0x00000006[32] v23398[32]) (extract[1] 0x00000006[32] 0x00000007[32] v23398[32]) (extract[1] 0x00000007[32] 0x00000008[32] v23398[32])))
Symbolic@0x18f2ee0 insn@0x080483a6[2]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v23398[32]) (extract[1] 0x00000001[32] 0x00000002[32] v23398[32]) (extract[1] 0x00000002[32] 0x00000003[32] v23398[32]) (extract[1] 0x00000003[32] 0x00000004[32] v23398[32]) (extract[1] 0x00000004[32] 0x00000005[32] v23398[32]) (extract[1] 0x00000005[32] 0x00000006[32] v23398[32]) (extract[1] 0x00000006[32] 0x00000007[32] v23398[32]) (extract[1] 0x00000007[32] 0x00000008[32] v23398[32]))))
Symbolic@0x18f2ee0 insn@0x080483a6[2]: extract(v23398[32], 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] v23398[32])
Symbolic@0x18f2ee0 insn@0x080483a6[2]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] v23398[32]))
Symbolic@0x18f2ee0 insn@0x080483a6[2]: equalToZero(v23398[32]) = (zerop[1] v23398[32])
Symbolic@0x18f2ee0 insn@0x080483a6[2]: writeRegister(zf, (zerop[1] v23398[32]))
Symbolic@0x18f2ee0 insn@0x080483a6[2]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080483a6[2]: writeRegister(of, false[1])
Symbolic@0x18f2ee0 insn@0x080483a6[2]: unspecified_(1) = v23442[1]<unspec>
Symbolic@0x18f2ee0 insn@0x080483a6[2]: writeRegister(af, v23442[1]<unspec>)
Symbolic@0x18f2ee0 insn@0x080483a6[2]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080483a6[2]: writeRegister(cf, false[1])
Symbolic@0x18f2ee0 insn@0x080483a6[2]: finishInstruction(test   edx, edx)
registers:
  eax          = v23376[32]
  edx          = v23398[32]
  eip          write-only = 0x080483a8<134513576>[32]
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v23398[32]) (extract[1] 0x00000001[32] 0x00000002[32] v23398[32]) (extract[1] 0x00000002[32] 0x00000003[32] v23398[32]) (extract[1] 0x00000003[32] 0x00000004[32] v23398[32]) (extract[1] 0x00000004[32] 0x00000005[32] v23398[32]) (extract[1] 0x00000005[32] 0x00000006[32] v23398[32]) (extract[1] 0x00000006[32] 0x00000007[32] v23398[32]) (extract[1] 0x00000007[32] 0x00000008[32] v23398[32])))
  af           write-only = v23442[1]<unspec>
  zf           write-only = (zerop[1] v23398[32])
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] v23398[32])
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] v23376[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v23398[32])
  addr=(add[32] v23376[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v23398[32])
  addr=(add[32] v23376[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v23398[32])
  addr=v23376[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v23398[32])
  addr=0x080496f3<134518515>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v23376[32])
  addr=0x080496f2<134518514>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v23376[32])
  addr=0x080496f1<134518513>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v23376[32])
  addr=0x080496f0<134518512>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v23376[32])

0x080483a8: je     0x080483c5<<Insn>>
Symbolic@0x18f2ee0: startInstruction(0x080483a8: je     0x080483c5<<Insn>>)
Symbolic@0x18f2ee0 insn@0x080483a8[3]: number_(32, 134513576) = 0x080483a8<134513576>[32]
Symbolic@0x18f2ee0 insn@0x080483a8[3]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080483a8[3]: add(0x080483a8<134513576>[32], 0x00000002[32]) = 0x080483aa<134513578>[32]
Symbolic@0x18f2ee0 insn@0x080483a8[3]: writeRegister(eip, 0x080483aa<134513578>[32])
Symbolic@0x18f2ee0 insn@0x080483a8[3]: undefined_(1) = v23447[1]
Symbolic@0x18f2ee0 insn@0x080483a8[3]: readRegister(zf, v23447[1]) = (zerop[1] v23398[32])
Symbolic@0x18f2ee0 insn@0x080483a8[3]: undefined_(32) = v23449[32]
Symbolic@0x18f2ee0 insn@0x080483a8[3]: readRegister(eip, v23449[32]) = 0x080483aa<134513578>[32]
Symbolic@0x18f2ee0 insn@0x080483a8[3]: number_(32, 134513605) = 0x080483c5<134513605>[32]
Symbolic@0x18f2ee0 insn@0x080483a8[3]: unsignedExtend(0x080483c5<134513605>[32], 32) = 0x080483c5<134513605>[32]
Symbolic@0x18f2ee0 insn@0x080483a8[3]: ite((zerop[1] v23398[32]), 0x080483c5<134513605>[32], 0x080483aa<134513578>[32]) = (ite[32] (zerop[1] v23398[32]) 0x080483c5<134513605>[32] 0x080483aa<134513578>[32])
Symbolic@0x18f2ee0 insn@0x080483a8[3]: writeRegister(eip, (ite[32] (zerop[1] v23398[32]) 0x080483c5<134513605>[32] 0x080483aa<134513578>[32]))
Symbolic@0x18f2ee0 insn@0x080483a8[3]: finishInstruction(je     0x080483c5<<Insn>>)
registers:
  eax          = v23376[32]
  edx          = v23398[32]
  eip          = (ite[32] (zerop[1] v23398[32]) 0x080483c5<134513605>[32] 0x080483aa<134513578>[32])
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v23398[32]) (extract[1] 0x00000001[32] 0x00000002[32] v23398[32]) (extract[1] 0x00000002[32] 0x00000003[32] v23398[32]) (extract[1] 0x00000003[32] 0x00000004[32] v23398[32]) (extract[1] 0x00000004[32] 0x00000005[32] v23398[32]) (extract[1] 0x00000005[32] 0x00000006[32] v23398[32]) (extract[1] 0x00000006[32] 0x00000007[32] v23398[32]) (extract[1] 0x00000007[32] 0x00000008[32] v23398[32])))
  af           write-only = v23442[1]<unspec>
  zf           = (zerop[1] v23398[32])
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] v23398[32])
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] v23376[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v23398[32])
  addr=(add[32] v23376[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v23398[32])
  addr=(add[32] v23376[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v23398[32])
  addr=v23376[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v23398[32])
  addr=0x080496f3<134518515>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v23376[32])
  addr=0x080496f2<134518514>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v23376[32])
  addr=0x080496f1<134518513>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v23376[32])
  addr=0x080496f0<134518512>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v23376[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080483aa: lea    esi, [esi + 0x00000000]
Symbolic@0x18f2ee0: startInstruction(0x080483aa: lea    esi, [esi + 0x00000000])
Symbolic@0x18f2ee0 insn@0x080483aa[0]: number_(32, 134513578) = 0x080483aa<134513578>[32]
Symbolic@0x18f2ee0 insn@0x080483aa[0]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x080483aa[0]: add(0x080483aa<134513578>[32], 0x00000006[32]) = 0x080483b0<134513584>[32]
Symbolic@0x18f2ee0 insn@0x080483aa[0]: writeRegister(eip, 0x080483b0<134513584>[32])
Symbolic@0x18f2ee0 insn@0x080483aa[0]: undefined_(32) = v23942[32]
Symbolic@0x18f2ee0 insn@0x080483aa[0]: readRegister(esi, v23942[32]) = esi_0[32]
Symbolic@0x18f2ee0 insn@0x080483aa[0]: number_(32, 0) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x080483aa[0]: add(esi_0[32], 0x00000000[32]) = esi_0[32]
Symbolic@0x18f2ee0 insn@0x080483aa[0]: unsignedExtend(esi_0[32], 32) = esi_0[32]
Symbolic@0x18f2ee0 insn@0x080483aa[0]: writeRegister(esi, esi_0[32])
Symbolic@0x18f2ee0 insn@0x080483aa[0]: finishInstruction(lea    esi, [esi + 0x00000000])
registers:
  eip          write-only = 0x080483b0<134513584>[32]
  fpstatus_top = 0x0[3]
memory:

0x080483b0: add    eax, 0x04
Symbolic@0x18f2ee0: startInstruction(0x080483b0: add    eax, 0x04)
Symbolic@0x18f2ee0 insn@0x080483b0[1]: number_(32, 134513584) = 0x080483b0<134513584>[32]
Symbolic@0x18f2ee0 insn@0x080483b0[1]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x080483b0[1]: add(0x080483b0<134513584>[32], 0x00000003[32]) = 0x080483b3<134513587>[32]
Symbolic@0x18f2ee0 insn@0x080483b0[1]: writeRegister(eip, 0x080483b3<134513587>[32])
Symbolic@0x18f2ee0 insn@0x080483b0[1]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080483b0[1]: number_(8, 4) = 0x04[8]
Symbolic@0x18f2ee0 insn@0x080483b0[1]: undefined_(32) = v23950[32]
Symbolic@0x18f2ee0 insn@0x080483b0[1]: readRegister(eax, v23950[32]) = eax_0[32]
Symbolic@0x18f2ee0 insn@0x080483b0[1]: signExtend(0x04[8], 32) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080483b0[1]: addWithCarries(eax_0[32], 0x00000004[32], false[1]) = (add[32] eax_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x080483b0[1]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: extract((add[32] eax_0[32] 0x00000004[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] 0x00000004[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] 0x00000004[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] 0x00000004[32])))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] 0x00000004[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] 0x00000004[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] 0x00000004[32])))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] 0x00000004[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] 0x00000004[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] 0x00000004[32])))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] 0x00000004[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32])))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] 0x00000004[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] 0x00000004[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] 0x00000004[32])))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] 0x00000004[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32])))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] 0x00000004[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32])))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32]))))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32])))))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: extract((add[32] eax_0[32] 0x00000004[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] eax_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] eax_0[32] 0x00000004[32])))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: equalToZero((add[32] eax_0[32] 0x00000004[32])) = (zerop[1] (add[32] eax_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: writeRegister(zf, (zerop[1] (add[32] eax_0[32] 0x00000004[32])))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: writeRegister(af, (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: writeRegister(cf, (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]))))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: writeRegister(eax, (add[32] eax_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080483b0[1]: finishInstruction(add    eax, 0x04)
registers:
  eax          read-before-write = (add[32] eax_0[32] 0x00000004[32])
  eip          write-only = 0x080483b3<134513587>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]))
  zf           write-only = (zerop[1] (add[32] eax_0[32] 0x00000004[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] eax_0[32] 0x00000004[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])))
  fpstatus_top = 0x0[3]
memory:

0x080483b3: mov    dword ds:[0x080496f0<.data+8>], eax
Symbolic@0x18f2ee0: startInstruction(0x080483b3: mov    dword ds:[0x080496f0<.data+8>], eax)
Symbolic@0x18f2ee0 insn@0x080483b3[2]: number_(32, 134513587) = 0x080483b3<134513587>[32]
Symbolic@0x18f2ee0 insn@0x080483b3[2]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x080483b3[2]: add(0x080483b3<134513587>[32], 0x00000005[32]) = 0x080483b8<134513592>[32]
Symbolic@0x18f2ee0 insn@0x080483b3[2]: writeRegister(eip, 0x080483b8<134513592>[32])
Symbolic@0x18f2ee0 insn@0x080483b3[2]: undefined_(32) = v23991[32]
Symbolic@0x18f2ee0 insn@0x080483b3[2]: readRegister(eax, v23991[32]) = (add[32] eax_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x080483b3[2]: number_(32, 134518512) = 0x080496f0<134518512>[32]
Symbolic@0x18f2ee0 insn@0x080483b3[2]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080483b3[2]: writeMemory(ds, 0x080496f0<134518512>[32], (add[32] eax_0[32] 0x00000004[32]), true[1])
Symbolic@0x18f2ee0 insn@0x080483b3[2]: finishInstruction(mov    dword ds:[0x080496f0<.data+8>], eax)
registers:
  eax          read-before-write = (add[32] eax_0[32] 0x00000004[32])
  eip          write-only = 0x080483b8<134513592>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]))
  zf           write-only = (zerop[1] (add[32] eax_0[32] 0x00000004[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] eax_0[32] 0x00000004[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=0x080496f3<134518515>[32] write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] eax_0[32] 0x00000004[32]))
  addr=0x080496f2<134518514>[32] write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] eax_0[32] 0x00000004[32]))
  addr=0x080496f1<134518513>[32] write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] eax_0[32] 0x00000004[32]))
  addr=0x080496f0<134518512>[32] write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32]))

0x080483b8: call   edx
Symbolic@0x18f2ee0: startInstruction(0x080483b8: call   edx)
Symbolic@0x18f2ee0 insn@0x080483b8[3]: number_(32, 134513592) = 0x080483b8<134513592>[32]
Symbolic@0x18f2ee0 insn@0x080483b8[3]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080483b8[3]: add(0x080483b8<134513592>[32], 0x00000002[32]) = 0x080483ba<134513594>[32]
Symbolic@0x18f2ee0 insn@0x080483b8[3]: writeRegister(eip, 0x080483ba<134513594>[32])
Symbolic@0x18f2ee0 insn@0x080483b8[3]: undefined_(32) = v24005[32]
Symbolic@0x18f2ee0 insn@0x080483b8[3]: readRegister(edx, v24005[32]) = edx_0[32]
Symbolic@0x18f2ee0 insn@0x080483b8[3]: unsignedExtend(edx_0[32], 32) = edx_0[32]
Symbolic@0x18f2ee0 insn@0x080483b8[3]: undefined_(32) = v24007[32]
Symbolic@0x18f2ee0 insn@0x080483b8[3]: readRegister(esp, v24007[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x080483b8[3]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080483b8[3]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x080483b8[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080483b8[3]: undefined_(32) = v24009[32]
Symbolic@0x18f2ee0 insn@0x080483b8[3]: readRegister(eip, v24009[32]) = 0x080483ba<134513594>[32]
Symbolic@0x18f2ee0 insn@0x080483b8[3]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0x080483ba<134513594>[32], true[1])
Symbolic@0x18f2ee0 insn@0x080483b8[3]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080483b8[3]: filterCallTarget(edx_0[32]) = edx_0[32]
Symbolic@0x18f2ee0 insn@0x080483b8[3]: writeRegister(eip, edx_0[32])
Symbolic@0x18f2ee0 insn@0x080483b8[3]: finishInstruction(call   edx)
registers:
  eax          read-before-write = (add[32] eax_0[32] 0x00000004[32])
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = edx_0[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] 0x00000004[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]))
  zf           write-only = (zerop[1] (add[32] eax_0[32] 0x00000004[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] eax_0[32] 0x00000004[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33]) (uextend[33] 0x00000021[32] eax_0[32]) 0x000000004[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=0x83<-125>[8]
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=0xba<-70>[8]
  addr=0x080496f3<134518515>[32] write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] eax_0[32] 0x00000004[32]))
  addr=0x080496f2<134518514>[32] write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] eax_0[32] 0x00000004[32]))
  addr=0x080496f1<134518513>[32] write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] eax_0[32] 0x00000004[32]))
  addr=0x080496f0<134518512>[32] write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080483ba: mov    eax, dword ds:[0x080496f0<.data+8>]
Symbolic@0x18f2ee0: startInstruction(0x080483ba: mov    eax, dword ds:[0x080496f0<.data+8>])
Symbolic@0x18f2ee0 insn@0x080483ba[0]: number_(32, 134513594) = 0x080483ba<134513594>[32]
Symbolic@0x18f2ee0 insn@0x080483ba[0]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x080483ba[0]: add(0x080483ba<134513594>[32], 0x00000005[32]) = 0x080483bf<134513599>[32]
Symbolic@0x18f2ee0 insn@0x080483ba[0]: writeRegister(eip, 0x080483bf<134513599>[32])
Symbolic@0x18f2ee0 insn@0x080483ba[0]: number_(32, 134518512) = 0x080496f0<134518512>[32]
Symbolic@0x18f2ee0 insn@0x080483ba[0]: undefined_(32) = v24507[32]
Symbolic@0x18f2ee0 insn@0x080483ba[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080483ba[0]: readMemory(ds, 0x080496f0<134518512>[32], v24507[32], true[1]) = v24507[32]
Symbolic@0x18f2ee0 insn@0x080483ba[0]: writeRegister(eax, v24507[32])
Symbolic@0x18f2ee0 insn@0x080483ba[0]: finishInstruction(mov    eax, dword ds:[0x080496f0<.data+8>])
registers:
  eax          write-only = v24507[32]
  eip          write-only = 0x080483bf<134513599>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=0x080496f3<134518515>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v24507[32])
  addr=0x080496f2<134518514>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v24507[32])
  addr=0x080496f1<134518513>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v24507[32])
  addr=0x080496f0<134518512>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v24507[32])

0x080483bf: mov    edx, dword ds:[eax]
Symbolic@0x18f2ee0: startInstruction(0x080483bf: mov    edx, dword ds:[eax])
Symbolic@0x18f2ee0 insn@0x080483bf[1]: number_(32, 134513599) = 0x080483bf<134513599>[32]
Symbolic@0x18f2ee0 insn@0x080483bf[1]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080483bf[1]: add(0x080483bf<134513599>[32], 0x00000002[32]) = 0x080483c1<134513601>[32]
Symbolic@0x18f2ee0 insn@0x080483bf[1]: writeRegister(eip, 0x080483c1<134513601>[32])
Symbolic@0x18f2ee0 insn@0x080483bf[1]: undefined_(32) = v24527[32]
Symbolic@0x18f2ee0 insn@0x080483bf[1]: readRegister(eax, v24527[32]) = v24507[32]
Symbolic@0x18f2ee0 insn@0x080483bf[1]: undefined_(32) = v24529[32]
Symbolic@0x18f2ee0 insn@0x080483bf[1]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080483bf[1]: readMemory(ds, v24507[32], v24529[32], true[1]) = v24529[32]
Symbolic@0x18f2ee0 insn@0x080483bf[1]: writeRegister(edx, v24529[32])
Symbolic@0x18f2ee0 insn@0x080483bf[1]: finishInstruction(mov    edx, dword ds:[eax])
registers:
  eax          = v24507[32]
  edx          write-only = v24529[32]
  eip          write-only = 0x080483c1<134513601>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] v24507[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v24529[32])
  addr=(add[32] v24507[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v24529[32])
  addr=(add[32] v24507[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v24529[32])
  addr=v24507[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v24529[32])
  addr=0x080496f3<134518515>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v24507[32])
  addr=0x080496f2<134518514>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v24507[32])
  addr=0x080496f1<134518513>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v24507[32])
  addr=0x080496f0<134518512>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v24507[32])

0x080483c1: test   edx, edx
Symbolic@0x18f2ee0: startInstruction(0x080483c1: test   edx, edx)
Symbolic@0x18f2ee0 insn@0x080483c1[2]: number_(32, 134513601) = 0x080483c1<134513601>[32]
Symbolic@0x18f2ee0 insn@0x080483c1[2]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080483c1[2]: add(0x080483c1<134513601>[32], 0x00000002[32]) = 0x080483c3<134513603>[32]
Symbolic@0x18f2ee0 insn@0x080483c1[2]: writeRegister(eip, 0x080483c3<134513603>[32])
Symbolic@0x18f2ee0 insn@0x080483c1[2]: undefined_(32) = v24549[32]
Symbolic@0x18f2ee0 insn@0x080483c1[2]: readRegister(edx, v24549[32]) = v24529[32]
Symbolic@0x18f2ee0 insn@0x080483c1[2]: undefined_(32) = v24551[32]
Symbolic@0x18f2ee0 insn@0x080483c1[2]: readRegister(edx, v24551[32]) = v24529[32]
Symbolic@0x18f2ee0 insn@0x080483c1[2]: and_(v24529[32], v24529[32]) = v24529[32]
Symbolic@0x18f2ee0 insn@0x080483c1[2]: extract(v24529[32], 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] v24529[32])
Symbolic@0x18f2ee0 insn@0x080483c1[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] v24529[32]), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] v24529[32])
Symbolic@0x18f2ee0 insn@0x080483c1[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] v24529[32]), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] v24529[32])
Symbolic@0x18f2ee0 insn@0x080483c1[2]: xor_((extract[1] 0x00000000[32] 0x00000001[32] v24529[32]), (extract[1] 0x00000001[32] 0x00000002[32] v24529[32])) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v24529[32]) (extract[1] 0x00000001[32] 0x00000002[32] v24529[32]))
Symbolic@0x18f2ee0 insn@0x080483c1[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] v24529[32]), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] v24529[32])
Symbolic@0x18f2ee0 insn@0x080483c1[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] v24529[32]), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] v24529[32])
Symbolic@0x18f2ee0 insn@0x080483c1[2]: xor_((extract[1] 0x00000002[32] 0x00000003[32] v24529[32]), (extract[1] 0x00000003[32] 0x00000004[32] v24529[32])) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] v24529[32]) (extract[1] 0x00000003[32] 0x00000004[32] v24529[32]))
Symbolic@0x18f2ee0 insn@0x080483c1[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] v24529[32]), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] v24529[32])
Symbolic@0x18f2ee0 insn@0x080483c1[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] v24529[32]), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] v24529[32])
Symbolic@0x18f2ee0 insn@0x080483c1[2]: xor_((extract[1] 0x00000004[32] 0x00000005[32] v24529[32]), (extract[1] 0x00000005[32] 0x00000006[32] v24529[32])) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v24529[32]) (extract[1] 0x00000005[32] 0x00000006[32] v24529[32]))
Symbolic@0x18f2ee0 insn@0x080483c1[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] v24529[32]), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] v24529[32])
Symbolic@0x18f2ee0 insn@0x080483c1[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] v24529[32]), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] v24529[32])
Symbolic@0x18f2ee0 insn@0x080483c1[2]: xor_((extract[1] 0x00000006[32] 0x00000007[32] v24529[32]), (extract[1] 0x00000007[32] 0x00000008[32] v24529[32])) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] v24529[32]) (extract[1] 0x00000007[32] 0x00000008[32] v24529[32]))
Symbolic@0x18f2ee0 insn@0x080483c1[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v24529[32]) (extract[1] 0x00000001[32] 0x00000002[32] v24529[32])), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] v24529[32]) (extract[1] 0x00000003[32] 0x00000004[32] v24529[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v24529[32]) (extract[1] 0x00000001[32] 0x00000002[32] v24529[32]) (extract[1] 0x00000002[32] 0x00000003[32] v24529[32]) (extract[1] 0x00000003[32] 0x00000004[32] v24529[32]))
Symbolic@0x18f2ee0 insn@0x080483c1[2]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v24529[32]) (extract[1] 0x00000005[32] 0x00000006[32] v24529[32])), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] v24529[32]) (extract[1] 0x00000007[32] 0x00000008[32] v24529[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v24529[32]) (extract[1] 0x00000005[32] 0x00000006[32] v24529[32]) (extract[1] 0x00000006[32] 0x00000007[32] v24529[32]) (extract[1] 0x00000007[32] 0x00000008[32] v24529[32]))
Symbolic@0x18f2ee0 insn@0x080483c1[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v24529[32]) (extract[1] 0x00000001[32] 0x00000002[32] v24529[32]) (extract[1] 0x00000002[32] 0x00000003[32] v24529[32]) (extract[1] 0x00000003[32] 0x00000004[32] v24529[32])), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v24529[32]) (extract[1] 0x00000005[32] 0x00000006[32] v24529[32]) (extract[1] 0x00000006[32] 0x00000007[32] v24529[32]) (extract[1] 0x00000007[32] 0x00000008[32] v24529[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v24529[32]) (extract[1] 0x00000001[32] 0x00000002[32] v24529[32]) (extract[1] 0x00000002[32] 0x00000003[32] v24529[32]) (extract[1] 0x00000003[32] 0x00000004[32] v24529[32]) (extract[1] 0x00000004[32] 0x00000005[32] v24529[32]) (extract[1] 0x00000005[32] 0x00000006[32] v24529[32]) (extract[1] 0x00000006[32] 0x00000007[32] v24529[32]) (extract[1] 0x00000007[32] 0x00000008[32] v24529[32]))
Symbolic@0x18f2ee0 insn@0x080483c1[2]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v24529[32]) (extract[1] 0x00000001[32] 0x00000002[32] v24529[32]) (extract[1] 0x00000002[32] 0x00000003[32] v24529[32]) (extract[1] 0x00000003[32] 0x00000004[32] v24529[32]) (extract[1] 0x00000004[32] 0x00000005[32] v24529[32]) (extract[1] 0x00000005[32] 0x00000006[32] v24529[32]) (extract[1] 0x00000006[32] 0x00000007[32] v24529[32]) (extract[1] 0x00000007[32] 0x00000008[32] v24529[32]))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v24529[32]) (extract[1] 0x00000001[32] 0x00000002[32] v24529[32]) (extract[1] 0x00000002[32] 0x00000003[32] v24529[32]) (extract[1] 0x00000003[32] 0x00000004[32] v24529[32]) (extract[1] 0x00000004[32] 0x00000005[32] v24529[32]) (extract[1] 0x00000005[32] 0x00000006[32] v24529[32]) (extract[1] 0x00000006[32] 0x00000007[32] v24529[32]) (extract[1] 0x00000007[32] 0x00000008[32] v24529[32])))
Symbolic@0x18f2ee0 insn@0x080483c1[2]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v24529[32]) (extract[1] 0x00000001[32] 0x00000002[32] v24529[32]) (extract[1] 0x00000002[32] 0x00000003[32] v24529[32]) (extract[1] 0x00000003[32] 0x00000004[32] v24529[32]) (extract[1] 0x00000004[32] 0x00000005[32] v24529[32]) (extract[1] 0x00000005[32] 0x00000006[32] v24529[32]) (extract[1] 0x00000006[32] 0x00000007[32] v24529[32]) (extract[1] 0x00000007[32] 0x00000008[32] v24529[32]))))
Symbolic@0x18f2ee0 insn@0x080483c1[2]: extract(v24529[32], 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] v24529[32])
Symbolic@0x18f2ee0 insn@0x080483c1[2]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] v24529[32]))
Symbolic@0x18f2ee0 insn@0x080483c1[2]: equalToZero(v24529[32]) = (zerop[1] v24529[32])
Symbolic@0x18f2ee0 insn@0x080483c1[2]: writeRegister(zf, (zerop[1] v24529[32]))
Symbolic@0x18f2ee0 insn@0x080483c1[2]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080483c1[2]: writeRegister(of, false[1])
Symbolic@0x18f2ee0 insn@0x080483c1[2]: unspecified_(1) = v24573[1]<unspec>
Symbolic@0x18f2ee0 insn@0x080483c1[2]: writeRegister(af, v24573[1]<unspec>)
Symbolic@0x18f2ee0 insn@0x080483c1[2]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080483c1[2]: writeRegister(cf, false[1])
Symbolic@0x18f2ee0 insn@0x080483c1[2]: finishInstruction(test   edx, edx)
registers:
  eax          = v24507[32]
  edx          = v24529[32]
  eip          write-only = 0x080483c3<134513603>[32]
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v24529[32]) (extract[1] 0x00000001[32] 0x00000002[32] v24529[32]) (extract[1] 0x00000002[32] 0x00000003[32] v24529[32]) (extract[1] 0x00000003[32] 0x00000004[32] v24529[32]) (extract[1] 0x00000004[32] 0x00000005[32] v24529[32]) (extract[1] 0x00000005[32] 0x00000006[32] v24529[32]) (extract[1] 0x00000006[32] 0x00000007[32] v24529[32]) (extract[1] 0x00000007[32] 0x00000008[32] v24529[32])))
  af           write-only = v24573[1]<unspec>
  zf           write-only = (zerop[1] v24529[32])
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] v24529[32])
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] v24507[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v24529[32])
  addr=(add[32] v24507[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v24529[32])
  addr=(add[32] v24507[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v24529[32])
  addr=v24507[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v24529[32])
  addr=0x080496f3<134518515>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v24507[32])
  addr=0x080496f2<134518514>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v24507[32])
  addr=0x080496f1<134518513>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v24507[32])
  addr=0x080496f0<134518512>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v24507[32])

0x080483c3: jne    0x080483b0<<Insn>>
Symbolic@0x18f2ee0: startInstruction(0x080483c3: jne    0x080483b0<<Insn>>)
Symbolic@0x18f2ee0 insn@0x080483c3[3]: number_(32, 134513603) = 0x080483c3<134513603>[32]
Symbolic@0x18f2ee0 insn@0x080483c3[3]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080483c3[3]: add(0x080483c3<134513603>[32], 0x00000002[32]) = 0x080483c5<134513605>[32]
Symbolic@0x18f2ee0 insn@0x080483c3[3]: writeRegister(eip, 0x080483c5<134513605>[32])
Symbolic@0x18f2ee0 insn@0x080483c3[3]: undefined_(1) = v24578[1]
Symbolic@0x18f2ee0 insn@0x080483c3[3]: readRegister(zf, v24578[1]) = (zerop[1] v24529[32])
Symbolic@0x18f2ee0 insn@0x080483c3[3]: invert((zerop[1] v24529[32])) = (invert[1] (zerop[1] v24529[32]))
Symbolic@0x18f2ee0 insn@0x080483c3[3]: undefined_(32) = v24581[32]
Symbolic@0x18f2ee0 insn@0x080483c3[3]: readRegister(eip, v24581[32]) = 0x080483c5<134513605>[32]
Symbolic@0x18f2ee0 insn@0x080483c3[3]: number_(32, 134513584) = 0x080483b0<134513584>[32]
Symbolic@0x18f2ee0 insn@0x080483c3[3]: unsignedExtend(0x080483b0<134513584>[32], 32) = 0x080483b0<134513584>[32]
Symbolic@0x18f2ee0 insn@0x080483c3[3]: ite((invert[1] (zerop[1] v24529[32])), 0x080483b0<134513584>[32], 0x080483c5<134513605>[32]) = (ite[32] (invert[1] (zerop[1] v24529[32])) 0x080483b0<134513584>[32] 0x080483c5<134513605>[32])
Symbolic@0x18f2ee0 insn@0x080483c3[3]: writeRegister(eip, (ite[32] (invert[1] (zerop[1] v24529[32])) 0x080483b0<134513584>[32] 0x080483c5<134513605>[32]))
Symbolic@0x18f2ee0 insn@0x080483c3[3]: finishInstruction(jne    0x080483b0<<Insn>>)
registers:
  eax          = v24507[32]
  edx          = v24529[32]
  eip          = (ite[32] (invert[1] (zerop[1] v24529[32])) 0x080483b0<134513584>[32] 0x080483c5<134513605>[32])
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v24529[32]) (extract[1] 0x00000001[32] 0x00000002[32] v24529[32]) (extract[1] 0x00000002[32] 0x00000003[32] v24529[32]) (extract[1] 0x00000003[32] 0x00000004[32] v24529[32]) (extract[1] 0x00000004[32] 0x00000005[32] v24529[32]) (extract[1] 0x00000005[32] 0x00000006[32] v24529[32]) (extract[1] 0x00000006[32] 0x00000007[32] v24529[32]) (extract[1] 0x00000007[32] 0x00000008[32] v24529[32])))
  af           write-only = v24573[1]<unspec>
  zf           = (zerop[1] v24529[32])
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] v24529[32])
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] v24507[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v24529[32])
  addr=(add[32] v24507[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v24529[32])
  addr=(add[32] v24507[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v24529[32])
  addr=v24507[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v24529[32])
  addr=0x080496f3<134518515>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v24507[32])
  addr=0x080496f2<134518514>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v24507[32])
  addr=0x080496f1<134518513>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v24507[32])
  addr=0x080496f0<134518512>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v24507[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080483c5: mov    byte ds:[0x080496f4<.bss>], 0x01
Symbolic@0x18f2ee0: startInstruction(0x080483c5: mov    byte ds:[0x080496f4<.bss>], 0x01)
Symbolic@0x18f2ee0 insn@0x080483c5[0]: number_(32, 134513605) = 0x080483c5<134513605>[32]
Symbolic@0x18f2ee0 insn@0x080483c5[0]: number_(32, 7) = 0x00000007[32]
Symbolic@0x18f2ee0 insn@0x080483c5[0]: add(0x080483c5<134513605>[32], 0x00000007[32]) = 0x080483cc<134513612>[32]
Symbolic@0x18f2ee0 insn@0x080483c5[0]: writeRegister(eip, 0x080483cc<134513612>[32])
Symbolic@0x18f2ee0 insn@0x080483c5[0]: number_(8, 1) = 0x01[8]
Symbolic@0x18f2ee0 insn@0x080483c5[0]: number_(32, 134518516) = 0x080496f4<134518516>[32]
Symbolic@0x18f2ee0 insn@0x080483c5[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080483c5[0]: writeMemory(ds, 0x080496f4<134518516>[32], 0x01[8], true[1])
Symbolic@0x18f2ee0 insn@0x080483c5[0]: finishInstruction(mov    byte ds:[0x080496f4<.bss>], 0x01)
registers:
  eip          write-only = 0x080483cc<134513612>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=0x080496f4<134518516>[32] write-only value=0x01[8]

0x080483cc: leave  
Symbolic@0x18f2ee0: startInstruction(0x080483cc: leave)
Symbolic@0x18f2ee0 insn@0x080483cc[1]: number_(32, 134513612) = 0x080483cc<134513612>[32]
Symbolic@0x18f2ee0 insn@0x080483cc[1]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080483cc[1]: add(0x080483cc<134513612>[32], 0x00000001[32]) = 0x080483cd<134513613>[32]
Symbolic@0x18f2ee0 insn@0x080483cc[1]: writeRegister(eip, 0x080483cd<134513613>[32])
Symbolic@0x18f2ee0 insn@0x080483cc[1]: undefined_(32) = v25080[32]
Symbolic@0x18f2ee0 insn@0x080483cc[1]: readRegister(ebp, v25080[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x080483cc[1]: writeRegister(esp, ebp_0[32])
Symbolic@0x18f2ee0 insn@0x080483cc[1]: undefined_(32) = v25081[32]
Symbolic@0x18f2ee0 insn@0x080483cc[1]: readRegister(esp, v25081[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x080483cc[1]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080483cc[1]: add(ebp_0[32], 0x00000004[32]) = (add[32] ebp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x080483cc[1]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080483cc[1]: undefined_(32) = v25084[32]
Symbolic@0x18f2ee0 insn@0x080483cc[1]: readMemory(ss, ebp_0[32], v25084[32], true[1]) = v25084[32]
Symbolic@0x18f2ee0 insn@0x080483cc[1]: writeRegister(ebp, v25084[32])
Symbolic@0x18f2ee0 insn@0x080483cc[1]: writeRegister(esp, (add[32] ebp_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080483cc[1]: finishInstruction(leave)
registers:
  esp          = (add[32] ebp_0[32] 0x00000004[32])
  ebp          read-before-write = v25084[32]
  eip          write-only = 0x080483cd<134513613>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v25084[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v25084[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v25084[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v25084[32])
  addr=0x080496f4<134518516>[32] value=0x01[8]

0x080483cd: ret    
Symbolic@0x18f2ee0: startInstruction(0x080483cd: ret)
Symbolic@0x18f2ee0 insn@0x080483cd[2]: number_(32, 134513613) = 0x080483cd<134513613>[32]
Symbolic@0x18f2ee0 insn@0x080483cd[2]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080483cd[2]: add(0x080483cd<134513613>[32], 0x00000001[32]) = 0x080483ce<134513614>[32]
Symbolic@0x18f2ee0 insn@0x080483cd[2]: writeRegister(eip, 0x080483ce<134513614>[32])
Symbolic@0x18f2ee0 insn@0x080483cd[2]: undefined_(32) = v25106[32]
Symbolic@0x18f2ee0 insn@0x080483cd[2]: readRegister(esp, v25106[32]) = (add[32] ebp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x080483cd[2]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080483cd[2]: add((add[32] ebp_0[32] 0x00000004[32]), 0x00000004[32]) = (add[32] ebp_0[32] 0x00000008[32])
Symbolic@0x18f2ee0 insn@0x080483cd[2]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080483cd[2]: undefined_(32) = v25109[32]
Symbolic@0x18f2ee0 insn@0x080483cd[2]: readMemory(ss, (add[32] ebp_0[32] 0x00000004[32]), v25109[32], true[1]) = v25109[32]
Symbolic@0x18f2ee0 insn@0x080483cd[2]: filterReturnTarget(v25109[32]) = v25109[32]
Symbolic@0x18f2ee0 insn@0x080483cd[2]: writeRegister(eip, v25109[32])
Symbolic@0x18f2ee0 insn@0x080483cd[2]: writeRegister(esp, (add[32] ebp_0[32] 0x00000008[32]))
Symbolic@0x18f2ee0 insn@0x080483cd[2]: finishInstruction(ret)
registers:
  esp          = (add[32] ebp_0[32] 0x00000008[32])
  ebp          read-before-write = v25084[32]
  eip          write-only = v25109[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000007[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v25109[32])
  addr=(add[32] ebp_0[32] 0x00000006[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v25109[32])
  addr=(add[32] ebp_0[32] 0x00000005[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v25109[32])
  addr=(add[32] ebp_0[32] 0x00000004[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v25109[32])
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v25084[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v25084[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v25084[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v25084[32])
  addr=0x080496f4<134518516>[32] value=0x01[8]
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080483d0: push   ebp
Symbolic@0x18f2ee0: startInstruction(0x080483d0: push   ebp)
Symbolic@0x18f2ee0 insn@0x080483d0[0]: number_(32, 134513616) = 0x080483d0<134513616>[32]
Symbolic@0x18f2ee0 insn@0x080483d0[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080483d0[0]: add(0x080483d0<134513616>[32], 0x00000001[32]) = 0x080483d1<134513617>[32]
Symbolic@0x18f2ee0 insn@0x080483d0[0]: writeRegister(eip, 0x080483d1<134513617>[32])
Symbolic@0x18f2ee0 insn@0x080483d0[0]: undefined_(32) = v25615[32]
Symbolic@0x18f2ee0 insn@0x080483d0[0]: readRegister(ebp, v25615[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x080483d0[0]: undefined_(32) = v25616[32]
Symbolic@0x18f2ee0 insn@0x080483d0[0]: readRegister(esp, v25616[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x080483d0[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080483d0[0]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x080483d0[0]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080483d0[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080483d0[0]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), ebp_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x080483d0[0]: finishInstruction(push   ebp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080483d1<134513617>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080483d1: mov    ebp, esp
Symbolic@0x18f2ee0: startInstruction(0x080483d1: mov    ebp, esp)
Symbolic@0x18f2ee0 insn@0x080483d1[1]: number_(32, 134513617) = 0x080483d1<134513617>[32]
Symbolic@0x18f2ee0 insn@0x080483d1[1]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080483d1[1]: add(0x080483d1<134513617>[32], 0x00000002[32]) = 0x080483d3<134513619>[32]
Symbolic@0x18f2ee0 insn@0x080483d1[1]: writeRegister(eip, 0x080483d3<134513619>[32])
Symbolic@0x18f2ee0 insn@0x080483d1[1]: undefined_(32) = v25631[32]
Symbolic@0x18f2ee0 insn@0x080483d1[1]: readRegister(esp, v25631[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x080483d1[1]: writeRegister(ebp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080483d1[1]: finishInstruction(mov    ebp, esp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080483d3<134513619>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080483d3: sub    esp, 0x08
Symbolic@0x18f2ee0: startInstruction(0x080483d3: sub    esp, 0x08)
Symbolic@0x18f2ee0 insn@0x080483d3[2]: number_(32, 134513619) = 0x080483d3<134513619>[32]
Symbolic@0x18f2ee0 insn@0x080483d3[2]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x080483d3[2]: add(0x080483d3<134513619>[32], 0x00000003[32]) = 0x080483d6<134513622>[32]
Symbolic@0x18f2ee0 insn@0x080483d3[2]: writeRegister(eip, 0x080483d6<134513622>[32])
Symbolic@0x18f2ee0 insn@0x080483d3[2]: undefined_(32) = v25638[32]
Symbolic@0x18f2ee0 insn@0x080483d3[2]: readRegister(esp, v25638[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x080483d3[2]: number_(8, 8) = 0x08[8]
Symbolic@0x18f2ee0 insn@0x080483d3[2]: signExtend(0x08[8], 32) = 0x00000008[32]
Symbolic@0x18f2ee0 insn@0x080483d3[2]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080483d3[2]: invert(0x00000008[32]) = 0xfffffff7<4294967287,-9>[32]
Symbolic@0x18f2ee0 insn@0x080483d3[2]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x080483d3[2]: addWithCarries((add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0xfffffff7<4294967287,-9>[32], true[1]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x080483d3[2]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: extract((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: extract((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: equalToZero((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: writeRegister(zf, (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: invert((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: writeRegister(cf, (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080483d3[2]: finishInstruction(sub    esp, 0x08)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080483d6<134513622>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080483d6: mov    eax, dword ds:[0x080495f8<.jcr>]
Symbolic@0x18f2ee0: startInstruction(0x080483d6: mov    eax, dword ds:[0x080495f8<.jcr>])
Symbolic@0x18f2ee0 insn@0x080483d6[3]: number_(32, 134513622) = 0x080483d6<134513622>[32]
Symbolic@0x18f2ee0 insn@0x080483d6[3]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x080483d6[3]: add(0x080483d6<134513622>[32], 0x00000005[32]) = 0x080483db<134513627>[32]
Symbolic@0x18f2ee0 insn@0x080483d6[3]: writeRegister(eip, 0x080483db<134513627>[32])
Symbolic@0x18f2ee0 insn@0x080483d6[3]: number_(32, 134518264) = 0x080495f8<134518264>[32]
Symbolic@0x18f2ee0 insn@0x080483d6[3]: undefined_(32) = v25684[32]
Symbolic@0x18f2ee0 insn@0x080483d6[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080483d6[3]: readMemory(ds, 0x080495f8<134518264>[32], v25684[32], true[1]) = v25684[32]
Symbolic@0x18f2ee0 insn@0x080483d6[3]: writeRegister(eax, v25684[32])
Symbolic@0x18f2ee0 insn@0x080483d6[3]: finishInstruction(mov    eax, dword ds:[0x080495f8<.jcr>])
registers:
  eax          write-only = v25684[32]
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080483db<134513627>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=0x080495fb<134518267>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v25684[32])
  addr=0x080495fa<134518266>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v25684[32])
  addr=0x080495f9<134518265>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v25684[32])
  addr=0x080495f8<134518264>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v25684[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080483db: test   eax, eax
Symbolic@0x18f2ee0: startInstruction(0x080483db: test   eax, eax)
Symbolic@0x18f2ee0 insn@0x080483db[4]: number_(32, 134513627) = 0x080483db<134513627>[32]
Symbolic@0x18f2ee0 insn@0x080483db[4]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080483db[4]: add(0x080483db<134513627>[32], 0x00000002[32]) = 0x080483dd<134513629>[32]
Symbolic@0x18f2ee0 insn@0x080483db[4]: writeRegister(eip, 0x080483dd<134513629>[32])
Symbolic@0x18f2ee0 insn@0x080483db[4]: undefined_(32) = v25704[32]
Symbolic@0x18f2ee0 insn@0x080483db[4]: readRegister(eax, v25704[32]) = v25684[32]
Symbolic@0x18f2ee0 insn@0x080483db[4]: undefined_(32) = v25706[32]
Symbolic@0x18f2ee0 insn@0x080483db[4]: readRegister(eax, v25706[32]) = v25684[32]
Symbolic@0x18f2ee0 insn@0x080483db[4]: and_(v25684[32], v25684[32]) = v25684[32]
Symbolic@0x18f2ee0 insn@0x080483db[4]: extract(v25684[32], 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] v25684[32])
Symbolic@0x18f2ee0 insn@0x080483db[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] v25684[32]), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] v25684[32])
Symbolic@0x18f2ee0 insn@0x080483db[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] v25684[32]), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] v25684[32])
Symbolic@0x18f2ee0 insn@0x080483db[4]: xor_((extract[1] 0x00000000[32] 0x00000001[32] v25684[32]), (extract[1] 0x00000001[32] 0x00000002[32] v25684[32])) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v25684[32]) (extract[1] 0x00000001[32] 0x00000002[32] v25684[32]))
Symbolic@0x18f2ee0 insn@0x080483db[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] v25684[32]), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] v25684[32])
Symbolic@0x18f2ee0 insn@0x080483db[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] v25684[32]), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] v25684[32])
Symbolic@0x18f2ee0 insn@0x080483db[4]: xor_((extract[1] 0x00000002[32] 0x00000003[32] v25684[32]), (extract[1] 0x00000003[32] 0x00000004[32] v25684[32])) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] v25684[32]) (extract[1] 0x00000003[32] 0x00000004[32] v25684[32]))
Symbolic@0x18f2ee0 insn@0x080483db[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] v25684[32]), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] v25684[32])
Symbolic@0x18f2ee0 insn@0x080483db[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] v25684[32]), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] v25684[32])
Symbolic@0x18f2ee0 insn@0x080483db[4]: xor_((extract[1] 0x00000004[32] 0x00000005[32] v25684[32]), (extract[1] 0x00000005[32] 0x00000006[32] v25684[32])) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v25684[32]) (extract[1] 0x00000005[32] 0x00000006[32] v25684[32]))
Symbolic@0x18f2ee0 insn@0x080483db[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] v25684[32]), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] v25684[32])
Symbolic@0x18f2ee0 insn@0x080483db[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] v25684[32]), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] v25684[32])
Symbolic@0x18f2ee0 insn@0x080483db[4]: xor_((extract[1] 0x00000006[32] 0x00000007[32] v25684[32]), (extract[1] 0x00000007[32] 0x00000008[32] v25684[32])) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] v25684[32]) (extract[1] 0x00000007[32] 0x00000008[32] v25684[32]))
Symbolic@0x18f2ee0 insn@0x080483db[4]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v25684[32]) (extract[1] 0x00000001[32] 0x00000002[32] v25684[32])), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] v25684[32]) (extract[1] 0x00000003[32] 0x00000004[32] v25684[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v25684[32]) (extract[1] 0x00000001[32] 0x00000002[32] v25684[32]) (extract[1] 0x00000002[32] 0x00000003[32] v25684[32]) (extract[1] 0x00000003[32] 0x00000004[32] v25684[32]))
Symbolic@0x18f2ee0 insn@0x080483db[4]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v25684[32]) (extract[1] 0x00000005[32] 0x00000006[32] v25684[32])), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] v25684[32]) (extract[1] 0x00000007[32] 0x00000008[32] v25684[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v25684[32]) (extract[1] 0x00000005[32] 0x00000006[32] v25684[32]) (extract[1] 0x00000006[32] 0x00000007[32] v25684[32]) (extract[1] 0x00000007[32] 0x00000008[32] v25684[32]))
Symbolic@0x18f2ee0 insn@0x080483db[4]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v25684[32]) (extract[1] 0x00000001[32] 0x00000002[32] v25684[32]) (extract[1] 0x00000002[32] 0x00000003[32] v25684[32]) (extract[1] 0x00000003[32] 0x00000004[32] v25684[32])), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] v25684[32]) (extract[1] 0x00000005[32] 0x00000006[32] v25684[32]) (extract[1] 0x00000006[32] 0x00000007[32] v25684[32]) (extract[1] 0x00000007[32] 0x00000008[32] v25684[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v25684[32]) (extract[1] 0x00000001[32] 0x00000002[32] v25684[32]) (extract[1] 0x00000002[32] 0x00000003[32] v25684[32]) (extract[1] 0x00000003[32] 0x00000004[32] v25684[32]) (extract[1] 0x00000004[32] 0x00000005[32] v25684[32]) (extract[1] 0x00000005[32] 0x00000006[32] v25684[32]) (extract[1] 0x00000006[32] 0x00000007[32] v25684[32]) (extract[1] 0x00000007[32] 0x00000008[32] v25684[32]))
Symbolic@0x18f2ee0 insn@0x080483db[4]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v25684[32]) (extract[1] 0x00000001[32] 0x00000002[32] v25684[32]) (extract[1] 0x00000002[32] 0x00000003[32] v25684[32]) (extract[1] 0x00000003[32] 0x00000004[32] v25684[32]) (extract[1] 0x00000004[32] 0x00000005[32] v25684[32]) (extract[1] 0x00000005[32] 0x00000006[32] v25684[32]) (extract[1] 0x00000006[32] 0x00000007[32] v25684[32]) (extract[1] 0x00000007[32] 0x00000008[32] v25684[32]))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v25684[32]) (extract[1] 0x00000001[32] 0x00000002[32] v25684[32]) (extract[1] 0x00000002[32] 0x00000003[32] v25684[32]) (extract[1] 0x00000003[32] 0x00000004[32] v25684[32]) (extract[1] 0x00000004[32] 0x00000005[32] v25684[32]) (extract[1] 0x00000005[32] 0x00000006[32] v25684[32]) (extract[1] 0x00000006[32] 0x00000007[32] v25684[32]) (extract[1] 0x00000007[32] 0x00000008[32] v25684[32])))
Symbolic@0x18f2ee0 insn@0x080483db[4]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v25684[32]) (extract[1] 0x00000001[32] 0x00000002[32] v25684[32]) (extract[1] 0x00000002[32] 0x00000003[32] v25684[32]) (extract[1] 0x00000003[32] 0x00000004[32] v25684[32]) (extract[1] 0x00000004[32] 0x00000005[32] v25684[32]) (extract[1] 0x00000005[32] 0x00000006[32] v25684[32]) (extract[1] 0x00000006[32] 0x00000007[32] v25684[32]) (extract[1] 0x00000007[32] 0x00000008[32] v25684[32]))))
Symbolic@0x18f2ee0 insn@0x080483db[4]: extract(v25684[32], 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] v25684[32])
Symbolic@0x18f2ee0 insn@0x080483db[4]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] v25684[32]))
Symbolic@0x18f2ee0 insn@0x080483db[4]: equalToZero(v25684[32]) = (zerop[1] v25684[32])
Symbolic@0x18f2ee0 insn@0x080483db[4]: writeRegister(zf, (zerop[1] v25684[32]))
Symbolic@0x18f2ee0 insn@0x080483db[4]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080483db[4]: writeRegister(of, false[1])
Symbolic@0x18f2ee0 insn@0x080483db[4]: unspecified_(1) = v25732[1]<unspec>
Symbolic@0x18f2ee0 insn@0x080483db[4]: writeRegister(af, v25732[1]<unspec>)
Symbolic@0x18f2ee0 insn@0x080483db[4]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080483db[4]: writeRegister(cf, false[1])
Symbolic@0x18f2ee0 insn@0x080483db[4]: finishInstruction(test   eax, eax)
registers:
  eax          = v25684[32]
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080483dd<134513629>[32]
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v25684[32]) (extract[1] 0x00000001[32] 0x00000002[32] v25684[32]) (extract[1] 0x00000002[32] 0x00000003[32] v25684[32]) (extract[1] 0x00000003[32] 0x00000004[32] v25684[32]) (extract[1] 0x00000004[32] 0x00000005[32] v25684[32]) (extract[1] 0x00000005[32] 0x00000006[32] v25684[32]) (extract[1] 0x00000006[32] 0x00000007[32] v25684[32]) (extract[1] 0x00000007[32] 0x00000008[32] v25684[32])))
  af           write-only = v25732[1]<unspec>
  zf           write-only = (zerop[1] v25684[32])
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] v25684[32])
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=0x080495fb<134518267>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v25684[32])
  addr=0x080495fa<134518266>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v25684[32])
  addr=0x080495f9<134518265>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v25684[32])
  addr=0x080495f8<134518264>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v25684[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080483dd: je     0x08048400<<Insn>>
Symbolic@0x18f2ee0: startInstruction(0x080483dd: je     0x08048400<<Insn>>)
Symbolic@0x18f2ee0 insn@0x080483dd[5]: number_(32, 134513629) = 0x080483dd<134513629>[32]
Symbolic@0x18f2ee0 insn@0x080483dd[5]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080483dd[5]: add(0x080483dd<134513629>[32], 0x00000002[32]) = 0x080483df<134513631>[32]
Symbolic@0x18f2ee0 insn@0x080483dd[5]: writeRegister(eip, 0x080483df<134513631>[32])
Symbolic@0x18f2ee0 insn@0x080483dd[5]: undefined_(1) = v25739[1]
Symbolic@0x18f2ee0 insn@0x080483dd[5]: readRegister(zf, v25739[1]) = (zerop[1] v25684[32])
Symbolic@0x18f2ee0 insn@0x080483dd[5]: undefined_(32) = v25741[32]
Symbolic@0x18f2ee0 insn@0x080483dd[5]: readRegister(eip, v25741[32]) = 0x080483df<134513631>[32]
Symbolic@0x18f2ee0 insn@0x080483dd[5]: number_(32, 134513664) = 0x08048400<134513664>[32]
Symbolic@0x18f2ee0 insn@0x080483dd[5]: unsignedExtend(0x08048400<134513664>[32], 32) = 0x08048400<134513664>[32]
Symbolic@0x18f2ee0 insn@0x080483dd[5]: ite((zerop[1] v25684[32]), 0x08048400<134513664>[32], 0x080483df<134513631>[32]) = (ite[32] (zerop[1] v25684[32]) 0x08048400<134513664>[32] 0x080483df<134513631>[32])
Symbolic@0x18f2ee0 insn@0x080483dd[5]: writeRegister(eip, (ite[32] (zerop[1] v25684[32]) 0x08048400<134513664>[32] 0x080483df<134513631>[32]))
Symbolic@0x18f2ee0 insn@0x080483dd[5]: finishInstruction(je     0x08048400<<Insn>>)
registers:
  eax          = v25684[32]
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = (ite[32] (zerop[1] v25684[32]) 0x08048400<134513664>[32] 0x080483df<134513631>[32])
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] v25684[32]) (extract[1] 0x00000001[32] 0x00000002[32] v25684[32]) (extract[1] 0x00000002[32] 0x00000003[32] v25684[32]) (extract[1] 0x00000003[32] 0x00000004[32] v25684[32]) (extract[1] 0x00000004[32] 0x00000005[32] v25684[32]) (extract[1] 0x00000005[32] 0x00000006[32] v25684[32]) (extract[1] 0x00000006[32] 0x00000007[32] v25684[32]) (extract[1] 0x00000007[32] 0x00000008[32] v25684[32])))
  af           write-only = v25732[1]<unspec>
  zf           = (zerop[1] v25684[32])
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] v25684[32])
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=0x080495fb<134518267>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v25684[32])
  addr=0x080495fa<134518266>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v25684[32])
  addr=0x080495f9<134518265>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v25684[32])
  addr=0x080495f8<134518264>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v25684[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080483df: mov    eax, 0x00000000
Symbolic@0x18f2ee0: startInstruction(0x080483df: mov    eax, 0x00000000)
Symbolic@0x18f2ee0 insn@0x080483df[0]: number_(32, 134513631) = 0x080483df<134513631>[32]
Symbolic@0x18f2ee0 insn@0x080483df[0]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x080483df[0]: add(0x080483df<134513631>[32], 0x00000005[32]) = 0x080483e4<134513636>[32]
Symbolic@0x18f2ee0 insn@0x080483df[0]: writeRegister(eip, 0x080483e4<134513636>[32])
Symbolic@0x18f2ee0 insn@0x080483df[0]: number_(32, 0) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x080483df[0]: writeRegister(eax, 0x00000000[32])
Symbolic@0x18f2ee0 insn@0x080483df[0]: finishInstruction(mov    eax, 0x00000000)
registers:
  eax          write-only = 0x00000000[32]
  eip          write-only = 0x080483e4<134513636>[32]
  fpstatus_top = 0x0[3]
memory:

0x080483e4: test   eax, eax
Symbolic@0x18f2ee0: startInstruction(0x080483e4: test   eax, eax)
Symbolic@0x18f2ee0 insn@0x080483e4[1]: number_(32, 134513636) = 0x080483e4<134513636>[32]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: add(0x080483e4<134513636>[32], 0x00000002[32]) = 0x080483e6<134513638>[32]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: writeRegister(eip, 0x080483e6<134513638>[32])
Symbolic@0x18f2ee0 insn@0x080483e4[1]: undefined_(32) = v26238[32]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: readRegister(eax, v26238[32]) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: undefined_(32) = v26240[32]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: readRegister(eax, v26240[32]) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: and_(0x00000000[32], 0x00000000[32]) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: extract(0x00000000[32], 0, 8) = 0x00[8]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: extract(0x00[8], 1, 2) = false[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: extract(0x00[8], 0, 1) = false[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: extract(0x00[8], 3, 4) = false[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: extract(0x00[8], 2, 3) = false[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: extract(0x00[8], 5, 6) = false[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: extract(0x00[8], 4, 5) = false[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: extract(0x00[8], 7, 8) = false[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: extract(0x00[8], 6, 7) = false[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: writeRegister(pf, true[1])
Symbolic@0x18f2ee0 insn@0x080483e4[1]: extract(0x00000000[32], 31, 32) = false[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: writeRegister(sf, false[1])
Symbolic@0x18f2ee0 insn@0x080483e4[1]: equalToZero(0x00000000[32]) = true[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: writeRegister(zf, true[1])
Symbolic@0x18f2ee0 insn@0x080483e4[1]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: writeRegister(of, false[1])
Symbolic@0x18f2ee0 insn@0x080483e4[1]: unspecified_(1) = v26255[1]<unspec>
Symbolic@0x18f2ee0 insn@0x080483e4[1]: writeRegister(af, v26255[1]<unspec>)
Symbolic@0x18f2ee0 insn@0x080483e4[1]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080483e4[1]: writeRegister(cf, false[1])
Symbolic@0x18f2ee0 insn@0x080483e4[1]: finishInstruction(test   eax, eax)
registers:
  eax          = 0x00000000[32]
  eip          write-only = 0x080483e6<134513638>[32]
  cf           write-only = false[1]
  pf           write-only = true[1]
  af           write-only = v26255[1]<unspec>
  zf           write-only = true[1]
  sf           write-only = false[1]
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:

0x080483e6: je     0x08048400<<Insn>>
Symbolic@0x18f2ee0: startInstruction(0x080483e6: je     0x08048400<<Insn>>)
Symbolic@0x18f2ee0 insn@0x080483e6[2]: number_(32, 134513638) = 0x080483e6<134513638>[32]
Symbolic@0x18f2ee0 insn@0x080483e6[2]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080483e6[2]: add(0x080483e6<134513638>[32], 0x00000002[32]) = 0x080483e8<134513640>[32]
Symbolic@0x18f2ee0 insn@0x080483e6[2]: writeRegister(eip, 0x080483e8<134513640>[32])
Symbolic@0x18f2ee0 insn@0x080483e6[2]: undefined_(1) = v26260[1]
Symbolic@0x18f2ee0 insn@0x080483e6[2]: readRegister(zf, v26260[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x080483e6[2]: undefined_(32) = v26262[32]
Symbolic@0x18f2ee0 insn@0x080483e6[2]: readRegister(eip, v26262[32]) = 0x080483e8<134513640>[32]
Symbolic@0x18f2ee0 insn@0x080483e6[2]: number_(32, 134513664) = 0x08048400<134513664>[32]
Symbolic@0x18f2ee0 insn@0x080483e6[2]: unsignedExtend(0x08048400<134513664>[32], 32) = 0x08048400<134513664>[32]
Symbolic@0x18f2ee0 insn@0x080483e6[2]: ite(true[1], 0x08048400<134513664>[32], 0x080483e8<134513640>[32]) = 0x08048400<134513664>[32]
Symbolic@0x18f2ee0 insn@0x080483e6[2]: writeRegister(eip, 0x08048400<134513664>[32])
Symbolic@0x18f2ee0 insn@0x080483e6[2]: finishInstruction(je     0x08048400<<Insn>>)
registers:
  eax          = 0x00000000[32]
  eip          = 0x08048400<134513664>[32]
  cf           write-only = false[1]
  pf           write-only = true[1]
  af           write-only = v26255[1]<unspec>
  zf           = true[1]
  sf           write-only = false[1]
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:

0x08048400: mov    esp, ebp
Symbolic@0x18f2ee0: startInstruction(0x08048400: mov    esp, ebp)
Symbolic@0x18f2ee0 insn@0x08048400[3]: number_(32, 134513664) = 0x08048400<134513664>[32]
Symbolic@0x18f2ee0 insn@0x08048400[3]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x08048400[3]: add(0x08048400<134513664>[32], 0x00000002[32]) = 0x08048402<134513666>[32]
Symbolic@0x18f2ee0 insn@0x08048400[3]: writeRegister(eip, 0x08048402<134513666>[32])
Symbolic@0x18f2ee0 insn@0x08048400[3]: undefined_(32) = v26270[32]
Symbolic@0x18f2ee0 insn@0x08048400[3]: readRegister(ebp, v26270[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x08048400[3]: writeRegister(esp, ebp_0[32])
Symbolic@0x18f2ee0 insn@0x08048400[3]: finishInstruction(mov    esp, ebp)
registers:
  eax          = 0x00000000[32]
  esp          write-only = ebp_0[32]
  eip          = 0x08048402<134513666>[32]
  cf           write-only = false[1]
  pf           write-only = true[1]
  af           write-only = v26255[1]<unspec>
  zf           = true[1]
  sf           write-only = false[1]
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:

0x08048402: pop    ebp
Symbolic@0x18f2ee0: startInstruction(0x08048402: pop    ebp)
Symbolic@0x18f2ee0 insn@0x08048402[4]: number_(32, 134513666) = 0x08048402<134513666>[32]
Symbolic@0x18f2ee0 insn@0x08048402[4]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048402[4]: add(0x08048402<134513666>[32], 0x00000001[32]) = 0x08048403<134513667>[32]
Symbolic@0x18f2ee0 insn@0x08048402[4]: writeRegister(eip, 0x08048403<134513667>[32])
Symbolic@0x18f2ee0 insn@0x08048402[4]: undefined_(32) = v26275[32]
Symbolic@0x18f2ee0 insn@0x08048402[4]: readRegister(esp, v26275[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x08048402[4]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x08048402[4]: add(ebp_0[32], 0x00000004[32]) = (add[32] ebp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x08048402[4]: writeRegister(esp, (add[32] ebp_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x08048402[4]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048402[4]: undefined_(32) = v26279[32]
Symbolic@0x18f2ee0 insn@0x08048402[4]: readMemory(ss, ebp_0[32], v26279[32], true[1]) = v26279[32]
Symbolic@0x18f2ee0 insn@0x08048402[4]: writeRegister(ebp, v26279[32])
Symbolic@0x18f2ee0 insn@0x08048402[4]: finishInstruction(pop    ebp)
registers:
  eax          = 0x00000000[32]
  esp          = (add[32] ebp_0[32] 0x00000004[32])
  ebp          read-before-write = v26279[32]
  eip          = 0x08048403<134513667>[32]
  cf           write-only = false[1]
  pf           write-only = true[1]
  af           write-only = v26255[1]<unspec>
  zf           = true[1]
  sf           write-only = false[1]
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v26279[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v26279[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v26279[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v26279[32])

0x08048403: ret    
Symbolic@0x18f2ee0: startInstruction(0x08048403: ret)
Symbolic@0x18f2ee0 insn@0x08048403[5]: number_(32, 134513667) = 0x08048403<134513667>[32]
Symbolic@0x18f2ee0 insn@0x08048403[5]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048403[5]: add(0x08048403<134513667>[32], 0x00000001[32]) = 0x08048404<134513668>[32]
Symbolic@0x18f2ee0 insn@0x08048403[5]: writeRegister(eip, 0x08048404<134513668>[32])
Symbolic@0x18f2ee0 insn@0x08048403[5]: undefined_(32) = v26300[32]
Symbolic@0x18f2ee0 insn@0x08048403[5]: readRegister(esp, v26300[32]) = (add[32] ebp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x08048403[5]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x08048403[5]: add((add[32] ebp_0[32] 0x00000004[32]), 0x00000004[32]) = (add[32] ebp_0[32] 0x00000008[32])
Symbolic@0x18f2ee0 insn@0x08048403[5]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048403[5]: undefined_(32) = v26303[32]
Symbolic@0x18f2ee0 insn@0x08048403[5]: readMemory(ss, (add[32] ebp_0[32] 0x00000004[32]), v26303[32], true[1]) = v26303[32]
Symbolic@0x18f2ee0 insn@0x08048403[5]: filterReturnTarget(v26303[32]) = v26303[32]
Symbolic@0x18f2ee0 insn@0x08048403[5]: writeRegister(eip, v26303[32])
Symbolic@0x18f2ee0 insn@0x08048403[5]: writeRegister(esp, (add[32] ebp_0[32] 0x00000008[32]))
Symbolic@0x18f2ee0 insn@0x08048403[5]: finishInstruction(ret)
registers:
  eax          = 0x00000000[32]
  esp          = (add[32] ebp_0[32] 0x00000008[32])
  ebp          read-before-write = v26279[32]
  eip          = v26303[32]
  cf           write-only = false[1]
  pf           write-only = true[1]
  af           write-only = v26255[1]<unspec>
  zf           = true[1]
  sf           write-only = false[1]
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000007[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v26303[32])
  addr=(add[32] ebp_0[32] 0x00000006[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v26303[32])
  addr=(add[32] ebp_0[32] 0x00000005[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v26303[32])
  addr=(add[32] ebp_0[32] 0x00000004[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v26303[32])
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v26279[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v26279[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v26279[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v26279[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080483e8: mov    dword ss:[esp], 0x080495f8<.jcr>
Symbolic@0x18f2ee0: startInstruction(0x080483e8: mov    dword ss:[esp], 0x080495f8<.jcr>)
Symbolic@0x18f2ee0 insn@0x080483e8[0]: number_(32, 134513640) = 0x080483e8<134513640>[32]
Symbolic@0x18f2ee0 insn@0x080483e8[0]: number_(32, 7) = 0x00000007[32]
Symbolic@0x18f2ee0 insn@0x080483e8[0]: add(0x080483e8<134513640>[32], 0x00000007[32]) = 0x080483ef<134513647>[32]
Symbolic@0x18f2ee0 insn@0x080483e8[0]: writeRegister(eip, 0x080483ef<134513647>[32])
Symbolic@0x18f2ee0 insn@0x080483e8[0]: number_(32, 134518264) = 0x080495f8<134518264>[32]
Symbolic@0x18f2ee0 insn@0x080483e8[0]: undefined_(32) = v26809[32]
Symbolic@0x18f2ee0 insn@0x080483e8[0]: readRegister(esp, v26809[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x080483e8[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080483e8[0]: writeMemory(ss, esp_0[32], 0x080495f8<134518264>[32], true[1])
Symbolic@0x18f2ee0 insn@0x080483e8[0]: finishInstruction(mov    dword ss:[esp], 0x080495f8<.jcr>)
registers:
  eip          write-only = 0x080483ef<134513647>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0x00000002[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0x00000001[32]) write-only value=0x95<-107>[8]
  addr=esp_0[32] write-only value=0xf8<-8>[8]

0x080483ef: call   0x00000000
Symbolic@0x18f2ee0: startInstruction(0x080483ef: call   0x00000000)
Symbolic@0x18f2ee0 insn@0x080483ef[1]: number_(32, 134513647) = 0x080483ef<134513647>[32]
Symbolic@0x18f2ee0 insn@0x080483ef[1]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x080483ef[1]: add(0x080483ef<134513647>[32], 0x00000005[32]) = 0x080483f4<134513652>[32]
Symbolic@0x18f2ee0 insn@0x080483ef[1]: writeRegister(eip, 0x080483f4<134513652>[32])
Symbolic@0x18f2ee0 insn@0x080483ef[1]: number_(32, 0) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x080483ef[1]: unsignedExtend(0x00000000[32], 32) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x080483ef[1]: undefined_(32) = v26823[32]
Symbolic@0x18f2ee0 insn@0x080483ef[1]: readRegister(esp, v26823[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x080483ef[1]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080483ef[1]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x080483ef[1]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080483ef[1]: undefined_(32) = v26826[32]
Symbolic@0x18f2ee0 insn@0x080483ef[1]: readRegister(eip, v26826[32]) = 0x080483f4<134513652>[32]
Symbolic@0x18f2ee0 insn@0x080483ef[1]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0x080483f4<134513652>[32], true[1])
Symbolic@0x18f2ee0 insn@0x080483ef[1]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080483ef[1]: filterCallTarget(0x00000000[32]) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x080483ef[1]: writeRegister(eip, 0x00000000[32])
Symbolic@0x18f2ee0 insn@0x080483ef[1]: finishInstruction(call   0x00000000)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = 0x00000000[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=0x83<-125>[8]
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=0xf4<-12>[8]
  addr=(add[32] esp_0[32] 0x00000003[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0x00000002[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0x00000001[32]) write-only value=0x95<-107>[8]
  addr=esp_0[32] write-only value=0xf8<-8>[8]
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080483f4: lea    esi, [esi + 0x00000000]
Symbolic@0x18f2ee0: startInstruction(0x080483f4: lea    esi, [esi + 0x00000000])
Symbolic@0x18f2ee0 insn@0x080483f4[0]: number_(32, 134513652) = 0x080483f4<134513652>[32]
Symbolic@0x18f2ee0 insn@0x080483f4[0]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x080483f4[0]: add(0x080483f4<134513652>[32], 0x00000006[32]) = 0x080483fa<134513658>[32]
Symbolic@0x18f2ee0 insn@0x080483f4[0]: writeRegister(eip, 0x080483fa<134513658>[32])
Symbolic@0x18f2ee0 insn@0x080483f4[0]: undefined_(32) = v27324[32]
Symbolic@0x18f2ee0 insn@0x080483f4[0]: readRegister(esi, v27324[32]) = esi_0[32]
Symbolic@0x18f2ee0 insn@0x080483f4[0]: number_(32, 0) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x080483f4[0]: add(esi_0[32], 0x00000000[32]) = esi_0[32]
Symbolic@0x18f2ee0 insn@0x080483f4[0]: unsignedExtend(esi_0[32], 32) = esi_0[32]
Symbolic@0x18f2ee0 insn@0x080483f4[0]: writeRegister(esi, esi_0[32])
Symbolic@0x18f2ee0 insn@0x080483f4[0]: finishInstruction(lea    esi, [esi + 0x00000000])
registers:
  eip          write-only = 0x080483fa<134513658>[32]
  fpstatus_top = 0x0[3]
memory:

0x080483fa: lea    edi, [edi + 0x00000000]
Symbolic@0x18f2ee0: startInstruction(0x080483fa: lea    edi, [edi + 0x00000000])
Symbolic@0x18f2ee0 insn@0x080483fa[1]: number_(32, 134513658) = 0x080483fa<134513658>[32]
Symbolic@0x18f2ee0 insn@0x080483fa[1]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x080483fa[1]: add(0x080483fa<134513658>[32], 0x00000006[32]) = 0x08048400<134513664>[32]
Symbolic@0x18f2ee0 insn@0x080483fa[1]: writeRegister(eip, 0x08048400<134513664>[32])
Symbolic@0x18f2ee0 insn@0x080483fa[1]: undefined_(32) = v27332[32]
Symbolic@0x18f2ee0 insn@0x080483fa[1]: readRegister(edi, v27332[32]) = edi_0[32]
Symbolic@0x18f2ee0 insn@0x080483fa[1]: number_(32, 0) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x080483fa[1]: add(edi_0[32], 0x00000000[32]) = edi_0[32]
Symbolic@0x18f2ee0 insn@0x080483fa[1]: unsignedExtend(edi_0[32], 32) = edi_0[32]
Symbolic@0x18f2ee0 insn@0x080483fa[1]: writeRegister(edi, edi_0[32])
Symbolic@0x18f2ee0 insn@0x080483fa[1]: finishInstruction(lea    edi, [edi + 0x00000000])
registers:
  eip          write-only = 0x08048400<134513664>[32]
  fpstatus_top = 0x0[3]
memory:
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048410: push   ebp
Symbolic@0x18f2ee0: startInstruction(0x08048410: push   ebp)
Symbolic@0x18f2ee0 insn@0x08048410[0]: number_(32, 134513680) = 0x08048410<134513680>[32]
Symbolic@0x18f2ee0 insn@0x08048410[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048410[0]: add(0x08048410<134513680>[32], 0x00000001[32]) = 0x08048411<134513681>[32]
Symbolic@0x18f2ee0 insn@0x08048410[0]: writeRegister(eip, 0x08048411<134513681>[32])
Symbolic@0x18f2ee0 insn@0x08048410[0]: undefined_(32) = v27824[32]
Symbolic@0x18f2ee0 insn@0x08048410[0]: readRegister(ebp, v27824[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x08048410[0]: undefined_(32) = v27825[32]
Symbolic@0x18f2ee0 insn@0x08048410[0]: readRegister(esp, v27825[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x08048410[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048410[0]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048410[0]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048410[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048410[0]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), ebp_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048410[0]: finishInstruction(push   ebp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048411<134513681>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048411: mov    edx, 0x08048480<handler>
Symbolic@0x18f2ee0: startInstruction(0x08048411: mov    edx, 0x08048480<handler>)
Symbolic@0x18f2ee0 insn@0x08048411[1]: number_(32, 134513681) = 0x08048411<134513681>[32]
Symbolic@0x18f2ee0 insn@0x08048411[1]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x08048411[1]: add(0x08048411<134513681>[32], 0x00000005[32]) = 0x08048416<134513686>[32]
Symbolic@0x18f2ee0 insn@0x08048411[1]: writeRegister(eip, 0x08048416<134513686>[32])
Symbolic@0x18f2ee0 insn@0x08048411[1]: number_(32, 134513792) = 0x08048480<134513792>[32]
Symbolic@0x18f2ee0 insn@0x08048411[1]: writeRegister(edx, 0x08048480<134513792>[32])
Symbolic@0x18f2ee0 insn@0x08048411[1]: finishInstruction(mov    edx, 0x08048480<handler>)
registers:
  edx          write-only = 0x08048480<134513792>[32]
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048416<134513686>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048416: mov    ebp, esp
Symbolic@0x18f2ee0: startInstruction(0x08048416: mov    ebp, esp)
Symbolic@0x18f2ee0 insn@0x08048416[2]: number_(32, 134513686) = 0x08048416<134513686>[32]
Symbolic@0x18f2ee0 insn@0x08048416[2]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x08048416[2]: add(0x08048416<134513686>[32], 0x00000002[32]) = 0x08048418<134513688>[32]
Symbolic@0x18f2ee0 insn@0x08048416[2]: writeRegister(eip, 0x08048418<134513688>[32])
Symbolic@0x18f2ee0 insn@0x08048416[2]: undefined_(32) = v27844[32]
Symbolic@0x18f2ee0 insn@0x08048416[2]: readRegister(esp, v27844[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048416[2]: writeRegister(ebp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048416[2]: finishInstruction(mov    ebp, esp)
registers:
  edx          write-only = 0x08048480<134513792>[32]
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048418<134513688>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048418: sub    esp, 0x08
Symbolic@0x18f2ee0: startInstruction(0x08048418: sub    esp, 0x08)
Symbolic@0x18f2ee0 insn@0x08048418[3]: number_(32, 134513688) = 0x08048418<134513688>[32]
Symbolic@0x18f2ee0 insn@0x08048418[3]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x08048418[3]: add(0x08048418<134513688>[32], 0x00000003[32]) = 0x0804841b<134513691>[32]
Symbolic@0x18f2ee0 insn@0x08048418[3]: writeRegister(eip, 0x0804841b<134513691>[32])
Symbolic@0x18f2ee0 insn@0x08048418[3]: undefined_(32) = v27851[32]
Symbolic@0x18f2ee0 insn@0x08048418[3]: readRegister(esp, v27851[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048418[3]: number_(8, 8) = 0x08[8]
Symbolic@0x18f2ee0 insn@0x08048418[3]: signExtend(0x08[8], 32) = 0x00000008[32]
Symbolic@0x18f2ee0 insn@0x08048418[3]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048418[3]: invert(0x00000008[32]) = 0xfffffff7<4294967287,-9>[32]
Symbolic@0x18f2ee0 insn@0x08048418[3]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048418[3]: addWithCarries((add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0xfffffff7<4294967287,-9>[32], true[1]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x08048418[3]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048418[3]: extract((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048418[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048418[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048418[3]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048418[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048418[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048418[3]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048418[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048418[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048418[3]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048418[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048418[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048418[3]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048418[3]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048418[3]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048418[3]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048418[3]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
Symbolic@0x18f2ee0 insn@0x08048418[3]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))))
Symbolic@0x18f2ee0 insn@0x08048418[3]: extract((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048418[3]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048418[3]: equalToZero((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048418[3]: writeRegister(zf, (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048418[3]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048418[3]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048418[3]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048418[3]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x08048418[3]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x08048418[3]: invert((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x08048418[3]: writeRegister(cf, (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x08048418[3]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x08048418[3]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x08048418[3]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048418[3]: finishInstruction(sub    esp, 0x08)
registers:
  edx          write-only = 0x08048480<134513792>[32]
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x0804841b<134513691>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x0804841b: and    esp, 0xf0<-16>
Symbolic@0x18f2ee0: startInstruction(0x0804841b: and    esp, 0xf0<-16>)
Symbolic@0x18f2ee0 insn@0x0804841b[4]: number_(32, 134513691) = 0x0804841b<134513691>[32]
Symbolic@0x18f2ee0 insn@0x0804841b[4]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x0804841b[4]: add(0x0804841b<134513691>[32], 0x00000003[32]) = 0x0804841e<134513694>[32]
Symbolic@0x18f2ee0 insn@0x0804841b[4]: writeRegister(eip, 0x0804841e<134513694>[32])
Symbolic@0x18f2ee0 insn@0x0804841b[4]: undefined_(32) = v27897[32]
Symbolic@0x18f2ee0 insn@0x0804841b[4]: readRegister(esp, v27897[32]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x0804841b[4]: number_(8, 18446744073709551600) = 0xf0<-16>[8]
Symbolic@0x18f2ee0 insn@0x0804841b[4]: signExtend(0xf0<-16>[8], 32) = 0xfffffff0<4294967280,-16>[32]
Symbolic@0x18f2ee0 insn@0x0804841b[4]: and_((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0xfffffff0<4294967280,-16>[32]) = (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])
Symbolic@0x18f2ee0 insn@0x0804841b[4]: extract((bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])))))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: extract((bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: equalToZero((bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) = (zerop[1] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: writeRegister(zf, (zerop[1] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: writeRegister(esp, (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
Symbolic@0x18f2ee0 insn@0x0804841b[4]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x0804841b[4]: writeRegister(of, false[1])
Symbolic@0x18f2ee0 insn@0x0804841b[4]: unspecified_(1) = v27925[1]<unspec>
Symbolic@0x18f2ee0 insn@0x0804841b[4]: writeRegister(af, v27925[1]<unspec>)
Symbolic@0x18f2ee0 insn@0x0804841b[4]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x0804841b[4]: writeRegister(cf, false[1])
Symbolic@0x18f2ee0 insn@0x0804841b[4]: finishInstruction(and    esp, 0xf0<-16>)
registers:
  edx          write-only = 0x08048480<134513792>[32]
  esp          read-before-write = (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x0804841e<134513694>[32]
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))))
  af           write-only = v27925[1]<unspec>
  zf           write-only = (zerop[1] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x0804841e: mov    dword ss:[esp + 0x04], edx
Symbolic@0x18f2ee0: startInstruction(0x0804841e: mov    dword ss:[esp + 0x04], edx)
Symbolic@0x18f2ee0 insn@0x0804841e[5]: number_(32, 134513694) = 0x0804841e<134513694>[32]
Symbolic@0x18f2ee0 insn@0x0804841e[5]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x0804841e[5]: add(0x0804841e<134513694>[32], 0x00000004[32]) = 0x08048422<134513698>[32]
Symbolic@0x18f2ee0 insn@0x0804841e[5]: writeRegister(eip, 0x08048422<134513698>[32])
Symbolic@0x18f2ee0 insn@0x0804841e[5]: undefined_(32) = v27932[32]
Symbolic@0x18f2ee0 insn@0x0804841e[5]: readRegister(edx, v27932[32]) = 0x08048480<134513792>[32]
Symbolic@0x18f2ee0 insn@0x0804841e[5]: undefined_(32) = v27934[32]
Symbolic@0x18f2ee0 insn@0x0804841e[5]: readRegister(esp, v27934[32]) = (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])
Symbolic@0x18f2ee0 insn@0x0804841e[5]: number_(8, 4) = 0x04[8]
Symbolic@0x18f2ee0 insn@0x0804841e[5]: signExtend(0x04[8], 32) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x0804841e[5]: add((bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]), 0x00000004[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x0804841e[5]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x0804841e[5]: writeMemory(ss, (add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000004[32]), 0x08048480<134513792>[32], true[1])
Symbolic@0x18f2ee0 insn@0x0804841e[5]: finishInstruction(mov    dword ss:[esp + 0x04], edx)
registers:
  edx          = 0x08048480<134513792>[32]
  esp          read-before-write = (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048422<134513698>[32]
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))))
  af           write-only = v27925[1]<unspec>
  zf           write-only = (zerop[1] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000007[32]) write-only value=0x08[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000006[32]) write-only value=0x04[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000005[32]) write-only value=0x84<-124>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000004[32]) write-only value=0x80<-128>[8]
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048422: mov    dword ss:[esp], 0x0000000a
Symbolic@0x18f2ee0: startInstruction(0x08048422: mov    dword ss:[esp], 0x0000000a)
Symbolic@0x18f2ee0 insn@0x08048422[6]: number_(32, 134513698) = 0x08048422<134513698>[32]
Symbolic@0x18f2ee0 insn@0x08048422[6]: number_(32, 7) = 0x00000007[32]
Symbolic@0x18f2ee0 insn@0x08048422[6]: add(0x08048422<134513698>[32], 0x00000007[32]) = 0x08048429<134513705>[32]
Symbolic@0x18f2ee0 insn@0x08048422[6]: writeRegister(eip, 0x08048429<134513705>[32])
Symbolic@0x18f2ee0 insn@0x08048422[6]: number_(32, 10) = 0x0000000a[32]
Symbolic@0x18f2ee0 insn@0x08048422[6]: undefined_(32) = v27950[32]
Symbolic@0x18f2ee0 insn@0x08048422[6]: readRegister(esp, v27950[32]) = (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])
Symbolic@0x18f2ee0 insn@0x08048422[6]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048422[6]: writeMemory(ss, (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]), 0x0000000a[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048422[6]: finishInstruction(mov    dword ss:[esp], 0x0000000a)
registers:
  edx          = 0x08048480<134513792>[32]
  esp          read-before-write = (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048429<134513705>[32]
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))))
  af           write-only = v27925[1]<unspec>
  zf           write-only = (zerop[1] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000003[32]) write-only value=0x00[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000002[32]) write-only value=0x00[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000001[32]) write-only value=0x00[8]
  addr=(bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) write-only value=0x0a[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000007[32]) write-only value=0x08[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000006[32]) write-only value=0x04[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000005[32]) write-only value=0x84<-124>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000004[32]) write-only value=0x80<-128>[8]
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048429: call   0x080482f0<signal@plt>
Symbolic@0x18f2ee0: startInstruction(0x08048429: call   0x080482f0<signal@plt>)
Symbolic@0x18f2ee0 insn@0x08048429[7]: number_(32, 134513705) = 0x08048429<134513705>[32]
Symbolic@0x18f2ee0 insn@0x08048429[7]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x08048429[7]: add(0x08048429<134513705>[32], 0x00000005[32]) = 0x0804842e<134513710>[32]
Symbolic@0x18f2ee0 insn@0x08048429[7]: writeRegister(eip, 0x0804842e<134513710>[32])
Symbolic@0x18f2ee0 insn@0x08048429[7]: number_(32, 134513392) = 0x080482f0<134513392>[32]
Symbolic@0x18f2ee0 insn@0x08048429[7]: unsignedExtend(0x080482f0<134513392>[32], 32) = 0x080482f0<134513392>[32]
Symbolic@0x18f2ee0 insn@0x08048429[7]: undefined_(32) = v27965[32]
Symbolic@0x18f2ee0 insn@0x08048429[7]: readRegister(esp, v27965[32]) = (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])
Symbolic@0x18f2ee0 insn@0x08048429[7]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048429[7]: add((bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048429[7]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048429[7]: undefined_(32) = v27968[32]
Symbolic@0x18f2ee0 insn@0x08048429[7]: readRegister(eip, v27968[32]) = 0x0804842e<134513710>[32]
Symbolic@0x18f2ee0 insn@0x08048429[7]: writeMemory(ss, (add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]), 0x0804842e<134513710>[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048429[7]: writeRegister(esp, (add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048429[7]: filterCallTarget(0x080482f0<134513392>[32]) = 0x080482f0<134513392>[32]
Symbolic@0x18f2ee0 insn@0x08048429[7]: writeRegister(eip, 0x080482f0<134513392>[32])
Symbolic@0x18f2ee0 insn@0x08048429[7]: finishInstruction(call   0x080482f0<signal@plt>)
registers:
  edx          = 0x08048480<134513792>[32]
  esp          read-before-write = (add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = 0x080482f0<134513392>[32]
  cf           write-only = false[1]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))))
  af           write-only = v27925[1]<unspec>
  zf           write-only = (zerop[1] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]))
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0xffffffff<4294967295,-1>[32]) write-only value=0x08[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0xfffffffe<4294967294,-2>[32]) write-only value=0x04[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0xfffffffd<4294967293,-3>[32]) write-only value=0x84<-124>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0xfffffffc<4294967292,-4>[32]) write-only value=0x2e[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000003[32]) write-only value=0x00[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000002[32]) write-only value=0x00[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000001[32]) write-only value=0x00[8]
  addr=(bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) write-only value=0x0a[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000007[32]) write-only value=0x08[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000006[32]) write-only value=0x04[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000005[32]) write-only value=0x84<-124>[8]
  addr=(add[32] (bv-and[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) 0xfffffff0<4294967280>[32]) 0x00000004[32]) write-only value=0x80<-128>[8]
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x0804842e: mov    esp, ebp
Symbolic@0x18f2ee0: startInstruction(0x0804842e: mov    esp, ebp)
Symbolic@0x18f2ee0 insn@0x0804842e[0]: number_(32, 134513710) = 0x0804842e<134513710>[32]
Symbolic@0x18f2ee0 insn@0x0804842e[0]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x0804842e[0]: add(0x0804842e<134513710>[32], 0x00000002[32]) = 0x08048430<134513712>[32]
Symbolic@0x18f2ee0 insn@0x0804842e[0]: writeRegister(eip, 0x08048430<134513712>[32])
Symbolic@0x18f2ee0 insn@0x0804842e[0]: undefined_(32) = v28466[32]
Symbolic@0x18f2ee0 insn@0x0804842e[0]: readRegister(ebp, v28466[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x0804842e[0]: writeRegister(esp, ebp_0[32])
Symbolic@0x18f2ee0 insn@0x0804842e[0]: finishInstruction(mov    esp, ebp)
registers:
  esp          write-only = ebp_0[32]
  eip          write-only = 0x08048430<134513712>[32]
  fpstatus_top = 0x0[3]
memory:

0x08048430: xor    eax, eax
Symbolic@0x18f2ee0: startInstruction(0x08048430: xor    eax, eax)
Symbolic@0x18f2ee0 insn@0x08048430[1]: number_(32, 134513712) = 0x08048430<134513712>[32]
Symbolic@0x18f2ee0 insn@0x08048430[1]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x08048430[1]: add(0x08048430<134513712>[32], 0x00000002[32]) = 0x08048432<134513714>[32]
Symbolic@0x18f2ee0 insn@0x08048430[1]: writeRegister(eip, 0x08048432<134513714>[32])
Symbolic@0x18f2ee0 insn@0x08048430[1]: number_(32, 0) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x08048430[1]: extract(0x00000000[32], 0, 8) = 0x00[8]
Symbolic@0x18f2ee0 insn@0x08048430[1]: extract(0x00[8], 1, 2) = false[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: extract(0x00[8], 0, 1) = false[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: extract(0x00[8], 3, 4) = false[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: extract(0x00[8], 2, 3) = false[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: extract(0x00[8], 5, 6) = false[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: extract(0x00[8], 4, 5) = false[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: extract(0x00[8], 7, 8) = false[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: extract(0x00[8], 6, 7) = false[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: writeRegister(pf, true[1])
Symbolic@0x18f2ee0 insn@0x08048430[1]: extract(0x00000000[32], 31, 32) = false[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: writeRegister(sf, false[1])
Symbolic@0x18f2ee0 insn@0x08048430[1]: equalToZero(0x00000000[32]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: writeRegister(zf, true[1])
Symbolic@0x18f2ee0 insn@0x08048430[1]: writeRegister(eax, 0x00000000[32])
Symbolic@0x18f2ee0 insn@0x08048430[1]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: writeRegister(of, false[1])
Symbolic@0x18f2ee0 insn@0x08048430[1]: unspecified_(1) = v28483[1]<unspec>
Symbolic@0x18f2ee0 insn@0x08048430[1]: writeRegister(af, v28483[1]<unspec>)
Symbolic@0x18f2ee0 insn@0x08048430[1]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048430[1]: writeRegister(cf, false[1])
Symbolic@0x18f2ee0 insn@0x08048430[1]: finishInstruction(xor    eax, eax)
registers:
  eax          write-only = 0x00000000[32]
  esp          write-only = ebp_0[32]
  eip          write-only = 0x08048432<134513714>[32]
  cf           write-only = false[1]
  pf           write-only = true[1]
  af           write-only = v28483[1]<unspec>
  zf           write-only = true[1]
  sf           write-only = false[1]
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:

0x08048432: pop    ebp
Symbolic@0x18f2ee0: startInstruction(0x08048432: pop    ebp)
Symbolic@0x18f2ee0 insn@0x08048432[2]: number_(32, 134513714) = 0x08048432<134513714>[32]
Symbolic@0x18f2ee0 insn@0x08048432[2]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048432[2]: add(0x08048432<134513714>[32], 0x00000001[32]) = 0x08048433<134513715>[32]
Symbolic@0x18f2ee0 insn@0x08048432[2]: writeRegister(eip, 0x08048433<134513715>[32])
Symbolic@0x18f2ee0 insn@0x08048432[2]: undefined_(32) = v28488[32]
Symbolic@0x18f2ee0 insn@0x08048432[2]: readRegister(esp, v28488[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x08048432[2]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x08048432[2]: add(ebp_0[32], 0x00000004[32]) = (add[32] ebp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x08048432[2]: writeRegister(esp, (add[32] ebp_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x08048432[2]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048432[2]: undefined_(32) = v28492[32]
Symbolic@0x18f2ee0 insn@0x08048432[2]: readMemory(ss, ebp_0[32], v28492[32], true[1]) = v28492[32]
Symbolic@0x18f2ee0 insn@0x08048432[2]: writeRegister(ebp, v28492[32])
Symbolic@0x18f2ee0 insn@0x08048432[2]: finishInstruction(pop    ebp)
registers:
  eax          write-only = 0x00000000[32]
  esp          = (add[32] ebp_0[32] 0x00000004[32])
  ebp          read-before-write = v28492[32]
  eip          write-only = 0x08048433<134513715>[32]
  cf           write-only = false[1]
  pf           write-only = true[1]
  af           write-only = v28483[1]<unspec>
  zf           write-only = true[1]
  sf           write-only = false[1]
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v28492[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v28492[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v28492[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v28492[32])

0x08048433: ret    
Symbolic@0x18f2ee0: startInstruction(0x08048433: ret)
Symbolic@0x18f2ee0 insn@0x08048433[3]: number_(32, 134513715) = 0x08048433<134513715>[32]
Symbolic@0x18f2ee0 insn@0x08048433[3]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048433[3]: add(0x08048433<134513715>[32], 0x00000001[32]) = 0x08048434<134513716>[32]
Symbolic@0x18f2ee0 insn@0x08048433[3]: writeRegister(eip, 0x08048434<134513716>[32])
Symbolic@0x18f2ee0 insn@0x08048433[3]: undefined_(32) = v28513[32]
Symbolic@0x18f2ee0 insn@0x08048433[3]: readRegister(esp, v28513[32]) = (add[32] ebp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x08048433[3]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x08048433[3]: add((add[32] ebp_0[32] 0x00000004[32]), 0x00000004[32]) = (add[32] ebp_0[32] 0x00000008[32])
Symbolic@0x18f2ee0 insn@0x08048433[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048433[3]: undefined_(32) = v28516[32]
Symbolic@0x18f2ee0 insn@0x08048433[3]: readMemory(ss, (add[32] ebp_0[32] 0x00000004[32]), v28516[32], true[1]) = v28516[32]
Symbolic@0x18f2ee0 insn@0x08048433[3]: filterReturnTarget(v28516[32]) = v28516[32]
Symbolic@0x18f2ee0 insn@0x08048433[3]: writeRegister(eip, v28516[32])
Symbolic@0x18f2ee0 insn@0x08048433[3]: writeRegister(esp, (add[32] ebp_0[32] 0x00000008[32]))
Symbolic@0x18f2ee0 insn@0x08048433[3]: finishInstruction(ret)
registers:
  eax          write-only = 0x00000000[32]
  esp          = (add[32] ebp_0[32] 0x00000008[32])
  ebp          read-before-write = v28492[32]
  eip          write-only = v28516[32]
  cf           write-only = false[1]
  pf           write-only = true[1]
  af           write-only = v28483[1]<unspec>
  zf           write-only = true[1]
  sf           write-only = false[1]
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000007[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v28516[32])
  addr=(add[32] ebp_0[32] 0x00000006[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v28516[32])
  addr=(add[32] ebp_0[32] 0x00000005[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v28516[32])
  addr=(add[32] ebp_0[32] 0x00000004[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v28516[32])
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v28492[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v28492[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v28492[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v28492[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048440: push   ebp
Symbolic@0x18f2ee0: startInstruction(0x08048440: push   ebp)
Symbolic@0x18f2ee0 insn@0x08048440[0]: number_(32, 134513728) = 0x08048440<134513728>[32]
Symbolic@0x18f2ee0 insn@0x08048440[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048440[0]: add(0x08048440<134513728>[32], 0x00000001[32]) = 0x08048441<134513729>[32]
Symbolic@0x18f2ee0 insn@0x08048440[0]: writeRegister(eip, 0x08048441<134513729>[32])
Symbolic@0x18f2ee0 insn@0x08048440[0]: undefined_(32) = v29022[32]
Symbolic@0x18f2ee0 insn@0x08048440[0]: readRegister(ebp, v29022[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x08048440[0]: undefined_(32) = v29023[32]
Symbolic@0x18f2ee0 insn@0x08048440[0]: readRegister(esp, v29023[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x08048440[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048440[0]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048440[0]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048440[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048440[0]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), ebp_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048440[0]: finishInstruction(push   ebp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048441<134513729>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048441: mov    ebp, esp
Symbolic@0x18f2ee0: startInstruction(0x08048441: mov    ebp, esp)
Symbolic@0x18f2ee0 insn@0x08048441[1]: number_(32, 134513729) = 0x08048441<134513729>[32]
Symbolic@0x18f2ee0 insn@0x08048441[1]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x08048441[1]: add(0x08048441<134513729>[32], 0x00000002[32]) = 0x08048443<134513731>[32]
Symbolic@0x18f2ee0 insn@0x08048441[1]: writeRegister(eip, 0x08048443<134513731>[32])
Symbolic@0x18f2ee0 insn@0x08048441[1]: undefined_(32) = v29038[32]
Symbolic@0x18f2ee0 insn@0x08048441[1]: readRegister(esp, v29038[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048441[1]: writeRegister(ebp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048441[1]: finishInstruction(mov    ebp, esp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048443<134513731>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048443: sub    esp, 0x08
Symbolic@0x18f2ee0: startInstruction(0x08048443: sub    esp, 0x08)
Symbolic@0x18f2ee0 insn@0x08048443[2]: number_(32, 134513731) = 0x08048443<134513731>[32]
Symbolic@0x18f2ee0 insn@0x08048443[2]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x08048443[2]: add(0x08048443<134513731>[32], 0x00000003[32]) = 0x08048446<134513734>[32]
Symbolic@0x18f2ee0 insn@0x08048443[2]: writeRegister(eip, 0x08048446<134513734>[32])
Symbolic@0x18f2ee0 insn@0x08048443[2]: undefined_(32) = v29045[32]
Symbolic@0x18f2ee0 insn@0x08048443[2]: readRegister(esp, v29045[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048443[2]: number_(8, 8) = 0x08[8]
Symbolic@0x18f2ee0 insn@0x08048443[2]: signExtend(0x08[8], 32) = 0x00000008[32]
Symbolic@0x18f2ee0 insn@0x08048443[2]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048443[2]: invert(0x00000008[32]) = 0xfffffff7<4294967287,-9>[32]
Symbolic@0x18f2ee0 insn@0x08048443[2]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048443[2]: addWithCarries((add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0xfffffff7<4294967287,-9>[32], true[1]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x08048443[2]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048443[2]: extract((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048443[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048443[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048443[2]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048443[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048443[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048443[2]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048443[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048443[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048443[2]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048443[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048443[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048443[2]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048443[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048443[2]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048443[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048443[2]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
Symbolic@0x18f2ee0 insn@0x08048443[2]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))))
Symbolic@0x18f2ee0 insn@0x08048443[2]: extract((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048443[2]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048443[2]: equalToZero((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048443[2]: writeRegister(zf, (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048443[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048443[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048443[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048443[2]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x08048443[2]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x08048443[2]: invert((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x08048443[2]: writeRegister(cf, (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x08048443[2]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x08048443[2]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x08048443[2]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048443[2]: finishInstruction(sub    esp, 0x08)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048446<134513734>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048446: mov    dword ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
Symbolic@0x18f2ee0: startInstruction(0x08048446: mov    dword ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>)
Symbolic@0x18f2ee0 insn@0x08048446[3]: number_(32, 134513734) = 0x08048446<134513734>[32]
Symbolic@0x18f2ee0 insn@0x08048446[3]: number_(32, 7) = 0x00000007[32]
Symbolic@0x18f2ee0 insn@0x08048446[3]: add(0x08048446<134513734>[32], 0x00000007[32]) = 0x0804844d<134513741>[32]
Symbolic@0x18f2ee0 insn@0x08048446[3]: writeRegister(eip, 0x0804844d<134513741>[32])
Symbolic@0x18f2ee0 insn@0x08048446[3]: number_(32, 134514132) = 0x080485d4<134514132>[32]
Symbolic@0x18f2ee0 insn@0x08048446[3]: undefined_(32) = v29091[32]
Symbolic@0x18f2ee0 insn@0x08048446[3]: readRegister(esp, v29091[32]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x08048446[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048446[3]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0x080485d4<134514132>[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048446[3]: finishInstruction(mov    dword ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x0804844d<134513741>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32]) write-only value=0x85<-123>[8]
  addr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) write-only value=0xd4<-44>[8]
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x0804844d: call   0x08048300<puts@plt>
Symbolic@0x18f2ee0: startInstruction(0x0804844d: call   0x08048300<puts@plt>)
Symbolic@0x18f2ee0 insn@0x0804844d[4]: number_(32, 134513741) = 0x0804844d<134513741>[32]
Symbolic@0x18f2ee0 insn@0x0804844d[4]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x0804844d[4]: add(0x0804844d<134513741>[32], 0x00000005[32]) = 0x08048452<134513746>[32]
Symbolic@0x18f2ee0 insn@0x0804844d[4]: writeRegister(eip, 0x08048452<134513746>[32])
Symbolic@0x18f2ee0 insn@0x0804844d[4]: number_(32, 134513408) = 0x08048300<134513408>[32]
Symbolic@0x18f2ee0 insn@0x0804844d[4]: unsignedExtend(0x08048300<134513408>[32], 32) = 0x08048300<134513408>[32]
Symbolic@0x18f2ee0 insn@0x0804844d[4]: undefined_(32) = v29106[32]
Symbolic@0x18f2ee0 insn@0x0804844d[4]: readRegister(esp, v29106[32]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x0804844d[4]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x0804844d[4]: add((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])
Symbolic@0x18f2ee0 insn@0x0804844d[4]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x0804844d[4]: undefined_(32) = v29109[32]
Symbolic@0x18f2ee0 insn@0x0804844d[4]: readRegister(eip, v29109[32]) = 0x08048452<134513746>[32]
Symbolic@0x18f2ee0 insn@0x0804844d[4]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]), 0x08048452<134513746>[32], true[1])
Symbolic@0x18f2ee0 insn@0x0804844d[4]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]))
Symbolic@0x18f2ee0 insn@0x0804844d[4]: filterCallTarget(0x08048300<134513408>[32]) = 0x08048300<134513408>[32]
Symbolic@0x18f2ee0 insn@0x0804844d[4]: writeRegister(eip, 0x08048300<134513408>[32])
Symbolic@0x18f2ee0 insn@0x0804844d[4]: finishInstruction(call   0x08048300<puts@plt>)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = 0x08048300<134513408>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32]) write-only value=0x84<-124>[8]
  addr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]) write-only value=0x52[8]
  addr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32]) write-only value=0x85<-123>[8]
  addr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) write-only value=0xd4<-44>[8]
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048452: mov    esp, ebp
Symbolic@0x18f2ee0: startInstruction(0x08048452: mov    esp, ebp)
Symbolic@0x18f2ee0 insn@0x08048452[0]: number_(32, 134513746) = 0x08048452<134513746>[32]
Symbolic@0x18f2ee0 insn@0x08048452[0]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x08048452[0]: add(0x08048452<134513746>[32], 0x00000002[32]) = 0x08048454<134513748>[32]
Symbolic@0x18f2ee0 insn@0x08048452[0]: writeRegister(eip, 0x08048454<134513748>[32])
Symbolic@0x18f2ee0 insn@0x08048452[0]: undefined_(32) = v29607[32]
Symbolic@0x18f2ee0 insn@0x08048452[0]: readRegister(ebp, v29607[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x08048452[0]: writeRegister(esp, ebp_0[32])
Symbolic@0x18f2ee0 insn@0x08048452[0]: finishInstruction(mov    esp, ebp)
registers:
  esp          write-only = ebp_0[32]
  eip          write-only = 0x08048454<134513748>[32]
  fpstatus_top = 0x0[3]
memory:

0x08048454: pop    ebp
Symbolic@0x18f2ee0: startInstruction(0x08048454: pop    ebp)
Symbolic@0x18f2ee0 insn@0x08048454[1]: number_(32, 134513748) = 0x08048454<134513748>[32]
Symbolic@0x18f2ee0 insn@0x08048454[1]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048454[1]: add(0x08048454<134513748>[32], 0x00000001[32]) = 0x08048455<134513749>[32]
Symbolic@0x18f2ee0 insn@0x08048454[1]: writeRegister(eip, 0x08048455<134513749>[32])
Symbolic@0x18f2ee0 insn@0x08048454[1]: undefined_(32) = v29612[32]
Symbolic@0x18f2ee0 insn@0x08048454[1]: readRegister(esp, v29612[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x08048454[1]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x08048454[1]: add(ebp_0[32], 0x00000004[32]) = (add[32] ebp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x08048454[1]: writeRegister(esp, (add[32] ebp_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x08048454[1]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048454[1]: undefined_(32) = v29616[32]
Symbolic@0x18f2ee0 insn@0x08048454[1]: readMemory(ss, ebp_0[32], v29616[32], true[1]) = v29616[32]
Symbolic@0x18f2ee0 insn@0x08048454[1]: writeRegister(ebp, v29616[32])
Symbolic@0x18f2ee0 insn@0x08048454[1]: finishInstruction(pop    ebp)
registers:
  esp          = (add[32] ebp_0[32] 0x00000004[32])
  ebp          read-before-write = v29616[32]
  eip          write-only = 0x08048455<134513749>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v29616[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v29616[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v29616[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v29616[32])

0x08048455: ret    
Symbolic@0x18f2ee0: startInstruction(0x08048455: ret)
Symbolic@0x18f2ee0 insn@0x08048455[2]: number_(32, 134513749) = 0x08048455<134513749>[32]
Symbolic@0x18f2ee0 insn@0x08048455[2]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048455[2]: add(0x08048455<134513749>[32], 0x00000001[32]) = 0x08048456<134513750>[32]
Symbolic@0x18f2ee0 insn@0x08048455[2]: writeRegister(eip, 0x08048456<134513750>[32])
Symbolic@0x18f2ee0 insn@0x08048455[2]: undefined_(32) = v29637[32]
Symbolic@0x18f2ee0 insn@0x08048455[2]: readRegister(esp, v29637[32]) = (add[32] ebp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x08048455[2]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x08048455[2]: add((add[32] ebp_0[32] 0x00000004[32]), 0x00000004[32]) = (add[32] ebp_0[32] 0x00000008[32])
Symbolic@0x18f2ee0 insn@0x08048455[2]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048455[2]: undefined_(32) = v29640[32]
Symbolic@0x18f2ee0 insn@0x08048455[2]: readMemory(ss, (add[32] ebp_0[32] 0x00000004[32]), v29640[32], true[1]) = v29640[32]
Symbolic@0x18f2ee0 insn@0x08048455[2]: filterReturnTarget(v29640[32]) = v29640[32]
Symbolic@0x18f2ee0 insn@0x08048455[2]: writeRegister(eip, v29640[32])
Symbolic@0x18f2ee0 insn@0x08048455[2]: writeRegister(esp, (add[32] ebp_0[32] 0x00000008[32]))
Symbolic@0x18f2ee0 insn@0x08048455[2]: finishInstruction(ret)
registers:
  esp          = (add[32] ebp_0[32] 0x00000008[32])
  ebp          read-before-write = v29616[32]
  eip          write-only = v29640[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000007[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v29640[32])
  addr=(add[32] ebp_0[32] 0x00000006[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v29640[32])
  addr=(add[32] ebp_0[32] 0x00000005[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v29640[32])
  addr=(add[32] ebp_0[32] 0x00000004[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v29640[32])
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v29616[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v29616[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v29616[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v29616[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048460: push   ebp
Symbolic@0x18f2ee0: startInstruction(0x08048460: push   ebp)
Symbolic@0x18f2ee0 insn@0x08048460[0]: number_(32, 134513760) = 0x08048460<134513760>[32]
Symbolic@0x18f2ee0 insn@0x08048460[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048460[0]: add(0x08048460<134513760>[32], 0x00000001[32]) = 0x08048461<134513761>[32]
Symbolic@0x18f2ee0 insn@0x08048460[0]: writeRegister(eip, 0x08048461<134513761>[32])
Symbolic@0x18f2ee0 insn@0x08048460[0]: undefined_(32) = v30146[32]
Symbolic@0x18f2ee0 insn@0x08048460[0]: readRegister(ebp, v30146[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x08048460[0]: undefined_(32) = v30147[32]
Symbolic@0x18f2ee0 insn@0x08048460[0]: readRegister(esp, v30147[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x08048460[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048460[0]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048460[0]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048460[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048460[0]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), ebp_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048460[0]: finishInstruction(push   ebp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048461<134513761>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048461: mov    ebp, esp
Symbolic@0x18f2ee0: startInstruction(0x08048461: mov    ebp, esp)
Symbolic@0x18f2ee0 insn@0x08048461[1]: number_(32, 134513761) = 0x08048461<134513761>[32]
Symbolic@0x18f2ee0 insn@0x08048461[1]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x08048461[1]: add(0x08048461<134513761>[32], 0x00000002[32]) = 0x08048463<134513763>[32]
Symbolic@0x18f2ee0 insn@0x08048461[1]: writeRegister(eip, 0x08048463<134513763>[32])
Symbolic@0x18f2ee0 insn@0x08048461[1]: undefined_(32) = v30162[32]
Symbolic@0x18f2ee0 insn@0x08048461[1]: readRegister(esp, v30162[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048461[1]: writeRegister(ebp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048461[1]: finishInstruction(mov    ebp, esp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048463<134513763>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048463: sub    esp, 0x08
Symbolic@0x18f2ee0: startInstruction(0x08048463: sub    esp, 0x08)
Symbolic@0x18f2ee0 insn@0x08048463[2]: number_(32, 134513763) = 0x08048463<134513763>[32]
Symbolic@0x18f2ee0 insn@0x08048463[2]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x08048463[2]: add(0x08048463<134513763>[32], 0x00000003[32]) = 0x08048466<134513766>[32]
Symbolic@0x18f2ee0 insn@0x08048463[2]: writeRegister(eip, 0x08048466<134513766>[32])
Symbolic@0x18f2ee0 insn@0x08048463[2]: undefined_(32) = v30169[32]
Symbolic@0x18f2ee0 insn@0x08048463[2]: readRegister(esp, v30169[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048463[2]: number_(8, 8) = 0x08[8]
Symbolic@0x18f2ee0 insn@0x08048463[2]: signExtend(0x08[8], 32) = 0x00000008[32]
Symbolic@0x18f2ee0 insn@0x08048463[2]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048463[2]: invert(0x00000008[32]) = 0xfffffff7<4294967287,-9>[32]
Symbolic@0x18f2ee0 insn@0x08048463[2]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048463[2]: addWithCarries((add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0xfffffff7<4294967287,-9>[32], true[1]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x08048463[2]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048463[2]: extract((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048463[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048463[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048463[2]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048463[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048463[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048463[2]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048463[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048463[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048463[2]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048463[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048463[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048463[2]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048463[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048463[2]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048463[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048463[2]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
Symbolic@0x18f2ee0 insn@0x08048463[2]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))))
Symbolic@0x18f2ee0 insn@0x08048463[2]: extract((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048463[2]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048463[2]: equalToZero((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048463[2]: writeRegister(zf, (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048463[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048463[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048463[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048463[2]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x08048463[2]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x08048463[2]: invert((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x08048463[2]: writeRegister(cf, (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x08048463[2]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x08048463[2]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x08048463[2]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048463[2]: finishInstruction(sub    esp, 0x08)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048466<134513766>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048466: mov    dword ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
Symbolic@0x18f2ee0: startInstruction(0x08048466: mov    dword ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>)
Symbolic@0x18f2ee0 insn@0x08048466[3]: number_(32, 134513766) = 0x08048466<134513766>[32]
Symbolic@0x18f2ee0 insn@0x08048466[3]: number_(32, 7) = 0x00000007[32]
Symbolic@0x18f2ee0 insn@0x08048466[3]: add(0x08048466<134513766>[32], 0x00000007[32]) = 0x0804846d<134513773>[32]
Symbolic@0x18f2ee0 insn@0x08048466[3]: writeRegister(eip, 0x0804846d<134513773>[32])
Symbolic@0x18f2ee0 insn@0x08048466[3]: number_(32, 134514132) = 0x080485d4<134514132>[32]
Symbolic@0x18f2ee0 insn@0x08048466[3]: undefined_(32) = v30215[32]
Symbolic@0x18f2ee0 insn@0x08048466[3]: readRegister(esp, v30215[32]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x08048466[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048466[3]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0x080485d4<134514132>[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048466[3]: finishInstruction(mov    dword ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x0804846d<134513773>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32]) write-only value=0x85<-123>[8]
  addr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) write-only value=0xd4<-44>[8]
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x0804846d: call   0x08048300<puts@plt>
Symbolic@0x18f2ee0: startInstruction(0x0804846d: call   0x08048300<puts@plt>)
Symbolic@0x18f2ee0 insn@0x0804846d[4]: number_(32, 134513773) = 0x0804846d<134513773>[32]
Symbolic@0x18f2ee0 insn@0x0804846d[4]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x0804846d[4]: add(0x0804846d<134513773>[32], 0x00000005[32]) = 0x08048472<134513778>[32]
Symbolic@0x18f2ee0 insn@0x0804846d[4]: writeRegister(eip, 0x08048472<134513778>[32])
Symbolic@0x18f2ee0 insn@0x0804846d[4]: number_(32, 134513408) = 0x08048300<134513408>[32]
Symbolic@0x18f2ee0 insn@0x0804846d[4]: unsignedExtend(0x08048300<134513408>[32], 32) = 0x08048300<134513408>[32]
Symbolic@0x18f2ee0 insn@0x0804846d[4]: undefined_(32) = v30230[32]
Symbolic@0x18f2ee0 insn@0x0804846d[4]: readRegister(esp, v30230[32]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x0804846d[4]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x0804846d[4]: add((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])
Symbolic@0x18f2ee0 insn@0x0804846d[4]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x0804846d[4]: undefined_(32) = v30233[32]
Symbolic@0x18f2ee0 insn@0x0804846d[4]: readRegister(eip, v30233[32]) = 0x08048472<134513778>[32]
Symbolic@0x18f2ee0 insn@0x0804846d[4]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]), 0x08048472<134513778>[32], true[1])
Symbolic@0x18f2ee0 insn@0x0804846d[4]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]))
Symbolic@0x18f2ee0 insn@0x0804846d[4]: filterCallTarget(0x08048300<134513408>[32]) = 0x08048300<134513408>[32]
Symbolic@0x18f2ee0 insn@0x0804846d[4]: writeRegister(eip, 0x08048300<134513408>[32])
Symbolic@0x18f2ee0 insn@0x0804846d[4]: finishInstruction(call   0x08048300<puts@plt>)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = 0x08048300<134513408>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32]) write-only value=0x84<-124>[8]
  addr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]) write-only value=0x72[8]
  addr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32]) write-only value=0x85<-123>[8]
  addr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) write-only value=0xd4<-44>[8]
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048472: mov    dword ss:[esp], 0x00000000
Symbolic@0x18f2ee0: startInstruction(0x08048472: mov    dword ss:[esp], 0x00000000)
Symbolic@0x18f2ee0 insn@0x08048472[0]: number_(32, 134513778) = 0x08048472<134513778>[32]
Symbolic@0x18f2ee0 insn@0x08048472[0]: number_(32, 7) = 0x00000007[32]
Symbolic@0x18f2ee0 insn@0x08048472[0]: add(0x08048472<134513778>[32], 0x00000007[32]) = 0x08048479<134513785>[32]
Symbolic@0x18f2ee0 insn@0x08048472[0]: writeRegister(eip, 0x08048479<134513785>[32])
Symbolic@0x18f2ee0 insn@0x08048472[0]: number_(32, 0) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x08048472[0]: undefined_(32) = v30731[32]
Symbolic@0x18f2ee0 insn@0x08048472[0]: readRegister(esp, v30731[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x08048472[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048472[0]: writeMemory(ss, esp_0[32], 0x00000000[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048472[0]: finishInstruction(mov    dword ss:[esp], 0x00000000)
registers:
  eip          write-only = 0x08048479<134513785>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) write-only value=0x00[8]
  addr=(add[32] esp_0[32] 0x00000002[32]) write-only value=0x00[8]
  addr=(add[32] esp_0[32] 0x00000001[32]) write-only value=0x00[8]
  addr=esp_0[32] write-only value=0x00[8]

0x08048479: call   0x08048320<_exit@plt>
Symbolic@0x18f2ee0: startInstruction(0x08048479: call   0x08048320<_exit@plt>)
Symbolic@0x18f2ee0 insn@0x08048479[1]: number_(32, 134513785) = 0x08048479<134513785>[32]
Symbolic@0x18f2ee0 insn@0x08048479[1]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x08048479[1]: add(0x08048479<134513785>[32], 0x00000005[32]) = 0x0804847e<134513790>[32]
Symbolic@0x18f2ee0 insn@0x08048479[1]: writeRegister(eip, 0x0804847e<134513790>[32])
Symbolic@0x18f2ee0 insn@0x08048479[1]: number_(32, 134513440) = 0x08048320<134513440>[32]
Symbolic@0x18f2ee0 insn@0x08048479[1]: unsignedExtend(0x08048320<134513440>[32], 32) = 0x08048320<134513440>[32]
Symbolic@0x18f2ee0 insn@0x08048479[1]: undefined_(32) = v30745[32]
Symbolic@0x18f2ee0 insn@0x08048479[1]: readRegister(esp, v30745[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x08048479[1]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048479[1]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048479[1]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048479[1]: undefined_(32) = v30748[32]
Symbolic@0x18f2ee0 insn@0x08048479[1]: readRegister(eip, v30748[32]) = 0x0804847e<134513790>[32]
Symbolic@0x18f2ee0 insn@0x08048479[1]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0x0804847e<134513790>[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048479[1]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048479[1]: filterCallTarget(0x08048320<134513440>[32]) = 0x08048320<134513440>[32]
Symbolic@0x18f2ee0 insn@0x08048479[1]: writeRegister(eip, 0x08048320<134513440>[32])
Symbolic@0x18f2ee0 insn@0x08048479[1]: finishInstruction(call   0x08048320<_exit@plt>)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = 0x08048320<134513440>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=0x84<-124>[8]
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=0x7e[8]
  addr=(add[32] esp_0[32] 0x00000003[32]) write-only value=0x00[8]
  addr=(add[32] esp_0[32] 0x00000002[32]) write-only value=0x00[8]
  addr=(add[32] esp_0[32] 0x00000001[32]) write-only value=0x00[8]
  addr=esp_0[32] write-only value=0x00[8]
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048480: push   ebp
Symbolic@0x18f2ee0: startInstruction(0x08048480: push   ebp)
Symbolic@0x18f2ee0 insn@0x08048480[0]: number_(32, 134513792) = 0x08048480<134513792>[32]
Symbolic@0x18f2ee0 insn@0x08048480[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048480[0]: add(0x08048480<134513792>[32], 0x00000001[32]) = 0x08048481<134513793>[32]
Symbolic@0x18f2ee0 insn@0x08048480[0]: writeRegister(eip, 0x08048481<134513793>[32])
Symbolic@0x18f2ee0 insn@0x08048480[0]: undefined_(32) = v31246[32]
Symbolic@0x18f2ee0 insn@0x08048480[0]: readRegister(ebp, v31246[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x08048480[0]: undefined_(32) = v31247[32]
Symbolic@0x18f2ee0 insn@0x08048480[0]: readRegister(esp, v31247[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x08048480[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048480[0]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048480[0]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048480[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048480[0]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), ebp_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048480[0]: finishInstruction(push   ebp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048481<134513793>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048481: mov    ebp, esp
Symbolic@0x18f2ee0: startInstruction(0x08048481: mov    ebp, esp)
Symbolic@0x18f2ee0 insn@0x08048481[1]: number_(32, 134513793) = 0x08048481<134513793>[32]
Symbolic@0x18f2ee0 insn@0x08048481[1]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x08048481[1]: add(0x08048481<134513793>[32], 0x00000002[32]) = 0x08048483<134513795>[32]
Symbolic@0x18f2ee0 insn@0x08048481[1]: writeRegister(eip, 0x08048483<134513795>[32])
Symbolic@0x18f2ee0 insn@0x08048481[1]: undefined_(32) = v31262[32]
Symbolic@0x18f2ee0 insn@0x08048481[1]: readRegister(esp, v31262[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048481[1]: writeRegister(ebp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048481[1]: finishInstruction(mov    ebp, esp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048483<134513795>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048483: sub    esp, 0x08
Symbolic@0x18f2ee0: startInstruction(0x08048483: sub    esp, 0x08)
Symbolic@0x18f2ee0 insn@0x08048483[2]: number_(32, 134513795) = 0x08048483<134513795>[32]
Symbolic@0x18f2ee0 insn@0x08048483[2]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x08048483[2]: add(0x08048483<134513795>[32], 0x00000003[32]) = 0x08048486<134513798>[32]
Symbolic@0x18f2ee0 insn@0x08048483[2]: writeRegister(eip, 0x08048486<134513798>[32])
Symbolic@0x18f2ee0 insn@0x08048483[2]: undefined_(32) = v31269[32]
Symbolic@0x18f2ee0 insn@0x08048483[2]: readRegister(esp, v31269[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048483[2]: number_(8, 8) = 0x08[8]
Symbolic@0x18f2ee0 insn@0x08048483[2]: signExtend(0x08[8], 32) = 0x00000008[32]
Symbolic@0x18f2ee0 insn@0x08048483[2]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048483[2]: invert(0x00000008[32]) = 0xfffffff7<4294967287,-9>[32]
Symbolic@0x18f2ee0 insn@0x08048483[2]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048483[2]: addWithCarries((add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0xfffffff7<4294967287,-9>[32], true[1]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x08048483[2]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048483[2]: extract((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048483[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048483[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048483[2]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048483[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048483[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048483[2]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048483[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048483[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048483[2]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048483[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048483[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048483[2]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048483[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048483[2]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048483[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048483[2]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
Symbolic@0x18f2ee0 insn@0x08048483[2]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))))
Symbolic@0x18f2ee0 insn@0x08048483[2]: extract((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048483[2]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048483[2]: equalToZero((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048483[2]: writeRegister(zf, (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048483[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048483[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048483[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))
Symbolic@0x18f2ee0 insn@0x08048483[2]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x08048483[2]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x08048483[2]: invert((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x08048483[2]: writeRegister(cf, (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x08048483[2]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
Symbolic@0x18f2ee0 insn@0x08048483[2]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33]))))
Symbolic@0x18f2ee0 insn@0x08048483[2]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048483[2]: finishInstruction(sub    esp, 0x08)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048486<134513798>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048486: inc    dword ds:[0x080496f8<.bss+4>]
Symbolic@0x18f2ee0: startInstruction(0x08048486: inc    dword ds:[0x080496f8<.bss+4>])
Symbolic@0x18f2ee0 insn@0x08048486[3]: number_(32, 134513798) = 0x08048486<134513798>[32]
Symbolic@0x18f2ee0 insn@0x08048486[3]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x08048486[3]: add(0x08048486<134513798>[32], 0x00000006[32]) = 0x0804848c<134513804>[32]
Symbolic@0x18f2ee0 insn@0x08048486[3]: writeRegister(eip, 0x0804848c<134513804>[32])
Symbolic@0x18f2ee0 insn@0x08048486[3]: number_(32, 134518520) = 0x080496f8<134518520>[32]
Symbolic@0x18f2ee0 insn@0x08048486[3]: undefined_(32) = v31315[32]
Symbolic@0x18f2ee0 insn@0x08048486[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048486[3]: readMemory(ds, 0x080496f8<134518520>[32], v31315[32], true[1]) = v31315[32]
Symbolic@0x18f2ee0 insn@0x08048486[3]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048486[3]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048486[3]: addWithCarries(v31315[32], 0x00000001[32], false[1]) = (add[32] v31315[32] 0x00000001[32])
Symbolic@0x18f2ee0 insn@0x08048486[3]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]))
Symbolic@0x18f2ee0 insn@0x08048486[3]: extract((add[32] v31315[32] 0x00000001[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048486[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v31315[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048486[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v31315[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048486[3]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] v31315[32] 0x00000001[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v31315[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v31315[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048486[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v31315[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048486[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v31315[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048486[3]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] v31315[32] 0x00000001[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v31315[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v31315[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048486[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v31315[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048486[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v31315[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048486[3]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] v31315[32] 0x00000001[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v31315[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v31315[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048486[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048486[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v31315[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048486[3]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] v31315[32] 0x00000001[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048486[3]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v31315[32] 0x00000001[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v31315[32] 0x00000001[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v31315[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048486[3]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v31315[32] 0x00000001[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048486[3]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v31315[32] 0x00000001[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048486[3]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32]))))
Symbolic@0x18f2ee0 insn@0x08048486[3]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32])))))
Symbolic@0x18f2ee0 insn@0x08048486[3]: extract((add[32] v31315[32] 0x00000001[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v31315[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048486[3]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v31315[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048486[3]: equalToZero((add[32] v31315[32] 0x00000001[32])) = (zerop[1] (add[32] v31315[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048486[3]: writeRegister(zf, (zerop[1] (add[32] v31315[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048486[3]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]))
Symbolic@0x18f2ee0 insn@0x08048486[3]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]))
Symbolic@0x18f2ee0 insn@0x08048486[3]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]))
Symbolic@0x18f2ee0 insn@0x08048486[3]: writeRegister(af, (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33])))
Symbolic@0x18f2ee0 insn@0x08048486[3]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33])))
Symbolic@0x18f2ee0 insn@0x08048486[3]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]))))
Symbolic@0x18f2ee0 insn@0x08048486[3]: number_(32, 134518520) = 0x080496f8<134518520>[32]
Symbolic@0x18f2ee0 insn@0x08048486[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048486[3]: writeMemory(ds, 0x080496f8<134518520>[32], (add[32] v31315[32] 0x00000001[32]), true[1])
Symbolic@0x18f2ee0 insn@0x08048486[3]: finishInstruction(inc    dword ds:[0x080496f8<.bss+4>])
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x0804848c<134513804>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]))
  zf           write-only = (zerop[1] (add[32] v31315[32] 0x00000001[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v31315[32] 0x00000001[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=0x080496fb<134518523>[32] write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] v31315[32] 0x00000001[32]))
  addr=0x080496fa<134518522>[32] write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] v31315[32] 0x00000001[32]))
  addr=0x080496f9<134518521>[32] write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] v31315[32] 0x00000001[32]))
  addr=0x080496f8<134518520>[32] write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32]))
  addr=0x080496fb<134518523>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v31315[32])
  addr=0x080496fa<134518522>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v31315[32])
  addr=0x080496f9<134518521>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v31315[32])
  addr=0x080496f8<134518520>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v31315[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x0804848c: mov    dword ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
Symbolic@0x18f2ee0: startInstruction(0x0804848c: mov    dword ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>)
Symbolic@0x18f2ee0 insn@0x0804848c[4]: number_(32, 134513804) = 0x0804848c<134513804>[32]
Symbolic@0x18f2ee0 insn@0x0804848c[4]: number_(32, 7) = 0x00000007[32]
Symbolic@0x18f2ee0 insn@0x0804848c[4]: add(0x0804848c<134513804>[32], 0x00000007[32]) = 0x08048493<134513811>[32]
Symbolic@0x18f2ee0 insn@0x0804848c[4]: writeRegister(eip, 0x08048493<134513811>[32])
Symbolic@0x18f2ee0 insn@0x0804848c[4]: number_(32, 134514132) = 0x080485d4<134514132>[32]
Symbolic@0x18f2ee0 insn@0x0804848c[4]: undefined_(32) = v31382[32]
Symbolic@0x18f2ee0 insn@0x0804848c[4]: readRegister(esp, v31382[32]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x0804848c[4]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x0804848c[4]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0x080485d4<134514132>[32], true[1])
Symbolic@0x18f2ee0 insn@0x0804848c[4]: finishInstruction(mov    dword ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048493<134513811>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]))
  zf           write-only = (zerop[1] (add[32] v31315[32] 0x00000001[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v31315[32] 0x00000001[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32]) write-only value=0x85<-123>[8]
  addr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) write-only value=0xd4<-44>[8]
  addr=0x080496fb<134518523>[32] write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] v31315[32] 0x00000001[32]))
  addr=0x080496fa<134518522>[32] write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] v31315[32] 0x00000001[32]))
  addr=0x080496f9<134518521>[32] write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] v31315[32] 0x00000001[32]))
  addr=0x080496f8<134518520>[32] write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32]))
  addr=0x080496fb<134518523>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v31315[32])
  addr=0x080496fa<134518522>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v31315[32])
  addr=0x080496f9<134518521>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v31315[32])
  addr=0x080496f8<134518520>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v31315[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048493: call   0x08048300<puts@plt>
Symbolic@0x18f2ee0: startInstruction(0x08048493: call   0x08048300<puts@plt>)
Symbolic@0x18f2ee0 insn@0x08048493[5]: number_(32, 134513811) = 0x08048493<134513811>[32]
Symbolic@0x18f2ee0 insn@0x08048493[5]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x08048493[5]: add(0x08048493<134513811>[32], 0x00000005[32]) = 0x08048498<134513816>[32]
Symbolic@0x18f2ee0 insn@0x08048493[5]: writeRegister(eip, 0x08048498<134513816>[32])
Symbolic@0x18f2ee0 insn@0x08048493[5]: number_(32, 134513408) = 0x08048300<134513408>[32]
Symbolic@0x18f2ee0 insn@0x08048493[5]: unsignedExtend(0x08048300<134513408>[32], 32) = 0x08048300<134513408>[32]
Symbolic@0x18f2ee0 insn@0x08048493[5]: undefined_(32) = v31397[32]
Symbolic@0x18f2ee0 insn@0x08048493[5]: readRegister(esp, v31397[32]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x08048493[5]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048493[5]: add((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])
Symbolic@0x18f2ee0 insn@0x08048493[5]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048493[5]: undefined_(32) = v31400[32]
Symbolic@0x18f2ee0 insn@0x08048493[5]: readRegister(eip, v31400[32]) = 0x08048498<134513816>[32]
Symbolic@0x18f2ee0 insn@0x08048493[5]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]), 0x08048498<134513816>[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048493[5]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]))
Symbolic@0x18f2ee0 insn@0x08048493[5]: filterCallTarget(0x08048300<134513408>[32]) = 0x08048300<134513408>[32]
Symbolic@0x18f2ee0 insn@0x08048493[5]: writeRegister(eip, 0x08048300<134513408>[32])
Symbolic@0x18f2ee0 insn@0x08048493[5]: finishInstruction(call   0x08048300<puts@plt>)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = 0x08048300<134513408>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff8<4294967288>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])) 0x0fffffff7<4294967287>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v31315[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]))
  zf           write-only = (zerop[1] (add[32] v31315[32] 0x00000001[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v31315[32] 0x00000001[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v31315[32]) 0x000000001[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32]) write-only value=0x84<-124>[8]
  addr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]) write-only value=0x98<-104>[8]
  addr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32]) write-only value=0x85<-123>[8]
  addr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) write-only value=0xd4<-44>[8]
  addr=0x080496fb<134518523>[32] write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (add[32] v31315[32] 0x00000001[32]))
  addr=0x080496fa<134518522>[32] write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (add[32] v31315[32] 0x00000001[32]))
  addr=0x080496f9<134518521>[32] write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (add[32] v31315[32] 0x00000001[32]))
  addr=0x080496f8<134518520>[32] write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] v31315[32] 0x00000001[32]))
  addr=0x080496fb<134518523>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v31315[32])
  addr=0x080496fa<134518522>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v31315[32])
  addr=0x080496f9<134518521>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v31315[32])
  addr=0x080496f8<134518520>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v31315[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048498: mov    dword ss:[esp], 0x00000000
Symbolic@0x18f2ee0: startInstruction(0x08048498: mov    dword ss:[esp], 0x00000000)
Symbolic@0x18f2ee0 insn@0x08048498[0]: number_(32, 134513816) = 0x08048498<134513816>[32]
Symbolic@0x18f2ee0 insn@0x08048498[0]: number_(32, 7) = 0x00000007[32]
Symbolic@0x18f2ee0 insn@0x08048498[0]: add(0x08048498<134513816>[32], 0x00000007[32]) = 0x0804849f<134513823>[32]
Symbolic@0x18f2ee0 insn@0x08048498[0]: writeRegister(eip, 0x0804849f<134513823>[32])
Symbolic@0x18f2ee0 insn@0x08048498[0]: number_(32, 0) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x08048498[0]: undefined_(32) = v31898[32]
Symbolic@0x18f2ee0 insn@0x08048498[0]: readRegister(esp, v31898[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x08048498[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048498[0]: writeMemory(ss, esp_0[32], 0x00000000[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048498[0]: finishInstruction(mov    dword ss:[esp], 0x00000000)
registers:
  eip          write-only = 0x0804849f<134513823>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) write-only value=0x00[8]
  addr=(add[32] esp_0[32] 0x00000002[32]) write-only value=0x00[8]
  addr=(add[32] esp_0[32] 0x00000001[32]) write-only value=0x00[8]
  addr=esp_0[32] write-only value=0x00[8]

0x0804849f: call   0x08048320<_exit@plt>
Symbolic@0x18f2ee0: startInstruction(0x0804849f: call   0x08048320<_exit@plt>)
Symbolic@0x18f2ee0 insn@0x0804849f[1]: number_(32, 134513823) = 0x0804849f<134513823>[32]
Symbolic@0x18f2ee0 insn@0x0804849f[1]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x0804849f[1]: add(0x0804849f<134513823>[32], 0x00000005[32]) = 0x080484a4<134513828>[32]
Symbolic@0x18f2ee0 insn@0x0804849f[1]: writeRegister(eip, 0x080484a4<134513828>[32])
Symbolic@0x18f2ee0 insn@0x0804849f[1]: number_(32, 134513440) = 0x08048320<134513440>[32]
Symbolic@0x18f2ee0 insn@0x0804849f[1]: unsignedExtend(0x08048320<134513440>[32], 32) = 0x08048320<134513440>[32]
Symbolic@0x18f2ee0 insn@0x0804849f[1]: undefined_(32) = v31912[32]
Symbolic@0x18f2ee0 insn@0x0804849f[1]: readRegister(esp, v31912[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x0804849f[1]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x0804849f[1]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x0804849f[1]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x0804849f[1]: undefined_(32) = v31915[32]
Symbolic@0x18f2ee0 insn@0x0804849f[1]: readRegister(eip, v31915[32]) = 0x080484a4<134513828>[32]
Symbolic@0x18f2ee0 insn@0x0804849f[1]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0x080484a4<134513828>[32], true[1])
Symbolic@0x18f2ee0 insn@0x0804849f[1]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x0804849f[1]: filterCallTarget(0x08048320<134513440>[32]) = 0x08048320<134513440>[32]
Symbolic@0x18f2ee0 insn@0x0804849f[1]: writeRegister(eip, 0x08048320<134513440>[32])
Symbolic@0x18f2ee0 insn@0x0804849f[1]: finishInstruction(call   0x08048320<_exit@plt>)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = 0x08048320<134513440>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=0x84<-124>[8]
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=0xa4<-92>[8]
  addr=(add[32] esp_0[32] 0x00000003[32]) write-only value=0x00[8]
  addr=(add[32] esp_0[32] 0x00000002[32]) write-only value=0x00[8]
  addr=(add[32] esp_0[32] 0x00000001[32]) write-only value=0x00[8]
  addr=esp_0[32] write-only value=0x00[8]
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080484b0: push   ebp
Symbolic@0x18f2ee0: startInstruction(0x080484b0: push   ebp)
Symbolic@0x18f2ee0 insn@0x080484b0[0]: number_(32, 134513840) = 0x080484b0<134513840>[32]
Symbolic@0x18f2ee0 insn@0x080484b0[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080484b0[0]: add(0x080484b0<134513840>[32], 0x00000001[32]) = 0x080484b1<134513841>[32]
Symbolic@0x18f2ee0 insn@0x080484b0[0]: writeRegister(eip, 0x080484b1<134513841>[32])
Symbolic@0x18f2ee0 insn@0x080484b0[0]: undefined_(32) = v32413[32]
Symbolic@0x18f2ee0 insn@0x080484b0[0]: readRegister(ebp, v32413[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x080484b0[0]: undefined_(32) = v32414[32]
Symbolic@0x18f2ee0 insn@0x080484b0[0]: readRegister(esp, v32414[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x080484b0[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080484b0[0]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x080484b0[0]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080484b0[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080484b0[0]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), ebp_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x080484b0[0]: finishInstruction(push   ebp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080484b1<134513841>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080484b1: mov    ebp, esp
Symbolic@0x18f2ee0: startInstruction(0x080484b1: mov    ebp, esp)
Symbolic@0x18f2ee0 insn@0x080484b1[1]: number_(32, 134513841) = 0x080484b1<134513841>[32]
Symbolic@0x18f2ee0 insn@0x080484b1[1]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080484b1[1]: add(0x080484b1<134513841>[32], 0x00000002[32]) = 0x080484b3<134513843>[32]
Symbolic@0x18f2ee0 insn@0x080484b1[1]: writeRegister(eip, 0x080484b3<134513843>[32])
Symbolic@0x18f2ee0 insn@0x080484b1[1]: undefined_(32) = v32429[32]
Symbolic@0x18f2ee0 insn@0x080484b1[1]: readRegister(esp, v32429[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x080484b1[1]: writeRegister(ebp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080484b1[1]: finishInstruction(mov    ebp, esp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080484b3<134513843>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080484b3: push   edi
Symbolic@0x18f2ee0: startInstruction(0x080484b3: push   edi)
Symbolic@0x18f2ee0 insn@0x080484b3[2]: number_(32, 134513843) = 0x080484b3<134513843>[32]
Symbolic@0x18f2ee0 insn@0x080484b3[2]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080484b3[2]: add(0x080484b3<134513843>[32], 0x00000001[32]) = 0x080484b4<134513844>[32]
Symbolic@0x18f2ee0 insn@0x080484b3[2]: writeRegister(eip, 0x080484b4<134513844>[32])
Symbolic@0x18f2ee0 insn@0x080484b3[2]: undefined_(32) = v32436[32]
Symbolic@0x18f2ee0 insn@0x080484b3[2]: readRegister(edi, v32436[32]) = edi_0[32]
Symbolic@0x18f2ee0 insn@0x080484b3[2]: undefined_(32) = v32437[32]
Symbolic@0x18f2ee0 insn@0x080484b3[2]: readRegister(esp, v32437[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x080484b3[2]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080484b3[2]: add((add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])
Symbolic@0x18f2ee0 insn@0x080484b3[2]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]))
Symbolic@0x18f2ee0 insn@0x080484b3[2]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080484b3[2]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]), edi_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x080484b3[2]: finishInstruction(push   edi)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080484b4<134513844>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080484b4: push   esi
Symbolic@0x18f2ee0: startInstruction(0x080484b4: push   esi)
Symbolic@0x18f2ee0 insn@0x080484b4[3]: number_(32, 134513844) = 0x080484b4<134513844>[32]
Symbolic@0x18f2ee0 insn@0x080484b4[3]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080484b4[3]: add(0x080484b4<134513844>[32], 0x00000001[32]) = 0x080484b5<134513845>[32]
Symbolic@0x18f2ee0 insn@0x080484b4[3]: writeRegister(eip, 0x080484b5<134513845>[32])
Symbolic@0x18f2ee0 insn@0x080484b4[3]: undefined_(32) = v32453[32]
Symbolic@0x18f2ee0 insn@0x080484b4[3]: readRegister(esi, v32453[32]) = esi_0[32]
Symbolic@0x18f2ee0 insn@0x080484b4[3]: undefined_(32) = v32454[32]
Symbolic@0x18f2ee0 insn@0x080484b4[3]: readRegister(esp, v32454[32]) = (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])
Symbolic@0x18f2ee0 insn@0x080484b4[3]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080484b4[3]: add((add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x080484b4[3]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080484b4[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080484b4[3]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), esi_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x080484b4[3]: finishInstruction(push   esi)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080484b5<134513845>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080484b5: push   ebx
Symbolic@0x18f2ee0: startInstruction(0x080484b5: push   ebx)
Symbolic@0x18f2ee0 insn@0x080484b5[4]: number_(32, 134513845) = 0x080484b5<134513845>[32]
Symbolic@0x18f2ee0 insn@0x080484b5[4]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080484b5[4]: add(0x080484b5<134513845>[32], 0x00000001[32]) = 0x080484b6<134513846>[32]
Symbolic@0x18f2ee0 insn@0x080484b5[4]: writeRegister(eip, 0x080484b6<134513846>[32])
Symbolic@0x18f2ee0 insn@0x080484b5[4]: undefined_(32) = v32470[32]
Symbolic@0x18f2ee0 insn@0x080484b5[4]: readRegister(ebx, v32470[32]) = ebx_0[32]
Symbolic@0x18f2ee0 insn@0x080484b5[4]: undefined_(32) = v32471[32]
Symbolic@0x18f2ee0 insn@0x080484b5[4]: readRegister(esp, v32471[32]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x080484b5[4]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080484b5[4]: add((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])
Symbolic@0x18f2ee0 insn@0x080484b5[4]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]))
Symbolic@0x18f2ee0 insn@0x080484b5[4]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080484b5[4]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]), ebx_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x080484b5[4]: finishInstruction(push   ebx)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080484b6<134513846>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080484b6: sub    esp, 0x0c
Symbolic@0x18f2ee0: startInstruction(0x080484b6: sub    esp, 0x0c)
Symbolic@0x18f2ee0 insn@0x080484b6[5]: number_(32, 134513846) = 0x080484b6<134513846>[32]
Symbolic@0x18f2ee0 insn@0x080484b6[5]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x080484b6[5]: add(0x080484b6<134513846>[32], 0x00000003[32]) = 0x080484b9<134513849>[32]
Symbolic@0x18f2ee0 insn@0x080484b6[5]: writeRegister(eip, 0x080484b9<134513849>[32])
Symbolic@0x18f2ee0 insn@0x080484b6[5]: undefined_(32) = v32487[32]
Symbolic@0x18f2ee0 insn@0x080484b6[5]: readRegister(esp, v32487[32]) = (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])
Symbolic@0x18f2ee0 insn@0x080484b6[5]: number_(8, 12) = 0x0c[8]
Symbolic@0x18f2ee0 insn@0x080484b6[5]: signExtend(0x0c[8], 32) = 0x0000000c[32]
Symbolic@0x18f2ee0 insn@0x080484b6[5]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080484b6[5]: invert(0x0000000c[32]) = 0xfffffff3<4294967283,-13>[32]
Symbolic@0x18f2ee0 insn@0x080484b6[5]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x080484b6[5]: addWithCarries((add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]), 0xfffffff3<4294967283,-13>[32], true[1]) = (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])
Symbolic@0x18f2ee0 insn@0x080484b6[5]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: extract((add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: extract((add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: equalToZero((add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) = (zerop[1] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: writeRegister(zf, (zerop[1] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: invert((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: writeRegister(cf, (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: writeRegister(esp, (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x080484b6[5]: finishInstruction(sub    esp, 0x0c)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080484b9<134513849>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080484b9: call   0x080484be<<Insn>>
Symbolic@0x18f2ee0: startInstruction(0x080484b9: call   0x080484be<<Insn>>)
Symbolic@0x18f2ee0 insn@0x080484b9[6]: number_(32, 134513849) = 0x080484b9<134513849>[32]
Symbolic@0x18f2ee0 insn@0x080484b9[6]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x080484b9[6]: add(0x080484b9<134513849>[32], 0x00000005[32]) = 0x080484be<134513854>[32]
Symbolic@0x18f2ee0 insn@0x080484b9[6]: writeRegister(eip, 0x080484be<134513854>[32])
Symbolic@0x18f2ee0 insn@0x080484b9[6]: number_(32, 134513854) = 0x080484be<134513854>[32]
Symbolic@0x18f2ee0 insn@0x080484b9[6]: unsignedExtend(0x080484be<134513854>[32], 32) = 0x080484be<134513854>[32]
Symbolic@0x18f2ee0 insn@0x080484b9[6]: undefined_(32) = v32534[32]
Symbolic@0x18f2ee0 insn@0x080484b9[6]: readRegister(esp, v32534[32]) = (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])
Symbolic@0x18f2ee0 insn@0x080484b9[6]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080484b9[6]: add((add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xffffffe0<4294967264,-32>[32])
Symbolic@0x18f2ee0 insn@0x080484b9[6]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080484b9[6]: undefined_(32) = v32537[32]
Symbolic@0x18f2ee0 insn@0x080484b9[6]: readRegister(eip, v32537[32]) = 0x080484be<134513854>[32]
Symbolic@0x18f2ee0 insn@0x080484b9[6]: writeMemory(ss, (add[32] esp_0[32] 0xffffffe0<4294967264,-32>[32]), 0x080484be<134513854>[32], true[1])
Symbolic@0x18f2ee0 insn@0x080484b9[6]: writeRegister(esp, (add[32] esp_0[32] 0xffffffe0<4294967264,-32>[32]))
Symbolic@0x18f2ee0 insn@0x080484b9[6]: filterCallTarget(0x080484be<134513854>[32]) = 0x080484be<134513854>[32]
Symbolic@0x18f2ee0 insn@0x080484b9[6]: writeRegister(eip, 0x080484be<134513854>[32])
Symbolic@0x18f2ee0 insn@0x080484b9[6]: finishInstruction(call   0x080484be<<Insn>>)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xffffffe0<4294967264,-32>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = 0x080484be<134513854>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffe3<4294967267,-29>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xffffffe2<4294967266,-30>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xffffffe1<4294967265,-31>[32]) write-only value=0x84<-124>[8]
  addr=(add[32] esp_0[32] 0xffffffe0<4294967264,-32>[32]) write-only value=0xbe<-66>[8]
  addr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080484be: pop    ebx
Symbolic@0x18f2ee0: startInstruction(0x080484be: pop    ebx)
Symbolic@0x18f2ee0 insn@0x080484be[0]: number_(32, 134513854) = 0x080484be<134513854>[32]
Symbolic@0x18f2ee0 insn@0x080484be[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080484be[0]: add(0x080484be<134513854>[32], 0x00000001[32]) = 0x080484bf<134513855>[32]
Symbolic@0x18f2ee0 insn@0x080484be[0]: writeRegister(eip, 0x080484bf<134513855>[32])
Symbolic@0x18f2ee0 insn@0x080484be[0]: undefined_(32) = v33035[32]
Symbolic@0x18f2ee0 insn@0x080484be[0]: readRegister(esp, v33035[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x080484be[0]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080484be[0]: add(esp_0[32], 0x00000004[32]) = (add[32] esp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x080484be[0]: writeRegister(esp, (add[32] esp_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080484be[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080484be[0]: undefined_(32) = v33038[32]
Symbolic@0x18f2ee0 insn@0x080484be[0]: readMemory(ss, esp_0[32], v33038[32], true[1]) = v33038[32]
Symbolic@0x18f2ee0 insn@0x080484be[0]: writeRegister(ebx, v33038[32])
Symbolic@0x18f2ee0 insn@0x080484be[0]: finishInstruction(pop    ebx)
registers:
  ebx          write-only = v33038[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x080484bf<134513855>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v33038[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v33038[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v33038[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v33038[32])

0x080484bf: add    ebx, 0x0000120a<4618>
Symbolic@0x18f2ee0: startInstruction(0x080484bf: add    ebx, 0x0000120a<4618>)
Symbolic@0x18f2ee0 insn@0x080484bf[1]: number_(32, 134513855) = 0x080484bf<134513855>[32]
Symbolic@0x18f2ee0 insn@0x080484bf[1]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x080484bf[1]: add(0x080484bf<134513855>[32], 0x00000006[32]) = 0x080484c5<134513861>[32]
Symbolic@0x18f2ee0 insn@0x080484bf[1]: writeRegister(eip, 0x080484c5<134513861>[32])
Symbolic@0x18f2ee0 insn@0x080484bf[1]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080484bf[1]: number_(32, 4618) = 0x0000120a<4618>[32]
Symbolic@0x18f2ee0 insn@0x080484bf[1]: undefined_(32) = v33058[32]
Symbolic@0x18f2ee0 insn@0x080484bf[1]: readRegister(ebx, v33058[32]) = v33038[32]
Symbolic@0x18f2ee0 insn@0x080484bf[1]: addWithCarries(v33038[32], 0x0000120a<4618>[32], false[1]) = (add[32] v33038[32] 0x0000120a<4618>[32])
Symbolic@0x18f2ee0 insn@0x080484bf[1]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: extract((add[32] v33038[32] 0x0000120a<4618>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32]))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v33038[32] 0x0000120a<4618>[32]))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v33038[32] 0x0000120a<4618>[32]))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] v33038[32] 0x0000120a<4618>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v33038[32] 0x0000120a<4618>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v33038[32] 0x0000120a<4618>[32])))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v33038[32] 0x0000120a<4618>[32]))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v33038[32] 0x0000120a<4618>[32]))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] v33038[32] 0x0000120a<4618>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v33038[32] 0x0000120a<4618>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v33038[32] 0x0000120a<4618>[32])))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v33038[32] 0x0000120a<4618>[32]))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v33038[32] 0x0000120a<4618>[32]))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] v33038[32] 0x0000120a<4618>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v33038[32] 0x0000120a<4618>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v33038[32] 0x0000120a<4618>[32])))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32]))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v33038[32] 0x0000120a<4618>[32]))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] v33038[32] 0x0000120a<4618>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32])))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v33038[32] 0x0000120a<4618>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v33038[32] 0x0000120a<4618>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v33038[32] 0x0000120a<4618>[32])))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v33038[32] 0x0000120a<4618>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32])))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v33038[32] 0x0000120a<4618>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32])))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32]))))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32])))))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: extract((add[32] v33038[32] 0x0000120a<4618>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v33038[32] 0x0000120a<4618>[32]))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v33038[32] 0x0000120a<4618>[32])))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: equalToZero((add[32] v33038[32] 0x0000120a<4618>[32])) = (zerop[1] (add[32] v33038[32] 0x0000120a<4618>[32]))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: writeRegister(zf, (zerop[1] (add[32] v33038[32] 0x0000120a<4618>[32])))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: writeRegister(af, (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33])))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: writeRegister(cf, (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33])))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33])))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]))))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: writeRegister(ebx, (add[32] v33038[32] 0x0000120a<4618>[32]))
Symbolic@0x18f2ee0 insn@0x080484bf[1]: finishInstruction(add    ebx, 0x0000120a<4618>)
registers:
  ebx          = (add[32] v33038[32] 0x0000120a<4618>[32])
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x080484c5<134513861>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]))
  zf           write-only = (zerop[1] (add[32] v33038[32] 0x0000120a<4618>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v33038[32] 0x0000120a<4618>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v33038[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v33038[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v33038[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v33038[32])

0x080484c5: call   0x080482c8<_init>
Symbolic@0x18f2ee0: startInstruction(0x080484c5: call   0x080482c8<_init>)
Symbolic@0x18f2ee0 insn@0x080484c5[2]: number_(32, 134513861) = 0x080484c5<134513861>[32]
Symbolic@0x18f2ee0 insn@0x080484c5[2]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x080484c5[2]: add(0x080484c5<134513861>[32], 0x00000005[32]) = 0x080484ca<134513866>[32]
Symbolic@0x18f2ee0 insn@0x080484c5[2]: writeRegister(eip, 0x080484ca<134513866>[32])
Symbolic@0x18f2ee0 insn@0x080484c5[2]: number_(32, 134513352) = 0x080482c8<134513352>[32]
Symbolic@0x18f2ee0 insn@0x080484c5[2]: unsignedExtend(0x080482c8<134513352>[32], 32) = 0x080482c8<134513352>[32]
Symbolic@0x18f2ee0 insn@0x080484c5[2]: undefined_(32) = v33100[32]
Symbolic@0x18f2ee0 insn@0x080484c5[2]: readRegister(esp, v33100[32]) = (add[32] esp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x080484c5[2]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080484c5[2]: add((add[32] esp_0[32] 0x00000004[32]), 0xfffffffc<4294967292,-4>[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x080484c5[2]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080484c5[2]: undefined_(32) = v33103[32]
Symbolic@0x18f2ee0 insn@0x080484c5[2]: readRegister(eip, v33103[32]) = 0x080484ca<134513866>[32]
Symbolic@0x18f2ee0 insn@0x080484c5[2]: writeMemory(ss, esp_0[32], 0x080484ca<134513866>[32], true[1])
Symbolic@0x18f2ee0 insn@0x080484c5[2]: writeRegister(esp, esp_0[32])
Symbolic@0x18f2ee0 insn@0x080484c5[2]: filterCallTarget(0x080482c8<134513352>[32]) = 0x080482c8<134513352>[32]
Symbolic@0x18f2ee0 insn@0x080484c5[2]: writeRegister(eip, 0x080482c8<134513352>[32])
Symbolic@0x18f2ee0 insn@0x080484c5[2]: finishInstruction(call   0x080482c8<_init>)
registers:
  ebx          = (add[32] v33038[32] 0x0000120a<4618>[32])
  eip          = 0x080482c8<134513352>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v33038[32] 0x0000120a<4618>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v33038[32] 0x0000120a<4618>[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]))
  zf           write-only = (zerop[1] (add[32] v33038[32] 0x0000120a<4618>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v33038[32] 0x0000120a<4618>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33]) (uextend[33] 0x00000021[32] v33038[32]) 0x00000120a<4618>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0x00000002[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0x00000001[32]) write-only value=0x84<-124>[8]
  addr=esp_0[32] write-only value=0xca<-54>[8]
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v33038[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v33038[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v33038[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v33038[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080484ca: lea    eax, [ebx + 0xffffff20<-224>]
Symbolic@0x18f2ee0: startInstruction(0x080484ca: lea    eax, [ebx + 0xffffff20<-224>])
Symbolic@0x18f2ee0 insn@0x080484ca[0]: number_(32, 134513866) = 0x080484ca<134513866>[32]
Symbolic@0x18f2ee0 insn@0x080484ca[0]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x080484ca[0]: add(0x080484ca<134513866>[32], 0x00000006[32]) = 0x080484d0<134513872>[32]
Symbolic@0x18f2ee0 insn@0x080484ca[0]: writeRegister(eip, 0x080484d0<134513872>[32])
Symbolic@0x18f2ee0 insn@0x080484ca[0]: undefined_(32) = v33601[32]
Symbolic@0x18f2ee0 insn@0x080484ca[0]: readRegister(ebx, v33601[32]) = ebx_0[32]
Symbolic@0x18f2ee0 insn@0x080484ca[0]: number_(32, 4294967072) = 0xffffff20<4294967072,-224>[32]
Symbolic@0x18f2ee0 insn@0x080484ca[0]: add(ebx_0[32], 0xffffff20<4294967072,-224>[32]) = (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])
Symbolic@0x18f2ee0 insn@0x080484ca[0]: unsignedExtend((add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]), 32) = (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])
Symbolic@0x18f2ee0 insn@0x080484ca[0]: writeRegister(eax, (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))
Symbolic@0x18f2ee0 insn@0x080484ca[0]: finishInstruction(lea    eax, [ebx + 0xffffff20<-224>])
registers:
  eax          write-only = (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])
  eip          write-only = 0x080484d0<134513872>[32]
  fpstatus_top = 0x0[3]
memory:

0x080484d0: lea    edx, [ebx + 0xffffff20<-224>]
Symbolic@0x18f2ee0: startInstruction(0x080484d0: lea    edx, [ebx + 0xffffff20<-224>])
Symbolic@0x18f2ee0 insn@0x080484d0[1]: number_(32, 134513872) = 0x080484d0<134513872>[32]
Symbolic@0x18f2ee0 insn@0x080484d0[1]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x080484d0[1]: add(0x080484d0<134513872>[32], 0x00000006[32]) = 0x080484d6<134513878>[32]
Symbolic@0x18f2ee0 insn@0x080484d0[1]: writeRegister(eip, 0x080484d6<134513878>[32])
Symbolic@0x18f2ee0 insn@0x080484d0[1]: undefined_(32) = v33608[32]
Symbolic@0x18f2ee0 insn@0x080484d0[1]: readRegister(ebx, v33608[32]) = ebx_0[32]
Symbolic@0x18f2ee0 insn@0x080484d0[1]: number_(32, 4294967072) = 0xffffff20<4294967072,-224>[32]
Symbolic@0x18f2ee0 insn@0x080484d0[1]: add(ebx_0[32], 0xffffff20<4294967072,-224>[32]) = (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])
Symbolic@0x18f2ee0 insn@0x080484d0[1]: unsignedExtend((add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]), 32) = (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])
Symbolic@0x18f2ee0 insn@0x080484d0[1]: writeRegister(edx, (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))
Symbolic@0x18f2ee0 insn@0x080484d0[1]: finishInstruction(lea    edx, [ebx + 0xffffff20<-224>])
registers:
  eax          write-only = (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])
  edx          write-only = (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])
  eip          write-only = 0x080484d6<134513878>[32]
  fpstatus_top = 0x0[3]
memory:

0x080484d6: sub    eax, edx
Symbolic@0x18f2ee0: startInstruction(0x080484d6: sub    eax, edx)
Symbolic@0x18f2ee0 insn@0x080484d6[2]: number_(32, 134513878) = 0x080484d6<134513878>[32]
Symbolic@0x18f2ee0 insn@0x080484d6[2]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080484d6[2]: add(0x080484d6<134513878>[32], 0x00000002[32]) = 0x080484d8<134513880>[32]
Symbolic@0x18f2ee0 insn@0x080484d6[2]: writeRegister(eip, 0x080484d8<134513880>[32])
Symbolic@0x18f2ee0 insn@0x080484d6[2]: undefined_(32) = v33616[32]
Symbolic@0x18f2ee0 insn@0x080484d6[2]: readRegister(eax, v33616[32]) = (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])
Symbolic@0x18f2ee0 insn@0x080484d6[2]: undefined_(32) = v33618[32]
Symbolic@0x18f2ee0 insn@0x080484d6[2]: readRegister(edx, v33618[32]) = (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])
Symbolic@0x18f2ee0 insn@0x080484d6[2]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080484d6[2]: invert((add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) = (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x080484d6[2]: addWithCarries((add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]), (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])), true[1]) = (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])
Symbolic@0x18f2ee0 insn@0x080484d6[2]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])))))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: extract((add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: extract((add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: equalToZero((add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) = (zerop[1] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: writeRegister(zf, (zerop[1] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])))))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])))))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])))))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])))))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])))))))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: invert((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])))))) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: writeRegister(cf, (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])))))))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])))))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])))))))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: writeRegister(eax, (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d6[2]: finishInstruction(sub    eax, edx)
registers:
  eax          = (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])
  edx          = (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])
  eip          write-only = 0x080484d8<134513880>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))))
  zf           write-only = (zerop[1] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))))
  fpstatus_top = 0x0[3]
memory:

0x080484d8: sar    eax, 0x02
Symbolic@0x18f2ee0: startInstruction(0x080484d8: sar    eax, 0x02)
Symbolic@0x18f2ee0 insn@0x080484d8[3]: number_(32, 134513880) = 0x080484d8<134513880>[32]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: add(0x080484d8<134513880>[32], 0x00000003[32]) = 0x080484db<134513883>[32]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: writeRegister(eip, 0x080484db<134513883>[32])
Symbolic@0x18f2ee0 insn@0x080484d8[3]: number_(8, 2) = 0x02[8]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: unspecified_(32) = v33663[32]<unspec>
Symbolic@0x18f2ee0 insn@0x080484d8[3]: undefined_(32) = v33664[32]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: readRegister(eax, v33664[32]) = (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])
Symbolic@0x18f2ee0 insn@0x080484d8[3]: extract(0x02[8], 0, 5) = 0x02[5]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: equalToZero(0x02[5]) = false[1]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: extract(0x02[8], 5, 8) = 0x0[3]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: equalToZero(0x0[3]) = true[1]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: invert(true[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: number_(5, 31) = 0x1f<-1>[5]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: add(0x02[5], 0x1f<-1>[5]) = 0x01[5]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: equalToZero(0x01[5]) = false[1]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: shiftRightArithmetic((add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]), 0x02[5]) = (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: extract((add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: extract((asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: unspecified_(1) = v33676[1]<unspec>
Symbolic@0x18f2ee0 insn@0x080484d8[3]: undefined_(1) = v33677[1]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: readRegister(af, v33677[1]) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: ite(false[1], (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])))))), v33676[1]<unspec>) = v33676[1]<unspec>
Symbolic@0x18f2ee0 insn@0x080484d8[3]: writeRegister(af, v33676[1]<unspec>)
Symbolic@0x18f2ee0 insn@0x080484d8[3]: add(0x02[5], 0x1f<-1>[5]) = 0x01[5]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: shiftRight((add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]), 0x01[5]) = (concat[32] false[1] (extract[31] 0x00000001[32] 0x00000020[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: extract((concat[32] false[1] (extract[31] 0x00000001[32] 0x00000020[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))), 0, 1) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: ite(false[1], (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: undefined_(1) = v33683[1]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: readRegister(cf, v33683[1]) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: ite(false[1], (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])))))), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: writeRegister(cf, (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: unspecified_(1) = v33686[1]<unspec>
Symbolic@0x18f2ee0 insn@0x080484d8[3]: undefined_(1) = v33687[1]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: readRegister(of, v33687[1]) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: ite(false[1], (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])))))), v33686[1]<unspec>) = v33686[1]<unspec>
Symbolic@0x18f2ee0 insn@0x080484d8[3]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: ite(false[1], false[1], v33686[1]<unspec>) = v33686[1]<unspec>
Symbolic@0x18f2ee0 insn@0x080484d8[3]: writeRegister(of, v33686[1]<unspec>)
Symbolic@0x18f2ee0 insn@0x080484d8[3]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: extract((asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: extract((asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: undefined_(1) = v33693[1]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: readRegister(pf, v33693[1]) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))), (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))), (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))), (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))), (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: ite(true[1], (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))), (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: undefined_(1) = v33712[1]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: readRegister(sf, v33712[1]) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: ite(true[1], (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))), (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) = (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: undefined_(1) = v33715[1]
Symbolic@0x18f2ee0 insn@0x080484d8[3]: readRegister(zf, v33715[1]) = (zerop[1] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: equalToZero((asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) = (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: ite(true[1], (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))), (zerop[1] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) = (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: writeRegister(zf, (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: writeRegister(eax, (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484d8[3]: finishInstruction(sar    eax, 0x02)
registers:
  eax          = (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
  edx          = (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])
  eip          write-only = 0x080484db<134513883>[32]
  cf           = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
  pf           = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))))
  af           = v33676[1]<unspec>
  zf           = (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
  sf           = (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
  of           = v33686[1]<unspec>
  fpstatus_top = 0x0[3]
memory:

0x080484db: mov    dword ss:[ebp + 0xf0<-16>], eax
Symbolic@0x18f2ee0: startInstruction(0x080484db: mov    dword ss:[ebp + 0xf0<-16>], eax)
Symbolic@0x18f2ee0 insn@0x080484db[4]: number_(32, 134513883) = 0x080484db<134513883>[32]
Symbolic@0x18f2ee0 insn@0x080484db[4]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x080484db[4]: add(0x080484db<134513883>[32], 0x00000003[32]) = 0x080484de<134513886>[32]
Symbolic@0x18f2ee0 insn@0x080484db[4]: writeRegister(eip, 0x080484de<134513886>[32])
Symbolic@0x18f2ee0 insn@0x080484db[4]: undefined_(32) = v33724[32]
Symbolic@0x18f2ee0 insn@0x080484db[4]: readRegister(eax, v33724[32]) = (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
Symbolic@0x18f2ee0 insn@0x080484db[4]: undefined_(32) = v33726[32]
Symbolic@0x18f2ee0 insn@0x080484db[4]: readRegister(ebp, v33726[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x080484db[4]: number_(8, 240) = 0xf0<-16>[8]
Symbolic@0x18f2ee0 insn@0x080484db[4]: signExtend(0xf0<-16>[8], 32) = 0xfffffff0<4294967280,-16>[32]
Symbolic@0x18f2ee0 insn@0x080484db[4]: add(ebp_0[32], 0xfffffff0<4294967280,-16>[32]) = (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32])
Symbolic@0x18f2ee0 insn@0x080484db[4]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080484db[4]: writeMemory(ss, (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]), (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])), true[1])
Symbolic@0x18f2ee0 insn@0x080484db[4]: finishInstruction(mov    dword ss:[ebp + 0xf0<-16>], eax)
registers:
  eax          = (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
  edx          = (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])
  eip          write-only = 0x080484de<134513886>[32]
  cf           = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
  pf           = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))))
  af           = v33676[1]<unspec>
  zf           = (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
  sf           = (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
  of           = v33686[1]<unspec>
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
  addr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
  addr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
  addr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))

0x080484de: jne    0x080484f0<<StaticData@0x080484e8>+8>
Symbolic@0x18f2ee0: startInstruction(0x080484de: jne    0x080484f0<<StaticData@0x080484e8>+8>)
Symbolic@0x18f2ee0 insn@0x080484de[5]: number_(32, 134513886) = 0x080484de<134513886>[32]
Symbolic@0x18f2ee0 insn@0x080484de[5]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080484de[5]: add(0x080484de<134513886>[32], 0x00000002[32]) = 0x080484e0<134513888>[32]
Symbolic@0x18f2ee0 insn@0x080484de[5]: writeRegister(eip, 0x080484e0<134513888>[32])
Symbolic@0x18f2ee0 insn@0x080484de[5]: undefined_(1) = v33741[1]
Symbolic@0x18f2ee0 insn@0x080484de[5]: readRegister(zf, v33741[1]) = (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0 insn@0x080484de[5]: invert((zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) = (invert[1] (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))))
Symbolic@0x18f2ee0 insn@0x080484de[5]: undefined_(32) = v33744[32]
Symbolic@0x18f2ee0 insn@0x080484de[5]: readRegister(eip, v33744[32]) = 0x080484e0<134513888>[32]
Symbolic@0x18f2ee0 insn@0x080484de[5]: number_(32, 134513904) = 0x080484f0<134513904>[32]
Symbolic@0x18f2ee0 insn@0x080484de[5]: unsignedExtend(0x080484f0<134513904>[32], 32) = 0x080484f0<134513904>[32]
Symbolic@0x18f2ee0 insn@0x080484de[5]: ite((invert[1] (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))), 0x080484f0<134513904>[32], 0x080484e0<134513888>[32]) = (ite[32] (invert[1] (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) 0x080484f0<134513904>[32] 0x080484e0<134513888>[32])
Symbolic@0x18f2ee0 insn@0x080484de[5]: writeRegister(eip, (ite[32] (invert[1] (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) 0x080484f0<134513904>[32] 0x080484e0<134513888>[32]))
Symbolic@0x18f2ee0 insn@0x080484de[5]: finishInstruction(jne    0x080484f0<<StaticData@0x080484e8>+8>)
registers:
  eax          = (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
  edx          = (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])
  eip          = (ite[32] (invert[1] (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))) 0x080484f0<134513904>[32] 0x080484e0<134513888>[32])
  cf           = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))
  pf           = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))))
  af           = v33676[1]<unspec>
  zf           = (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
  sf           = (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
  of           = v33686[1]<unspec>
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
  addr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
  addr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
  addr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] ebx_0[32] 0xffffff20<4294967072,-224>[32])) ebx_0[32] 0xffffff21<4294967073,-223>[32])))
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080484e0: add    esp, 0x0c
Symbolic@0x18f2ee0: startInstruction(0x080484e0: add    esp, 0x0c)
Symbolic@0x18f2ee0 insn@0x080484e0[0]: number_(32, 134513888) = 0x080484e0<134513888>[32]
Symbolic@0x18f2ee0 insn@0x080484e0[0]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x080484e0[0]: add(0x080484e0<134513888>[32], 0x00000003[32]) = 0x080484e3<134513891>[32]
Symbolic@0x18f2ee0 insn@0x080484e0[0]: writeRegister(eip, 0x080484e3<134513891>[32])
Symbolic@0x18f2ee0 insn@0x080484e0[0]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080484e0[0]: number_(8, 12) = 0x0c[8]
Symbolic@0x18f2ee0 insn@0x080484e0[0]: undefined_(32) = v34237[32]
Symbolic@0x18f2ee0 insn@0x080484e0[0]: readRegister(esp, v34237[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x080484e0[0]: signExtend(0x0c[8], 32) = 0x0000000c[32]
Symbolic@0x18f2ee0 insn@0x080484e0[0]: addWithCarries(esp_0[32], 0x0000000c[32], false[1]) = (add[32] esp_0[32] 0x0000000c[32])
Symbolic@0x18f2ee0 insn@0x080484e0[0]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: extract((add[32] esp_0[32] 0x0000000c[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])))))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: extract((add[32] esp_0[32] 0x0000000c[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32])))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: equalToZero((add[32] esp_0[32] 0x0000000c[32])) = (zerop[1] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: writeRegister(zf, (zerop[1] (add[32] esp_0[32] 0x0000000c[32])))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: writeRegister(af, (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: writeRegister(cf, (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: writeRegister(esp, (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x080484e0[0]: finishInstruction(add    esp, 0x0c)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0x0000000c[32])
  eip          write-only = 0x080484e3<134513891>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0x0000000c[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))
  fpstatus_top = 0x0[3]
memory:

0x080484e3: pop    ebx
Symbolic@0x18f2ee0: startInstruction(0x080484e3: pop    ebx)
Symbolic@0x18f2ee0 insn@0x080484e3[1]: number_(32, 134513891) = 0x080484e3<134513891>[32]
Symbolic@0x18f2ee0 insn@0x080484e3[1]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080484e3[1]: add(0x080484e3<134513891>[32], 0x00000001[32]) = 0x080484e4<134513892>[32]
Symbolic@0x18f2ee0 insn@0x080484e3[1]: writeRegister(eip, 0x080484e4<134513892>[32])
Symbolic@0x18f2ee0 insn@0x080484e3[1]: undefined_(32) = v34278[32]
Symbolic@0x18f2ee0 insn@0x080484e3[1]: readRegister(esp, v34278[32]) = (add[32] esp_0[32] 0x0000000c[32])
Symbolic@0x18f2ee0 insn@0x080484e3[1]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080484e3[1]: add((add[32] esp_0[32] 0x0000000c[32]), 0x00000004[32]) = (add[32] esp_0[32] 0x00000010[32])
Symbolic@0x18f2ee0 insn@0x080484e3[1]: writeRegister(esp, (add[32] esp_0[32] 0x00000010[32]))
Symbolic@0x18f2ee0 insn@0x080484e3[1]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080484e3[1]: undefined_(32) = v34282[32]
Symbolic@0x18f2ee0 insn@0x080484e3[1]: readMemory(ss, (add[32] esp_0[32] 0x0000000c[32]), v34282[32], true[1]) = v34282[32]
Symbolic@0x18f2ee0 insn@0x080484e3[1]: writeRegister(ebx, v34282[32])
Symbolic@0x18f2ee0 insn@0x080484e3[1]: finishInstruction(pop    ebx)
registers:
  ebx          write-only = v34282[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000010[32])
  eip          write-only = 0x080484e4<134513892>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0x0000000c[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x0000000f[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34282[32])
  addr=(add[32] esp_0[32] 0x0000000e[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34282[32])
  addr=(add[32] esp_0[32] 0x0000000d[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34282[32])
  addr=(add[32] esp_0[32] 0x0000000c[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34282[32])

0x080484e4: pop    esi
Symbolic@0x18f2ee0: startInstruction(0x080484e4: pop    esi)
Symbolic@0x18f2ee0 insn@0x080484e4[2]: number_(32, 134513892) = 0x080484e4<134513892>[32]
Symbolic@0x18f2ee0 insn@0x080484e4[2]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080484e4[2]: add(0x080484e4<134513892>[32], 0x00000001[32]) = 0x080484e5<134513893>[32]
Symbolic@0x18f2ee0 insn@0x080484e4[2]: writeRegister(eip, 0x080484e5<134513893>[32])
Symbolic@0x18f2ee0 insn@0x080484e4[2]: undefined_(32) = v34302[32]
Symbolic@0x18f2ee0 insn@0x080484e4[2]: readRegister(esp, v34302[32]) = (add[32] esp_0[32] 0x00000010[32])
Symbolic@0x18f2ee0 insn@0x080484e4[2]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080484e4[2]: add((add[32] esp_0[32] 0x00000010[32]), 0x00000004[32]) = (add[32] esp_0[32] 0x00000014[32])
Symbolic@0x18f2ee0 insn@0x080484e4[2]: writeRegister(esp, (add[32] esp_0[32] 0x00000014[32]))
Symbolic@0x18f2ee0 insn@0x080484e4[2]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080484e4[2]: undefined_(32) = v34306[32]
Symbolic@0x18f2ee0 insn@0x080484e4[2]: readMemory(ss, (add[32] esp_0[32] 0x00000010[32]), v34306[32], true[1]) = v34306[32]
Symbolic@0x18f2ee0 insn@0x080484e4[2]: writeRegister(esi, v34306[32])
Symbolic@0x18f2ee0 insn@0x080484e4[2]: finishInstruction(pop    esi)
registers:
  ebx          write-only = v34282[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000014[32])
  esi          write-only = v34306[32]
  eip          write-only = 0x080484e5<134513893>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0x0000000c[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000013[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34306[32])
  addr=(add[32] esp_0[32] 0x00000012[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34306[32])
  addr=(add[32] esp_0[32] 0x00000011[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34306[32])
  addr=(add[32] esp_0[32] 0x00000010[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34306[32])
  addr=(add[32] esp_0[32] 0x0000000f[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34282[32])
  addr=(add[32] esp_0[32] 0x0000000e[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34282[32])
  addr=(add[32] esp_0[32] 0x0000000d[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34282[32])
  addr=(add[32] esp_0[32] 0x0000000c[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34282[32])

0x080484e5: pop    edi
Symbolic@0x18f2ee0: startInstruction(0x080484e5: pop    edi)
Symbolic@0x18f2ee0 insn@0x080484e5[3]: number_(32, 134513893) = 0x080484e5<134513893>[32]
Symbolic@0x18f2ee0 insn@0x080484e5[3]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080484e5[3]: add(0x080484e5<134513893>[32], 0x00000001[32]) = 0x080484e6<134513894>[32]
Symbolic@0x18f2ee0 insn@0x080484e5[3]: writeRegister(eip, 0x080484e6<134513894>[32])
Symbolic@0x18f2ee0 insn@0x080484e5[3]: undefined_(32) = v34326[32]
Symbolic@0x18f2ee0 insn@0x080484e5[3]: readRegister(esp, v34326[32]) = (add[32] esp_0[32] 0x00000014[32])
Symbolic@0x18f2ee0 insn@0x080484e5[3]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080484e5[3]: add((add[32] esp_0[32] 0x00000014[32]), 0x00000004[32]) = (add[32] esp_0[32] 0x00000018[32])
Symbolic@0x18f2ee0 insn@0x080484e5[3]: writeRegister(esp, (add[32] esp_0[32] 0x00000018[32]))
Symbolic@0x18f2ee0 insn@0x080484e5[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080484e5[3]: undefined_(32) = v34330[32]
Symbolic@0x18f2ee0 insn@0x080484e5[3]: readMemory(ss, (add[32] esp_0[32] 0x00000014[32]), v34330[32], true[1]) = v34330[32]
Symbolic@0x18f2ee0 insn@0x080484e5[3]: writeRegister(edi, v34330[32])
Symbolic@0x18f2ee0 insn@0x080484e5[3]: finishInstruction(pop    edi)
registers:
  ebx          write-only = v34282[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000018[32])
  esi          write-only = v34306[32]
  edi          write-only = v34330[32]
  eip          write-only = 0x080484e6<134513894>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0x0000000c[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000017[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34330[32])
  addr=(add[32] esp_0[32] 0x00000016[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34330[32])
  addr=(add[32] esp_0[32] 0x00000015[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34330[32])
  addr=(add[32] esp_0[32] 0x00000014[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34330[32])
  addr=(add[32] esp_0[32] 0x00000013[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34306[32])
  addr=(add[32] esp_0[32] 0x00000012[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34306[32])
  addr=(add[32] esp_0[32] 0x00000011[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34306[32])
  addr=(add[32] esp_0[32] 0x00000010[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34306[32])
  addr=(add[32] esp_0[32] 0x0000000f[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34282[32])
  addr=(add[32] esp_0[32] 0x0000000e[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34282[32])
  addr=(add[32] esp_0[32] 0x0000000d[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34282[32])
  addr=(add[32] esp_0[32] 0x0000000c[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34282[32])

0x080484e6: pop    ebp
Symbolic@0x18f2ee0: startInstruction(0x080484e6: pop    ebp)
Symbolic@0x18f2ee0 insn@0x080484e6[4]: number_(32, 134513894) = 0x080484e6<134513894>[32]
Symbolic@0x18f2ee0 insn@0x080484e6[4]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080484e6[4]: add(0x080484e6<134513894>[32], 0x00000001[32]) = 0x080484e7<134513895>[32]
Symbolic@0x18f2ee0 insn@0x080484e6[4]: writeRegister(eip, 0x080484e7<134513895>[32])
Symbolic@0x18f2ee0 insn@0x080484e6[4]: undefined_(32) = v34350[32]
Symbolic@0x18f2ee0 insn@0x080484e6[4]: readRegister(esp, v34350[32]) = (add[32] esp_0[32] 0x00000018[32])
Symbolic@0x18f2ee0 insn@0x080484e6[4]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080484e6[4]: add((add[32] esp_0[32] 0x00000018[32]), 0x00000004[32]) = (add[32] esp_0[32] 0x0000001c[32])
Symbolic@0x18f2ee0 insn@0x080484e6[4]: writeRegister(esp, (add[32] esp_0[32] 0x0000001c[32]))
Symbolic@0x18f2ee0 insn@0x080484e6[4]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080484e6[4]: undefined_(32) = v34354[32]
Symbolic@0x18f2ee0 insn@0x080484e6[4]: readMemory(ss, (add[32] esp_0[32] 0x00000018[32]), v34354[32], true[1]) = v34354[32]
Symbolic@0x18f2ee0 insn@0x080484e6[4]: writeRegister(ebp, v34354[32])
Symbolic@0x18f2ee0 insn@0x080484e6[4]: finishInstruction(pop    ebp)
registers:
  ebx          write-only = v34282[32]
  esp          read-before-write = (add[32] esp_0[32] 0x0000001c[32])
  ebp          write-only = v34354[32]
  esi          write-only = v34306[32]
  edi          write-only = v34330[32]
  eip          write-only = 0x080484e7<134513895>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0x0000000c[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x0000001b[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34354[32])
  addr=(add[32] esp_0[32] 0x0000001a[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34354[32])
  addr=(add[32] esp_0[32] 0x00000019[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34354[32])
  addr=(add[32] esp_0[32] 0x00000018[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34354[32])
  addr=(add[32] esp_0[32] 0x00000017[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34330[32])
  addr=(add[32] esp_0[32] 0x00000016[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34330[32])
  addr=(add[32] esp_0[32] 0x00000015[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34330[32])
  addr=(add[32] esp_0[32] 0x00000014[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34330[32])
  addr=(add[32] esp_0[32] 0x00000013[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34306[32])
  addr=(add[32] esp_0[32] 0x00000012[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34306[32])
  addr=(add[32] esp_0[32] 0x00000011[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34306[32])
  addr=(add[32] esp_0[32] 0x00000010[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34306[32])
  addr=(add[32] esp_0[32] 0x0000000f[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34282[32])
  addr=(add[32] esp_0[32] 0x0000000e[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34282[32])
  addr=(add[32] esp_0[32] 0x0000000d[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34282[32])
  addr=(add[32] esp_0[32] 0x0000000c[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34282[32])

0x080484e7: ret    
Symbolic@0x18f2ee0: startInstruction(0x080484e7: ret)
Symbolic@0x18f2ee0 insn@0x080484e7[5]: number_(32, 134513895) = 0x080484e7<134513895>[32]
Symbolic@0x18f2ee0 insn@0x080484e7[5]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080484e7[5]: add(0x080484e7<134513895>[32], 0x00000001[32]) = 0x080484e8<134513896>[32]
Symbolic@0x18f2ee0 insn@0x080484e7[5]: writeRegister(eip, 0x080484e8<134513896>[32])
Symbolic@0x18f2ee0 insn@0x080484e7[5]: undefined_(32) = v34374[32]
Symbolic@0x18f2ee0 insn@0x080484e7[5]: readRegister(esp, v34374[32]) = (add[32] esp_0[32] 0x0000001c[32])
Symbolic@0x18f2ee0 insn@0x080484e7[5]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080484e7[5]: add((add[32] esp_0[32] 0x0000001c[32]), 0x00000004[32]) = (add[32] esp_0[32] 0x00000020[32])
Symbolic@0x18f2ee0 insn@0x080484e7[5]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080484e7[5]: undefined_(32) = v34377[32]
Symbolic@0x18f2ee0 insn@0x080484e7[5]: readMemory(ss, (add[32] esp_0[32] 0x0000001c[32]), v34377[32], true[1]) = v34377[32]
Symbolic@0x18f2ee0 insn@0x080484e7[5]: filterReturnTarget(v34377[32]) = v34377[32]
Symbolic@0x18f2ee0 insn@0x080484e7[5]: writeRegister(eip, v34377[32])
Symbolic@0x18f2ee0 insn@0x080484e7[5]: writeRegister(esp, (add[32] esp_0[32] 0x00000020[32]))
Symbolic@0x18f2ee0 insn@0x080484e7[5]: finishInstruction(ret)
registers:
  ebx          write-only = v34282[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000020[32])
  ebp          write-only = v34354[32]
  esi          write-only = v34306[32]
  edi          write-only = v34330[32]
  eip          write-only = v34377[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0x0000000c[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x0000001f[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34377[32])
  addr=(add[32] esp_0[32] 0x0000001e[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34377[32])
  addr=(add[32] esp_0[32] 0x0000001d[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34377[32])
  addr=(add[32] esp_0[32] 0x0000001c[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34377[32])
  addr=(add[32] esp_0[32] 0x0000001b[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34354[32])
  addr=(add[32] esp_0[32] 0x0000001a[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34354[32])
  addr=(add[32] esp_0[32] 0x00000019[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34354[32])
  addr=(add[32] esp_0[32] 0x00000018[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34354[32])
  addr=(add[32] esp_0[32] 0x00000017[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34330[32])
  addr=(add[32] esp_0[32] 0x00000016[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34330[32])
  addr=(add[32] esp_0[32] 0x00000015[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34330[32])
  addr=(add[32] esp_0[32] 0x00000014[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34330[32])
  addr=(add[32] esp_0[32] 0x00000013[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34306[32])
  addr=(add[32] esp_0[32] 0x00000012[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34306[32])
  addr=(add[32] esp_0[32] 0x00000011[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34306[32])
  addr=(add[32] esp_0[32] 0x00000010[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34306[32])
  addr=(add[32] esp_0[32] 0x0000000f[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v34282[32])
  addr=(add[32] esp_0[32] 0x0000000e[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v34282[32])
  addr=(add[32] esp_0[32] 0x0000000d[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v34282[32])
  addr=(add[32] esp_0[32] 0x0000000c[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v34282[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048520: push   ebp
Symbolic@0x18f2ee0: startInstruction(0x08048520: push   ebp)
Symbolic@0x18f2ee0 insn@0x08048520[0]: number_(32, 134513952) = 0x08048520<134513952>[32]
Symbolic@0x18f2ee0 insn@0x08048520[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048520[0]: add(0x08048520<134513952>[32], 0x00000001[32]) = 0x08048521<134513953>[32]
Symbolic@0x18f2ee0 insn@0x08048520[0]: writeRegister(eip, 0x08048521<134513953>[32])
Symbolic@0x18f2ee0 insn@0x08048520[0]: undefined_(32) = v34883[32]
Symbolic@0x18f2ee0 insn@0x08048520[0]: readRegister(ebp, v34883[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x08048520[0]: undefined_(32) = v34884[32]
Symbolic@0x18f2ee0 insn@0x08048520[0]: readRegister(esp, v34884[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x08048520[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048520[0]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048520[0]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048520[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048520[0]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), ebp_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048520[0]: finishInstruction(push   ebp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048521<134513953>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048521: mov    ebp, esp
Symbolic@0x18f2ee0: startInstruction(0x08048521: mov    ebp, esp)
Symbolic@0x18f2ee0 insn@0x08048521[1]: number_(32, 134513953) = 0x08048521<134513953>[32]
Symbolic@0x18f2ee0 insn@0x08048521[1]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x08048521[1]: add(0x08048521<134513953>[32], 0x00000002[32]) = 0x08048523<134513955>[32]
Symbolic@0x18f2ee0 insn@0x08048521[1]: writeRegister(eip, 0x08048523<134513955>[32])
Symbolic@0x18f2ee0 insn@0x08048521[1]: undefined_(32) = v34899[32]
Symbolic@0x18f2ee0 insn@0x08048521[1]: readRegister(esp, v34899[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048521[1]: writeRegister(ebp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048521[1]: finishInstruction(mov    ebp, esp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048523<134513955>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048523: push   edi
Symbolic@0x18f2ee0: startInstruction(0x08048523: push   edi)
Symbolic@0x18f2ee0 insn@0x08048523[2]: number_(32, 134513955) = 0x08048523<134513955>[32]
Symbolic@0x18f2ee0 insn@0x08048523[2]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048523[2]: add(0x08048523<134513955>[32], 0x00000001[32]) = 0x08048524<134513956>[32]
Symbolic@0x18f2ee0 insn@0x08048523[2]: writeRegister(eip, 0x08048524<134513956>[32])
Symbolic@0x18f2ee0 insn@0x08048523[2]: undefined_(32) = v34906[32]
Symbolic@0x18f2ee0 insn@0x08048523[2]: readRegister(edi, v34906[32]) = edi_0[32]
Symbolic@0x18f2ee0 insn@0x08048523[2]: undefined_(32) = v34907[32]
Symbolic@0x18f2ee0 insn@0x08048523[2]: readRegister(esp, v34907[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048523[2]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048523[2]: add((add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])
Symbolic@0x18f2ee0 insn@0x08048523[2]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]))
Symbolic@0x18f2ee0 insn@0x08048523[2]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048523[2]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]), edi_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048523[2]: finishInstruction(push   edi)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048524<134513956>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048524: push   esi
Symbolic@0x18f2ee0: startInstruction(0x08048524: push   esi)
Symbolic@0x18f2ee0 insn@0x08048524[3]: number_(32, 134513956) = 0x08048524<134513956>[32]
Symbolic@0x18f2ee0 insn@0x08048524[3]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048524[3]: add(0x08048524<134513956>[32], 0x00000001[32]) = 0x08048525<134513957>[32]
Symbolic@0x18f2ee0 insn@0x08048524[3]: writeRegister(eip, 0x08048525<134513957>[32])
Symbolic@0x18f2ee0 insn@0x08048524[3]: undefined_(32) = v34923[32]
Symbolic@0x18f2ee0 insn@0x08048524[3]: readRegister(esi, v34923[32]) = esi_0[32]
Symbolic@0x18f2ee0 insn@0x08048524[3]: undefined_(32) = v34924[32]
Symbolic@0x18f2ee0 insn@0x08048524[3]: readRegister(esp, v34924[32]) = (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])
Symbolic@0x18f2ee0 insn@0x08048524[3]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048524[3]: add((add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x08048524[3]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048524[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048524[3]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), esi_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048524[3]: finishInstruction(push   esi)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048525<134513957>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048525: push   ebx
Symbolic@0x18f2ee0: startInstruction(0x08048525: push   ebx)
Symbolic@0x18f2ee0 insn@0x08048525[4]: number_(32, 134513957) = 0x08048525<134513957>[32]
Symbolic@0x18f2ee0 insn@0x08048525[4]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048525[4]: add(0x08048525<134513957>[32], 0x00000001[32]) = 0x08048526<134513958>[32]
Symbolic@0x18f2ee0 insn@0x08048525[4]: writeRegister(eip, 0x08048526<134513958>[32])
Symbolic@0x18f2ee0 insn@0x08048525[4]: undefined_(32) = v34940[32]
Symbolic@0x18f2ee0 insn@0x08048525[4]: readRegister(ebx, v34940[32]) = ebx_0[32]
Symbolic@0x18f2ee0 insn@0x08048525[4]: undefined_(32) = v34941[32]
Symbolic@0x18f2ee0 insn@0x08048525[4]: readRegister(esp, v34941[32]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x08048525[4]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048525[4]: add((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])
Symbolic@0x18f2ee0 insn@0x08048525[4]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]))
Symbolic@0x18f2ee0 insn@0x08048525[4]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048525[4]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]), ebx_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048525[4]: finishInstruction(push   ebx)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048526<134513958>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048526: sub    esp, 0x0c
Symbolic@0x18f2ee0: startInstruction(0x08048526: sub    esp, 0x0c)
Symbolic@0x18f2ee0 insn@0x08048526[5]: number_(32, 134513958) = 0x08048526<134513958>[32]
Symbolic@0x18f2ee0 insn@0x08048526[5]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x08048526[5]: add(0x08048526<134513958>[32], 0x00000003[32]) = 0x08048529<134513961>[32]
Symbolic@0x18f2ee0 insn@0x08048526[5]: writeRegister(eip, 0x08048529<134513961>[32])
Symbolic@0x18f2ee0 insn@0x08048526[5]: undefined_(32) = v34957[32]
Symbolic@0x18f2ee0 insn@0x08048526[5]: readRegister(esp, v34957[32]) = (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])
Symbolic@0x18f2ee0 insn@0x08048526[5]: number_(8, 12) = 0x0c[8]
Symbolic@0x18f2ee0 insn@0x08048526[5]: signExtend(0x0c[8], 32) = 0x0000000c[32]
Symbolic@0x18f2ee0 insn@0x08048526[5]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048526[5]: invert(0x0000000c[32]) = 0xfffffff3<4294967283,-13>[32]
Symbolic@0x18f2ee0 insn@0x08048526[5]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048526[5]: addWithCarries((add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]), 0xfffffff3<4294967283,-13>[32], true[1]) = (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])
Symbolic@0x18f2ee0 insn@0x08048526[5]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))
Symbolic@0x18f2ee0 insn@0x08048526[5]: extract((add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x08048526[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x08048526[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x08048526[5]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))
Symbolic@0x18f2ee0 insn@0x08048526[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x08048526[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x08048526[5]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))
Symbolic@0x18f2ee0 insn@0x08048526[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x08048526[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x08048526[5]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))
Symbolic@0x18f2ee0 insn@0x08048526[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x08048526[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x08048526[5]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))
Symbolic@0x18f2ee0 insn@0x08048526[5]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))
Symbolic@0x18f2ee0 insn@0x08048526[5]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))
Symbolic@0x18f2ee0 insn@0x08048526[5]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))
Symbolic@0x18f2ee0 insn@0x08048526[5]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))))
Symbolic@0x18f2ee0 insn@0x08048526[5]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))))
Symbolic@0x18f2ee0 insn@0x08048526[5]: extract((add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x08048526[5]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))
Symbolic@0x18f2ee0 insn@0x08048526[5]: equalToZero((add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) = (zerop[1] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x08048526[5]: writeRegister(zf, (zerop[1] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])))
Symbolic@0x18f2ee0 insn@0x08048526[5]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))
Symbolic@0x18f2ee0 insn@0x08048526[5]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))
Symbolic@0x18f2ee0 insn@0x08048526[5]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))
Symbolic@0x18f2ee0 insn@0x08048526[5]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))
Symbolic@0x18f2ee0 insn@0x08048526[5]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))))
Symbolic@0x18f2ee0 insn@0x08048526[5]: invert((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))
Symbolic@0x18f2ee0 insn@0x08048526[5]: writeRegister(cf, (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))))
Symbolic@0x18f2ee0 insn@0x08048526[5]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))
Symbolic@0x18f2ee0 insn@0x08048526[5]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33]))))
Symbolic@0x18f2ee0 insn@0x08048526[5]: writeRegister(esp, (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
Symbolic@0x18f2ee0 insn@0x08048526[5]: finishInstruction(sub    esp, 0x0c)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048529<134513961>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048529: call   0x0804852e<<Insn>>
Symbolic@0x18f2ee0: startInstruction(0x08048529: call   0x0804852e<<Insn>>)
Symbolic@0x18f2ee0 insn@0x08048529[6]: number_(32, 134513961) = 0x08048529<134513961>[32]
Symbolic@0x18f2ee0 insn@0x08048529[6]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x08048529[6]: add(0x08048529<134513961>[32], 0x00000005[32]) = 0x0804852e<134513966>[32]
Symbolic@0x18f2ee0 insn@0x08048529[6]: writeRegister(eip, 0x0804852e<134513966>[32])
Symbolic@0x18f2ee0 insn@0x08048529[6]: number_(32, 134513966) = 0x0804852e<134513966>[32]
Symbolic@0x18f2ee0 insn@0x08048529[6]: unsignedExtend(0x0804852e<134513966>[32], 32) = 0x0804852e<134513966>[32]
Symbolic@0x18f2ee0 insn@0x08048529[6]: undefined_(32) = v35004[32]
Symbolic@0x18f2ee0 insn@0x08048529[6]: readRegister(esp, v35004[32]) = (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])
Symbolic@0x18f2ee0 insn@0x08048529[6]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048529[6]: add((add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xffffffe0<4294967264,-32>[32])
Symbolic@0x18f2ee0 insn@0x08048529[6]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048529[6]: undefined_(32) = v35007[32]
Symbolic@0x18f2ee0 insn@0x08048529[6]: readRegister(eip, v35007[32]) = 0x0804852e<134513966>[32]
Symbolic@0x18f2ee0 insn@0x08048529[6]: writeMemory(ss, (add[32] esp_0[32] 0xffffffe0<4294967264,-32>[32]), 0x0804852e<134513966>[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048529[6]: writeRegister(esp, (add[32] esp_0[32] 0xffffffe0<4294967264,-32>[32]))
Symbolic@0x18f2ee0 insn@0x08048529[6]: filterCallTarget(0x0804852e<134513966>[32]) = 0x0804852e<134513966>[32]
Symbolic@0x18f2ee0 insn@0x08048529[6]: writeRegister(eip, 0x0804852e<134513966>[32])
Symbolic@0x18f2ee0 insn@0x08048529[6]: finishInstruction(call   0x0804852e<<Insn>>)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xffffffe0<4294967264,-32>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = 0x0804852e<134513966>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xffffffe4<4294967268,-28>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff4<4294967284>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])) 0x0fffffff3<4294967283>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffe3<4294967267,-29>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xffffffe2<4294967266,-30>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xffffffe1<4294967265,-31>[32]) write-only value=0x85<-123>[8]
  addr=(add[32] esp_0[32] 0xffffffe0<4294967264,-32>[32]) write-only value=0x2e[8]
  addr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] esi_0[32])
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] edi_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x0804852e: pop    ebx
Symbolic@0x18f2ee0: startInstruction(0x0804852e: pop    ebx)
Symbolic@0x18f2ee0 insn@0x0804852e[0]: number_(32, 134513966) = 0x0804852e<134513966>[32]
Symbolic@0x18f2ee0 insn@0x0804852e[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x0804852e[0]: add(0x0804852e<134513966>[32], 0x00000001[32]) = 0x0804852f<134513967>[32]
Symbolic@0x18f2ee0 insn@0x0804852e[0]: writeRegister(eip, 0x0804852f<134513967>[32])
Symbolic@0x18f2ee0 insn@0x0804852e[0]: undefined_(32) = v35505[32]
Symbolic@0x18f2ee0 insn@0x0804852e[0]: readRegister(esp, v35505[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x0804852e[0]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x0804852e[0]: add(esp_0[32], 0x00000004[32]) = (add[32] esp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x0804852e[0]: writeRegister(esp, (add[32] esp_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x0804852e[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x0804852e[0]: undefined_(32) = v35508[32]
Symbolic@0x18f2ee0 insn@0x0804852e[0]: readMemory(ss, esp_0[32], v35508[32], true[1]) = v35508[32]
Symbolic@0x18f2ee0 insn@0x0804852e[0]: writeRegister(ebx, v35508[32])
Symbolic@0x18f2ee0 insn@0x0804852e[0]: finishInstruction(pop    ebx)
registers:
  ebx          write-only = v35508[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x0804852f<134513967>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v35508[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v35508[32])

0x0804852f: add    ebx, 0x0000119a<4506>
Symbolic@0x18f2ee0: startInstruction(0x0804852f: add    ebx, 0x0000119a<4506>)
Symbolic@0x18f2ee0 insn@0x0804852f[1]: number_(32, 134513967) = 0x0804852f<134513967>[32]
Symbolic@0x18f2ee0 insn@0x0804852f[1]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x0804852f[1]: add(0x0804852f<134513967>[32], 0x00000006[32]) = 0x08048535<134513973>[32]
Symbolic@0x18f2ee0 insn@0x0804852f[1]: writeRegister(eip, 0x08048535<134513973>[32])
Symbolic@0x18f2ee0 insn@0x0804852f[1]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x0804852f[1]: number_(32, 4506) = 0x0000119a<4506>[32]
Symbolic@0x18f2ee0 insn@0x0804852f[1]: undefined_(32) = v35528[32]
Symbolic@0x18f2ee0 insn@0x0804852f[1]: readRegister(ebx, v35528[32]) = v35508[32]
Symbolic@0x18f2ee0 insn@0x0804852f[1]: addWithCarries(v35508[32], 0x0000119a<4506>[32], false[1]) = (add[32] v35508[32] 0x0000119a<4506>[32])
Symbolic@0x18f2ee0 insn@0x0804852f[1]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: extract((add[32] v35508[32] 0x0000119a<4506>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32]))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v35508[32] 0x0000119a<4506>[32]))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v35508[32] 0x0000119a<4506>[32]))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] v35508[32] 0x0000119a<4506>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v35508[32] 0x0000119a<4506>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v35508[32] 0x0000119a<4506>[32])))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v35508[32] 0x0000119a<4506>[32]))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v35508[32] 0x0000119a<4506>[32]))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] v35508[32] 0x0000119a<4506>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v35508[32] 0x0000119a<4506>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v35508[32] 0x0000119a<4506>[32])))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v35508[32] 0x0000119a<4506>[32]))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v35508[32] 0x0000119a<4506>[32]))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] v35508[32] 0x0000119a<4506>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v35508[32] 0x0000119a<4506>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v35508[32] 0x0000119a<4506>[32])))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32]))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v35508[32] 0x0000119a<4506>[32]))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] v35508[32] 0x0000119a<4506>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32])))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v35508[32] 0x0000119a<4506>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v35508[32] 0x0000119a<4506>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v35508[32] 0x0000119a<4506>[32])))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v35508[32] 0x0000119a<4506>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32])))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v35508[32] 0x0000119a<4506>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32])))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32]))))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32])))))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: extract((add[32] v35508[32] 0x0000119a<4506>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v35508[32] 0x0000119a<4506>[32]))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v35508[32] 0x0000119a<4506>[32])))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: equalToZero((add[32] v35508[32] 0x0000119a<4506>[32])) = (zerop[1] (add[32] v35508[32] 0x0000119a<4506>[32]))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: writeRegister(zf, (zerop[1] (add[32] v35508[32] 0x0000119a<4506>[32])))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: writeRegister(af, (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33])))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: writeRegister(cf, (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33])))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33])))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]))))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: writeRegister(ebx, (add[32] v35508[32] 0x0000119a<4506>[32]))
Symbolic@0x18f2ee0 insn@0x0804852f[1]: finishInstruction(add    ebx, 0x0000119a<4506>)
registers:
  ebx          = (add[32] v35508[32] 0x0000119a<4506>[32])
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x08048535<134513973>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]))
  zf           write-only = (zerop[1] (add[32] v35508[32] 0x0000119a<4506>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v35508[32] 0x0000119a<4506>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v35508[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v35508[32])

0x08048535: lea    eax, [ebx + 0xffffff20<-224>]
Symbolic@0x18f2ee0: startInstruction(0x08048535: lea    eax, [ebx + 0xffffff20<-224>])
Symbolic@0x18f2ee0 insn@0x08048535[2]: number_(32, 134513973) = 0x08048535<134513973>[32]
Symbolic@0x18f2ee0 insn@0x08048535[2]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x08048535[2]: add(0x08048535<134513973>[32], 0x00000006[32]) = 0x0804853b<134513979>[32]
Symbolic@0x18f2ee0 insn@0x08048535[2]: writeRegister(eip, 0x0804853b<134513979>[32])
Symbolic@0x18f2ee0 insn@0x08048535[2]: undefined_(32) = v35569[32]
Symbolic@0x18f2ee0 insn@0x08048535[2]: readRegister(ebx, v35569[32]) = (add[32] v35508[32] 0x0000119a<4506>[32])
Symbolic@0x18f2ee0 insn@0x08048535[2]: number_(32, 4294967072) = 0xffffff20<4294967072,-224>[32]
Symbolic@0x18f2ee0 insn@0x08048535[2]: add((add[32] v35508[32] 0x0000119a<4506>[32]), 0xffffff20<4294967072,-224>[32]) = (add[32] v35508[32] 0x000010ba<4282>[32])
Symbolic@0x18f2ee0 insn@0x08048535[2]: unsignedExtend((add[32] v35508[32] 0x000010ba<4282>[32]), 32) = (add[32] v35508[32] 0x000010ba<4282>[32])
Symbolic@0x18f2ee0 insn@0x08048535[2]: writeRegister(eax, (add[32] v35508[32] 0x000010ba<4282>[32]))
Symbolic@0x18f2ee0 insn@0x08048535[2]: finishInstruction(lea    eax, [ebx + 0xffffff20<-224>])
registers:
  eax          write-only = (add[32] v35508[32] 0x000010ba<4282>[32])
  ebx          = (add[32] v35508[32] 0x0000119a<4506>[32])
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x0804853b<134513979>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]))
  zf           write-only = (zerop[1] (add[32] v35508[32] 0x0000119a<4506>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v35508[32] 0x0000119a<4506>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v35508[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v35508[32])

0x0804853b: lea    edx, [ebx + 0xffffff20<-224>]
Symbolic@0x18f2ee0: startInstruction(0x0804853b: lea    edx, [ebx + 0xffffff20<-224>])
Symbolic@0x18f2ee0 insn@0x0804853b[3]: number_(32, 134513979) = 0x0804853b<134513979>[32]
Symbolic@0x18f2ee0 insn@0x0804853b[3]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x0804853b[3]: add(0x0804853b<134513979>[32], 0x00000006[32]) = 0x08048541<134513985>[32]
Symbolic@0x18f2ee0 insn@0x0804853b[3]: writeRegister(eip, 0x08048541<134513985>[32])
Symbolic@0x18f2ee0 insn@0x0804853b[3]: undefined_(32) = v35577[32]
Symbolic@0x18f2ee0 insn@0x0804853b[3]: readRegister(ebx, v35577[32]) = (add[32] v35508[32] 0x0000119a<4506>[32])
Symbolic@0x18f2ee0 insn@0x0804853b[3]: number_(32, 4294967072) = 0xffffff20<4294967072,-224>[32]
Symbolic@0x18f2ee0 insn@0x0804853b[3]: add((add[32] v35508[32] 0x0000119a<4506>[32]), 0xffffff20<4294967072,-224>[32]) = (add[32] v35508[32] 0x000010ba<4282>[32])
Symbolic@0x18f2ee0 insn@0x0804853b[3]: unsignedExtend((add[32] v35508[32] 0x000010ba<4282>[32]), 32) = (add[32] v35508[32] 0x000010ba<4282>[32])
Symbolic@0x18f2ee0 insn@0x0804853b[3]: writeRegister(edx, (add[32] v35508[32] 0x000010ba<4282>[32]))
Symbolic@0x18f2ee0 insn@0x0804853b[3]: finishInstruction(lea    edx, [ebx + 0xffffff20<-224>])
registers:
  eax          write-only = (add[32] v35508[32] 0x000010ba<4282>[32])
  edx          write-only = (add[32] v35508[32] 0x000010ba<4282>[32])
  ebx          = (add[32] v35508[32] 0x0000119a<4506>[32])
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x08048541<134513985>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v35508[32] 0x0000119a<4506>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v35508[32] 0x0000119a<4506>[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]))
  zf           write-only = (zerop[1] (add[32] v35508[32] 0x0000119a<4506>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v35508[32] 0x0000119a<4506>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33]) (uextend[33] 0x00000021[32] v35508[32]) 0x00000119a<4506>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v35508[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v35508[32])

0x08048541: sub    eax, edx
Symbolic@0x18f2ee0: startInstruction(0x08048541: sub    eax, edx)
Symbolic@0x18f2ee0 insn@0x08048541[4]: number_(32, 134513985) = 0x08048541<134513985>[32]
Symbolic@0x18f2ee0 insn@0x08048541[4]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x08048541[4]: add(0x08048541<134513985>[32], 0x00000002[32]) = 0x08048543<134513987>[32]
Symbolic@0x18f2ee0 insn@0x08048541[4]: writeRegister(eip, 0x08048543<134513987>[32])
Symbolic@0x18f2ee0 insn@0x08048541[4]: undefined_(32) = v35585[32]
Symbolic@0x18f2ee0 insn@0x08048541[4]: readRegister(eax, v35585[32]) = (add[32] v35508[32] 0x000010ba<4282>[32])
Symbolic@0x18f2ee0 insn@0x08048541[4]: undefined_(32) = v35587[32]
Symbolic@0x18f2ee0 insn@0x08048541[4]: readRegister(edx, v35587[32]) = (add[32] v35508[32] 0x000010ba<4282>[32])
Symbolic@0x18f2ee0 insn@0x08048541[4]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048541[4]: invert((add[32] v35508[32] 0x000010ba<4282>[32])) = (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))
Symbolic@0x18f2ee0 insn@0x08048541[4]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048541[4]: addWithCarries((add[32] v35508[32] 0x000010ba<4282>[32]), (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])), true[1]) = (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])
Symbolic@0x18f2ee0 insn@0x08048541[4]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])))))
Symbolic@0x18f2ee0 insn@0x08048541[4]: extract((add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048541[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048541[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048541[4]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048541[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048541[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048541[4]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048541[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048541[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048541[4]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048541[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048541[4]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048541[4]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048541[4]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048541[4]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048541[4]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048541[4]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x08048541[4]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))))
Symbolic@0x18f2ee0 insn@0x08048541[4]: extract((add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048541[4]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048541[4]: equalToZero((add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) = (zerop[1] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048541[4]: writeRegister(zf, (zerop[1] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048541[4]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))))), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])))))
Symbolic@0x18f2ee0 insn@0x08048541[4]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))))), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])))))
Symbolic@0x18f2ee0 insn@0x08048541[4]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))))), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])))))
Symbolic@0x18f2ee0 insn@0x08048541[4]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])))))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))))))
Symbolic@0x18f2ee0 insn@0x08048541[4]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])))))))
Symbolic@0x18f2ee0 insn@0x08048541[4]: invert((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])))))) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))))))
Symbolic@0x18f2ee0 insn@0x08048541[4]: writeRegister(cf, (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])))))))
Symbolic@0x18f2ee0 insn@0x08048541[4]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))))), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])))))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))))))
Symbolic@0x18f2ee0 insn@0x08048541[4]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])))))))
Symbolic@0x18f2ee0 insn@0x08048541[4]: writeRegister(eax, (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048541[4]: finishInstruction(sub    eax, edx)
registers:
  eax          = (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])
  edx          = (add[32] v35508[32] 0x000010ba<4282>[32])
  ebx          = (add[32] v35508[32] 0x0000119a<4506>[32])
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x08048543<134513987>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))))))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))))))
  zf           write-only = (zerop[1] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))))))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v35508[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v35508[32])

0x08048543: sar    eax, 0x02
Symbolic@0x18f2ee0: startInstruction(0x08048543: sar    eax, 0x02)
Symbolic@0x18f2ee0 insn@0x08048543[5]: number_(32, 134513987) = 0x08048543<134513987>[32]
Symbolic@0x18f2ee0 insn@0x08048543[5]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x08048543[5]: add(0x08048543<134513987>[32], 0x00000003[32]) = 0x08048546<134513990>[32]
Symbolic@0x18f2ee0 insn@0x08048543[5]: writeRegister(eip, 0x08048546<134513990>[32])
Symbolic@0x18f2ee0 insn@0x08048543[5]: number_(8, 2) = 0x02[8]
Symbolic@0x18f2ee0 insn@0x08048543[5]: unspecified_(32) = v35638[32]<unspec>
Symbolic@0x18f2ee0 insn@0x08048543[5]: undefined_(32) = v35639[32]
Symbolic@0x18f2ee0 insn@0x08048543[5]: readRegister(eax, v35639[32]) = (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])
Symbolic@0x18f2ee0 insn@0x08048543[5]: extract(0x02[8], 0, 5) = 0x02[5]
Symbolic@0x18f2ee0 insn@0x08048543[5]: equalToZero(0x02[5]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048543[5]: extract(0x02[8], 5, 8) = 0x0[3]
Symbolic@0x18f2ee0 insn@0x08048543[5]: equalToZero(0x0[3]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048543[5]: invert(true[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048543[5]: number_(5, 31) = 0x1f<-1>[5]
Symbolic@0x18f2ee0 insn@0x08048543[5]: add(0x02[5], 0x1f<-1>[5]) = 0x01[5]
Symbolic@0x18f2ee0 insn@0x08048543[5]: equalToZero(0x01[5]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048543[5]: shiftRightArithmetic((add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]), 0x02[5]) = (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048543[5]: extract((add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048543[5]: extract((asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048543[5]: unspecified_(1) = v35651[1]<unspec>
Symbolic@0x18f2ee0 insn@0x08048543[5]: undefined_(1) = v35652[1]
Symbolic@0x18f2ee0 insn@0x08048543[5]: readRegister(af, v35652[1]) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))))))
Symbolic@0x18f2ee0 insn@0x08048543[5]: ite(false[1], (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])))))), v35651[1]<unspec>) = v35651[1]<unspec>
Symbolic@0x18f2ee0 insn@0x08048543[5]: writeRegister(af, v35651[1]<unspec>)
Symbolic@0x18f2ee0 insn@0x08048543[5]: add(0x02[5], 0x1f<-1>[5]) = 0x01[5]
Symbolic@0x18f2ee0 insn@0x08048543[5]: shiftRight((add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]), 0x01[5]) = (concat[32] false[1] (extract[31] 0x00000001[32] 0x00000020[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048543[5]: extract((concat[32] false[1] (extract[31] 0x00000001[32] 0x00000020[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), 0, 1) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048543[5]: ite(false[1], (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048543[5]: undefined_(1) = v35658[1]
Symbolic@0x18f2ee0 insn@0x08048543[5]: readRegister(cf, v35658[1]) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))))))
Symbolic@0x18f2ee0 insn@0x08048543[5]: ite(false[1], (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])))))), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048543[5]: writeRegister(cf, (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048543[5]: unspecified_(1) = v35661[1]<unspec>
Symbolic@0x18f2ee0 insn@0x08048543[5]: undefined_(1) = v35662[1]
Symbolic@0x18f2ee0 insn@0x08048543[5]: readRegister(of, v35662[1]) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))))))
Symbolic@0x18f2ee0 insn@0x08048543[5]: ite(false[1], (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32]))) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] v35508[32] 0x000010ba<4282>[32])) (uextend[33] 0x00000021[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])))))), v35661[1]<unspec>) = v35661[1]<unspec>
Symbolic@0x18f2ee0 insn@0x08048543[5]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048543[5]: ite(false[1], false[1], v35661[1]<unspec>) = v35661[1]<unspec>
Symbolic@0x18f2ee0 insn@0x08048543[5]: writeRegister(of, v35661[1]<unspec>)
Symbolic@0x18f2ee0 insn@0x08048543[5]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048543[5]: extract((asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048543[5]: extract((asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048543[5]: undefined_(1) = v35668[1]
Symbolic@0x18f2ee0 insn@0x08048543[5]: readRegister(pf, v35668[1]) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x08048543[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048543[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048543[5]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x08048543[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048543[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048543[5]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x08048543[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048543[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048543[5]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x08048543[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048543[5]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048543[5]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x08048543[5]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x08048543[5]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x08048543[5]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x08048543[5]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))))
Symbolic@0x18f2ee0 insn@0x08048543[5]: ite(true[1], (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))), (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))))
Symbolic@0x18f2ee0 insn@0x08048543[5]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))))
Symbolic@0x18f2ee0 insn@0x08048543[5]: undefined_(1) = v35687[1]
Symbolic@0x18f2ee0 insn@0x08048543[5]: readRegister(sf, v35687[1]) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048543[5]: ite(true[1], (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) = (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048543[5]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x08048543[5]: undefined_(1) = v35690[1]
Symbolic@0x18f2ee0 insn@0x08048543[5]: readRegister(zf, v35690[1]) = (zerop[1] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048543[5]: equalToZero((asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) = (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048543[5]: ite(true[1], (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), (zerop[1] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) = (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048543[5]: writeRegister(zf, (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x08048543[5]: writeRegister(eax, (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x08048543[5]: finishInstruction(sar    eax, 0x02)
registers:
  eax          = (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
  edx          = (add[32] v35508[32] 0x000010ba<4282>[32])
  ebx          = (add[32] v35508[32] 0x0000119a<4506>[32])
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x08048546<134513990>[32]
  cf           = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
  pf           = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))))
  af           = v35651[1]<unspec>
  zf           = (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  sf           = (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  of           = v35661[1]<unspec>
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v35508[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v35508[32])

0x08048546: mov    dword ss:[ebp + 0xf0<-16>], eax
Symbolic@0x18f2ee0: startInstruction(0x08048546: mov    dword ss:[ebp + 0xf0<-16>], eax)
Symbolic@0x18f2ee0 insn@0x08048546[6]: number_(32, 134513990) = 0x08048546<134513990>[32]
Symbolic@0x18f2ee0 insn@0x08048546[6]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x08048546[6]: add(0x08048546<134513990>[32], 0x00000003[32]) = 0x08048549<134513993>[32]
Symbolic@0x18f2ee0 insn@0x08048546[6]: writeRegister(eip, 0x08048549<134513993>[32])
Symbolic@0x18f2ee0 insn@0x08048546[6]: undefined_(32) = v35699[32]
Symbolic@0x18f2ee0 insn@0x08048546[6]: readRegister(eax, v35699[32]) = (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048546[6]: undefined_(32) = v35701[32]
Symbolic@0x18f2ee0 insn@0x08048546[6]: readRegister(ebp, v35701[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x08048546[6]: number_(8, 240) = 0xf0<-16>[8]
Symbolic@0x18f2ee0 insn@0x08048546[6]: signExtend(0xf0<-16>[8], 32) = 0xfffffff0<4294967280,-16>[32]
Symbolic@0x18f2ee0 insn@0x08048546[6]: add(ebp_0[32], 0xfffffff0<4294967280,-16>[32]) = (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32])
Symbolic@0x18f2ee0 insn@0x08048546[6]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048546[6]: writeMemory(ss, (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]), (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), true[1])
Symbolic@0x18f2ee0 insn@0x08048546[6]: finishInstruction(mov    dword ss:[ebp + 0xf0<-16>], eax)
registers:
  eax          = (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
  edx          = (add[32] v35508[32] 0x000010ba<4282>[32])
  ebx          = (add[32] v35508[32] 0x0000119a<4506>[32])
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x08048549<134513993>[32]
  cf           = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
  pf           = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))))
  af           = v35651[1]<unspec>
  zf           = (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  sf           = (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  of           = v35661[1]<unspec>
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  addr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  addr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  addr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v35508[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v35508[32])

0x08048549: dec    eax
Symbolic@0x18f2ee0: startInstruction(0x08048549: dec    eax)
Symbolic@0x18f2ee0 insn@0x08048549[7]: number_(32, 134513993) = 0x08048549<134513993>[32]
Symbolic@0x18f2ee0 insn@0x08048549[7]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048549[7]: add(0x08048549<134513993>[32], 0x00000001[32]) = 0x0804854a<134513994>[32]
Symbolic@0x18f2ee0 insn@0x08048549[7]: writeRegister(eip, 0x0804854a<134513994>[32])
Symbolic@0x18f2ee0 insn@0x08048549[7]: undefined_(32) = v35716[32]
Symbolic@0x18f2ee0 insn@0x08048549[7]: readRegister(eax, v35716[32]) = (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x08048549[7]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048549[7]: number_(32, 18446744073709551615) = 0xffffffff<4294967295,-1>[32]
Symbolic@0x18f2ee0 insn@0x08048549[7]: addWithCarries((asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), 0xffffffff<4294967295,-1>[32], false[1]) = (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])
Symbolic@0x18f2ee0 insn@0x08048549[7]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]))
Symbolic@0x18f2ee0 insn@0x08048549[7]: extract((add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))
Symbolic@0x18f2ee0 insn@0x08048549[7]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))
Symbolic@0x18f2ee0 insn@0x08048549[7]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))
Symbolic@0x18f2ee0 insn@0x08048549[7]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])))
Symbolic@0x18f2ee0 insn@0x08048549[7]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))
Symbolic@0x18f2ee0 insn@0x08048549[7]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))
Symbolic@0x18f2ee0 insn@0x08048549[7]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])))
Symbolic@0x18f2ee0 insn@0x08048549[7]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))
Symbolic@0x18f2ee0 insn@0x08048549[7]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))
Symbolic@0x18f2ee0 insn@0x08048549[7]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])))
Symbolic@0x18f2ee0 insn@0x08048549[7]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))
Symbolic@0x18f2ee0 insn@0x08048549[7]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))
Symbolic@0x18f2ee0 insn@0x08048549[7]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])))
Symbolic@0x18f2ee0 insn@0x08048549[7]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])))
Symbolic@0x18f2ee0 insn@0x08048549[7]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])))
Symbolic@0x18f2ee0 insn@0x08048549[7]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])))
Symbolic@0x18f2ee0 insn@0x08048549[7]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))))
Symbolic@0x18f2ee0 insn@0x08048549[7]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])))))
Symbolic@0x18f2ee0 insn@0x08048549[7]: extract((add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))
Symbolic@0x18f2ee0 insn@0x08048549[7]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])))
Symbolic@0x18f2ee0 insn@0x08048549[7]: equalToZero((add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) = (zerop[1] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))
Symbolic@0x18f2ee0 insn@0x08048549[7]: writeRegister(zf, (zerop[1] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])))
Symbolic@0x18f2ee0 insn@0x08048549[7]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]))
Symbolic@0x18f2ee0 insn@0x08048549[7]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]))
Symbolic@0x18f2ee0 insn@0x08048549[7]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]))
Symbolic@0x18f2ee0 insn@0x08048549[7]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33])))
Symbolic@0x18f2ee0 insn@0x08048549[7]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]))))
Symbolic@0x18f2ee0 insn@0x08048549[7]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33])))
Symbolic@0x18f2ee0 insn@0x08048549[7]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]))))
Symbolic@0x18f2ee0 insn@0x08048549[7]: writeRegister(eax, (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))
Symbolic@0x18f2ee0 insn@0x08048549[7]: finishInstruction(dec    eax)
registers:
  eax          = (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])
  edx          = (add[32] v35508[32] 0x000010ba<4282>[32])
  ebx          = (add[32] v35508[32] 0x0000119a<4506>[32])
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x0804854a<134513994>[32]
  cf           = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
  pf           = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))))
  af           = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33])))
  zf           = (zerop[1] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))
  sf           = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]))
  of           = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33]) (uextend[33] 0x00000021[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0ffffffff<4294967295>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  addr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  addr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  addr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v35508[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v35508[32])

0x0804854a: cmp    eax, 0xff<-1>
Symbolic@0x18f2ee0: startInstruction(0x0804854a: cmp    eax, 0xff<-1>)
Symbolic@0x18f2ee0 insn@0x0804854a[8]: number_(32, 134513994) = 0x0804854a<134513994>[32]
Symbolic@0x18f2ee0 insn@0x0804854a[8]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x0804854a[8]: add(0x0804854a<134513994>[32], 0x00000003[32]) = 0x0804854d<134513997>[32]
Symbolic@0x18f2ee0 insn@0x0804854a[8]: writeRegister(eip, 0x0804854d<134513997>[32])
Symbolic@0x18f2ee0 insn@0x0804854a[8]: undefined_(32) = v35763[32]
Symbolic@0x18f2ee0 insn@0x0804854a[8]: readRegister(eax, v35763[32]) = (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])
Symbolic@0x18f2ee0 insn@0x0804854a[8]: number_(8, 18446744073709551615) = 0xff<-1>[8]
Symbolic@0x18f2ee0 insn@0x0804854a[8]: signExtend(0xff<-1>[8], 32) = 0xffffffff<4294967295,-1>[32]
Symbolic@0x18f2ee0 insn@0x0804854a[8]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x0804854a[8]: invert(0xffffffff<4294967295,-1>[32]) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x0804854a[8]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x0804854a[8]: addWithCarries((add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32]), 0x00000000[32], true[1]) = (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33]))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: extract((asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: extract((extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: extract((asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: equalToZero((asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) = (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: writeRegister(zf, (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33]))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33]))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33]))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33]))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33]))))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: invert((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33]))) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: writeRegister(cf, (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33]))))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33]))))
Symbolic@0x18f2ee0 insn@0x0804854a[8]: finishInstruction(cmp    eax, 0xff<-1>)
registers:
  eax          = (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])
  edx          = (add[32] v35508[32] 0x000010ba<4282>[32])
  ebx          = (add[32] v35508[32] 0x0000119a<4506>[32])
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x0804854d<134513997>[32]
  cf           = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])))
  pf           = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))))
  af           = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])))
  zf           = (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  sf           = (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  of           = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  addr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  addr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  addr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v35508[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v35508[32])

0x0804854d: je     0x0804856b<<Insn>>
Symbolic@0x18f2ee0: startInstruction(0x0804854d: je     0x0804856b<<Insn>>)
Symbolic@0x18f2ee0 insn@0x0804854d[9]: number_(32, 134513997) = 0x0804854d<134513997>[32]
Symbolic@0x18f2ee0 insn@0x0804854d[9]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x0804854d[9]: add(0x0804854d<134513997>[32], 0x00000002[32]) = 0x0804854f<134513999>[32]
Symbolic@0x18f2ee0 insn@0x0804854d[9]: writeRegister(eip, 0x0804854f<134513999>[32])
Symbolic@0x18f2ee0 insn@0x0804854d[9]: undefined_(1) = v35814[1]
Symbolic@0x18f2ee0 insn@0x0804854d[9]: readRegister(zf, v35814[1]) = (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
Symbolic@0x18f2ee0 insn@0x0804854d[9]: undefined_(32) = v35816[32]
Symbolic@0x18f2ee0 insn@0x0804854d[9]: readRegister(eip, v35816[32]) = 0x0804854f<134513999>[32]
Symbolic@0x18f2ee0 insn@0x0804854d[9]: number_(32, 134514027) = 0x0804856b<134514027>[32]
Symbolic@0x18f2ee0 insn@0x0804854d[9]: unsignedExtend(0x0804856b<134514027>[32], 32) = 0x0804856b<134514027>[32]
Symbolic@0x18f2ee0 insn@0x0804854d[9]: ite((zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))), 0x0804856b<134514027>[32], 0x0804854f<134513999>[32]) = (ite[32] (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0804856b<134514027>[32] 0x0804854f<134513999>[32])
Symbolic@0x18f2ee0 insn@0x0804854d[9]: writeRegister(eip, (ite[32] (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0804856b<134514027>[32] 0x0804854f<134513999>[32]))
Symbolic@0x18f2ee0 insn@0x0804854d[9]: finishInstruction(je     0x0804856b<<Insn>>)
registers:
  eax          = (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])
  edx          = (add[32] v35508[32] 0x000010ba<4282>[32])
  ebx          = (add[32] v35508[32] 0x0000119a<4506>[32])
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          = (ite[32] (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) 0x0804856b<134514027>[32] 0x0804854f<134513999>[32])
  cf           = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])))
  pf           = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000001[32] 0x00000002[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000002[32] 0x00000003[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000003[32] 0x00000004[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000004[32] 0x00000005[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000005[32] 0x00000006[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000006[32] 0x00000007[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32]))) (extract[1] 0x00000007[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))))
  af           = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])))
  zf           = (zerop[1] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  sf           = (extract[1] 0x0000001f[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  of           = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (add[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])) 0xffffffff<4294967295,-1>[32])) 0x000000000[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  addr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  addr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  addr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] (asr[32] 0x02[5] (add[32] (invert[32] (add[32] v35508[32] 0x000010ba<4282>[32])) v35508[32] 0x000010bb<4283>[32])))
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v35508[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v35508[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v35508[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x0804854f: lea    esi, [edx + eax*0x04]
Symbolic@0x18f2ee0: startInstruction(0x0804854f: lea    esi, [edx + eax*0x04])
Symbolic@0x18f2ee0 insn@0x0804854f[0]: number_(32, 134513999) = 0x0804854f<134513999>[32]
Symbolic@0x18f2ee0 insn@0x0804854f[0]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x0804854f[0]: add(0x0804854f<134513999>[32], 0x00000003[32]) = 0x08048552<134514002>[32]
Symbolic@0x18f2ee0 insn@0x0804854f[0]: writeRegister(eip, 0x08048552<134514002>[32])
Symbolic@0x18f2ee0 insn@0x0804854f[0]: undefined_(32) = v36309[32]
Symbolic@0x18f2ee0 insn@0x0804854f[0]: readRegister(edx, v36309[32]) = edx_0[32]
Symbolic@0x18f2ee0 insn@0x0804854f[0]: undefined_(32) = v36310[32]
Symbolic@0x18f2ee0 insn@0x0804854f[0]: readRegister(eax, v36310[32]) = eax_0[32]
Symbolic@0x18f2ee0 insn@0x0804854f[0]: number_(8, 4) = 0x04[8]
Symbolic@0x18f2ee0 insn@0x0804854f[0]: signExtend(0x04[8], 32) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x0804854f[0]: unsignedMultiply(eax_0[32], 0x00000004[32]) = (umul[64] eax_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x0804854f[0]: extract((umul[64] eax_0[32] 0x00000004[32]), 0, 32) = (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x0804854f[0]: add(edx_0[32], (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32]))) = (add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32])
Symbolic@0x18f2ee0 insn@0x0804854f[0]: unsignedExtend((add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32]), 32) = (add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32])
Symbolic@0x18f2ee0 insn@0x0804854f[0]: writeRegister(esi, (add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32]))
Symbolic@0x18f2ee0 insn@0x0804854f[0]: finishInstruction(lea    esi, [edx + eax*0x04])
registers:
  esi          write-only = (add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32])
  eip          write-only = 0x08048552<134514002>[32]
  fpstatus_top = 0x0[3]
memory:

0x08048552: xor    edi, edi
Symbolic@0x18f2ee0: startInstruction(0x08048552: xor    edi, edi)
Symbolic@0x18f2ee0 insn@0x08048552[1]: number_(32, 134514002) = 0x08048552<134514002>[32]
Symbolic@0x18f2ee0 insn@0x08048552[1]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x08048552[1]: add(0x08048552<134514002>[32], 0x00000002[32]) = 0x08048554<134514004>[32]
Symbolic@0x18f2ee0 insn@0x08048552[1]: writeRegister(eip, 0x08048554<134514004>[32])
Symbolic@0x18f2ee0 insn@0x08048552[1]: number_(32, 0) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x08048552[1]: extract(0x00000000[32], 0, 8) = 0x00[8]
Symbolic@0x18f2ee0 insn@0x08048552[1]: extract(0x00[8], 1, 2) = false[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: extract(0x00[8], 0, 1) = false[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: extract(0x00[8], 3, 4) = false[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: extract(0x00[8], 2, 3) = false[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: extract(0x00[8], 5, 6) = false[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: extract(0x00[8], 4, 5) = false[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: extract(0x00[8], 7, 8) = false[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: extract(0x00[8], 6, 7) = false[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: xor_(false[1], false[1]) = false[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: writeRegister(pf, true[1])
Symbolic@0x18f2ee0 insn@0x08048552[1]: extract(0x00000000[32], 31, 32) = false[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: writeRegister(sf, false[1])
Symbolic@0x18f2ee0 insn@0x08048552[1]: equalToZero(0x00000000[32]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: writeRegister(zf, true[1])
Symbolic@0x18f2ee0 insn@0x08048552[1]: writeRegister(edi, 0x00000000[32])
Symbolic@0x18f2ee0 insn@0x08048552[1]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: writeRegister(of, false[1])
Symbolic@0x18f2ee0 insn@0x08048552[1]: unspecified_(1) = v36332[1]<unspec>
Symbolic@0x18f2ee0 insn@0x08048552[1]: writeRegister(af, v36332[1]<unspec>)
Symbolic@0x18f2ee0 insn@0x08048552[1]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048552[1]: writeRegister(cf, false[1])
Symbolic@0x18f2ee0 insn@0x08048552[1]: finishInstruction(xor    edi, edi)
registers:
  esi          write-only = (add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32])
  edi          write-only = 0x00000000[32]
  eip          write-only = 0x08048554<134514004>[32]
  cf           write-only = false[1]
  pf           write-only = true[1]
  af           write-only = v36332[1]<unspec>
  zf           write-only = true[1]
  sf           write-only = false[1]
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:

0x08048554: lea    esi, [esi + 0x00000000]
Symbolic@0x18f2ee0: startInstruction(0x08048554: lea    esi, [esi + 0x00000000])
Symbolic@0x18f2ee0 insn@0x08048554[2]: number_(32, 134514004) = 0x08048554<134514004>[32]
Symbolic@0x18f2ee0 insn@0x08048554[2]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x08048554[2]: add(0x08048554<134514004>[32], 0x00000006[32]) = 0x0804855a<134514010>[32]
Symbolic@0x18f2ee0 insn@0x08048554[2]: writeRegister(eip, 0x0804855a<134514010>[32])
Symbolic@0x18f2ee0 insn@0x08048554[2]: undefined_(32) = v36337[32]
Symbolic@0x18f2ee0 insn@0x08048554[2]: readRegister(esi, v36337[32]) = (add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32])
Symbolic@0x18f2ee0 insn@0x08048554[2]: number_(32, 0) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x08048554[2]: add((add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32]), 0x00000000[32]) = (add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32])
Symbolic@0x18f2ee0 insn@0x08048554[2]: unsignedExtend((add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32]), 32) = (add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32])
Symbolic@0x18f2ee0 insn@0x08048554[2]: writeRegister(esi, (add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32]))
Symbolic@0x18f2ee0 insn@0x08048554[2]: finishInstruction(lea    esi, [esi + 0x00000000])
registers:
  esi          = (add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32])
  edi          write-only = 0x00000000[32]
  eip          write-only = 0x0804855a<134514010>[32]
  cf           write-only = false[1]
  pf           write-only = true[1]
  af           write-only = v36332[1]<unspec>
  zf           write-only = true[1]
  sf           write-only = false[1]
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:

0x0804855a: lea    edi, [edi + 0x00000000]
Symbolic@0x18f2ee0: startInstruction(0x0804855a: lea    edi, [edi + 0x00000000])
Symbolic@0x18f2ee0 insn@0x0804855a[3]: number_(32, 134514010) = 0x0804855a<134514010>[32]
Symbolic@0x18f2ee0 insn@0x0804855a[3]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x0804855a[3]: add(0x0804855a<134514010>[32], 0x00000006[32]) = 0x08048560<134514016>[32]
Symbolic@0x18f2ee0 insn@0x0804855a[3]: writeRegister(eip, 0x08048560<134514016>[32])
Symbolic@0x18f2ee0 insn@0x0804855a[3]: undefined_(32) = v36346[32]
Symbolic@0x18f2ee0 insn@0x0804855a[3]: readRegister(edi, v36346[32]) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x0804855a[3]: number_(32, 0) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x0804855a[3]: add(0x00000000[32], 0x00000000[32]) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x0804855a[3]: unsignedExtend(0x00000000[32], 32) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x0804855a[3]: writeRegister(edi, 0x00000000[32])
Symbolic@0x18f2ee0 insn@0x0804855a[3]: finishInstruction(lea    edi, [edi + 0x00000000])
registers:
  esi          = (add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32])
  edi          = 0x00000000[32]
  eip          write-only = 0x08048560<134514016>[32]
  cf           write-only = false[1]
  pf           write-only = true[1]
  af           write-only = v36332[1]<unspec>
  zf           write-only = true[1]
  sf           write-only = false[1]
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:

0x08048560: call   dword ds:[esi]
Symbolic@0x18f2ee0: startInstruction(0x08048560: call   dword ds:[esi])
Symbolic@0x18f2ee0 insn@0x08048560[4]: number_(32, 134514016) = 0x08048560<134514016>[32]
Symbolic@0x18f2ee0 insn@0x08048560[4]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x08048560[4]: add(0x08048560<134514016>[32], 0x00000002[32]) = 0x08048562<134514018>[32]
Symbolic@0x18f2ee0 insn@0x08048560[4]: writeRegister(eip, 0x08048562<134514018>[32])
Symbolic@0x18f2ee0 insn@0x08048560[4]: undefined_(32) = v36355[32]
Symbolic@0x18f2ee0 insn@0x08048560[4]: readRegister(esi, v36355[32]) = (add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32])
Symbolic@0x18f2ee0 insn@0x08048560[4]: undefined_(32) = v36357[32]
Symbolic@0x18f2ee0 insn@0x08048560[4]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048560[4]: readMemory(ds, (add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32]), v36357[32], true[1]) = v36357[32]
Symbolic@0x18f2ee0 insn@0x08048560[4]: unsignedExtend(v36357[32], 32) = v36357[32]
Symbolic@0x18f2ee0 insn@0x08048560[4]: undefined_(32) = v36374[32]
Symbolic@0x18f2ee0 insn@0x08048560[4]: readRegister(esp, v36374[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x08048560[4]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048560[4]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048560[4]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048560[4]: undefined_(32) = v36376[32]
Symbolic@0x18f2ee0 insn@0x08048560[4]: readRegister(eip, v36376[32]) = 0x08048562<134514018>[32]
Symbolic@0x18f2ee0 insn@0x08048560[4]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0x08048562<134514018>[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048560[4]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048560[4]: filterCallTarget(v36357[32]) = v36357[32]
Symbolic@0x18f2ee0 insn@0x08048560[4]: writeRegister(eip, v36357[32])
Symbolic@0x18f2ee0 insn@0x08048560[4]: finishInstruction(call   dword ds:[esi])
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  esi          = (add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32])
  edi          = 0x00000000[32]
  eip          = v36357[32]
  cf           write-only = false[1]
  pf           write-only = true[1]
  af           write-only = v36332[1]<unspec>
  zf           write-only = true[1]
  sf           write-only = false[1]
  of           write-only = false[1]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=0x85<-123>[8]
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=0x62[8]
  addr=(add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v36357[32])
  addr=(add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v36357[32])
  addr=(add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v36357[32])
  addr=(add[32] (extract[32] 0x00000000[32] 0x00000020[32] (umul[64] eax_0[32] 0x00000004[32])) edx_0[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v36357[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048562: inc    edi
Symbolic@0x18f2ee0: startInstruction(0x08048562: inc    edi)
Symbolic@0x18f2ee0 insn@0x08048562[0]: number_(32, 134514018) = 0x08048562<134514018>[32]
Symbolic@0x18f2ee0 insn@0x08048562[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048562[0]: add(0x08048562<134514018>[32], 0x00000001[32]) = 0x08048563<134514019>[32]
Symbolic@0x18f2ee0 insn@0x08048562[0]: writeRegister(eip, 0x08048563<134514019>[32])
Symbolic@0x18f2ee0 insn@0x08048562[0]: undefined_(32) = v36874[32]
Symbolic@0x18f2ee0 insn@0x08048562[0]: readRegister(edi, v36874[32]) = edi_0[32]
Symbolic@0x18f2ee0 insn@0x08048562[0]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048562[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048562[0]: addWithCarries(edi_0[32], 0x00000001[32], false[1]) = (add[32] edi_0[32] 0x00000001[32])
Symbolic@0x18f2ee0 insn@0x08048562[0]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]))
Symbolic@0x18f2ee0 insn@0x08048562[0]: extract((add[32] edi_0[32] 0x00000001[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048562[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] edi_0[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048562[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] edi_0[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048562[0]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] edi_0[32] 0x00000001[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] edi_0[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] edi_0[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048562[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] edi_0[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048562[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] edi_0[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048562[0]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] edi_0[32] 0x00000001[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] edi_0[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] edi_0[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048562[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] edi_0[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048562[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] edi_0[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048562[0]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] edi_0[32] 0x00000001[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] edi_0[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] edi_0[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048562[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048562[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] edi_0[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048562[0]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] edi_0[32] 0x00000001[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048562[0]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] edi_0[32] 0x00000001[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] edi_0[32] 0x00000001[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] edi_0[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048562[0]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] edi_0[32] 0x00000001[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048562[0]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] edi_0[32] 0x00000001[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048562[0]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32]))))
Symbolic@0x18f2ee0 insn@0x08048562[0]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32])))))
Symbolic@0x18f2ee0 insn@0x08048562[0]: extract((add[32] edi_0[32] 0x00000001[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] edi_0[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048562[0]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] edi_0[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048562[0]: equalToZero((add[32] edi_0[32] 0x00000001[32])) = (zerop[1] (add[32] edi_0[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048562[0]: writeRegister(zf, (zerop[1] (add[32] edi_0[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048562[0]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]))
Symbolic@0x18f2ee0 insn@0x08048562[0]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]))
Symbolic@0x18f2ee0 insn@0x08048562[0]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]))
Symbolic@0x18f2ee0 insn@0x08048562[0]: writeRegister(af, (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33])))
Symbolic@0x18f2ee0 insn@0x08048562[0]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33])))
Symbolic@0x18f2ee0 insn@0x08048562[0]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]))))
Symbolic@0x18f2ee0 insn@0x08048562[0]: writeRegister(edi, (add[32] edi_0[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048562[0]: finishInstruction(inc    edi)
registers:
  edi          read-before-write = (add[32] edi_0[32] 0x00000001[32])
  eip          write-only = 0x08048563<134514019>[32]
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] edi_0[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] edi_0[32] 0x00000001[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]))
  zf           write-only = (zerop[1] (add[32] edi_0[32] 0x00000001[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] edi_0[32] 0x00000001[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] edi_0[32]) 0x000000001[33])))
  fpstatus_top = 0x0[3]
memory:

0x08048563: sub    esi, 0x04
Symbolic@0x18f2ee0: startInstruction(0x08048563: sub    esi, 0x04)
Symbolic@0x18f2ee0 insn@0x08048563[1]: number_(32, 134514019) = 0x08048563<134514019>[32]
Symbolic@0x18f2ee0 insn@0x08048563[1]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x08048563[1]: add(0x08048563<134514019>[32], 0x00000003[32]) = 0x08048566<134514022>[32]
Symbolic@0x18f2ee0 insn@0x08048563[1]: writeRegister(eip, 0x08048566<134514022>[32])
Symbolic@0x18f2ee0 insn@0x08048563[1]: undefined_(32) = v36914[32]
Symbolic@0x18f2ee0 insn@0x08048563[1]: readRegister(esi, v36914[32]) = esi_0[32]
Symbolic@0x18f2ee0 insn@0x08048563[1]: number_(8, 4) = 0x04[8]
Symbolic@0x18f2ee0 insn@0x08048563[1]: signExtend(0x04[8], 32) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x08048563[1]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048563[1]: invert(0x00000004[32]) = 0xfffffffb<4294967291,-5>[32]
Symbolic@0x18f2ee0 insn@0x08048563[1]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048563[1]: addWithCarries(esi_0[32], 0xfffffffb<4294967291,-5>[32], true[1]) = (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048563[1]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33]))
Symbolic@0x18f2ee0 insn@0x08048563[1]: extract((add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048563[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048563[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048563[1]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])))
Symbolic@0x18f2ee0 insn@0x08048563[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048563[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048563[1]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])))
Symbolic@0x18f2ee0 insn@0x08048563[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048563[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048563[1]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])))
Symbolic@0x18f2ee0 insn@0x08048563[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048563[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048563[1]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])))
Symbolic@0x18f2ee0 insn@0x08048563[1]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])))
Symbolic@0x18f2ee0 insn@0x08048563[1]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])))
Symbolic@0x18f2ee0 insn@0x08048563[1]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])))
Symbolic@0x18f2ee0 insn@0x08048563[1]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))))
Symbolic@0x18f2ee0 insn@0x08048563[1]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])))))
Symbolic@0x18f2ee0 insn@0x08048563[1]: extract((add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048563[1]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])))
Symbolic@0x18f2ee0 insn@0x08048563[1]: equalToZero((add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) = (zerop[1] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048563[1]: writeRegister(zf, (zerop[1] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])))
Symbolic@0x18f2ee0 insn@0x08048563[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33]))
Symbolic@0x18f2ee0 insn@0x08048563[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33]))
Symbolic@0x18f2ee0 insn@0x08048563[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33]))
Symbolic@0x18f2ee0 insn@0x08048563[1]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33]))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33])))
Symbolic@0x18f2ee0 insn@0x08048563[1]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33]))))
Symbolic@0x18f2ee0 insn@0x08048563[1]: invert((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33]))) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33])))
Symbolic@0x18f2ee0 insn@0x08048563[1]: writeRegister(cf, (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33]))))
Symbolic@0x18f2ee0 insn@0x08048563[1]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33])))
Symbolic@0x18f2ee0 insn@0x08048563[1]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33]))))
Symbolic@0x18f2ee0 insn@0x08048563[1]: writeRegister(esi, (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048563[1]: finishInstruction(sub    esi, 0x04)
registers:
  esi          read-before-write = (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])
  edi          read-before-write = (add[32] edi_0[32] 0x00000001[32])
  eip          write-only = 0x08048566<134514022>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33])))
  zf           write-only = (zerop[1] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] esi_0[32]) 0x0fffffffb<4294967291>[33])))
  fpstatus_top = 0x0[3]
memory:

0x08048566: cmp    dword ss:[ebp + 0xf0<-16>], edi
Symbolic@0x18f2ee0: startInstruction(0x08048566: cmp    dword ss:[ebp + 0xf0<-16>], edi)
Symbolic@0x18f2ee0 insn@0x08048566[2]: number_(32, 134514022) = 0x08048566<134514022>[32]
Symbolic@0x18f2ee0 insn@0x08048566[2]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x08048566[2]: add(0x08048566<134514022>[32], 0x00000003[32]) = 0x08048569<134514025>[32]
Symbolic@0x18f2ee0 insn@0x08048566[2]: writeRegister(eip, 0x08048569<134514025>[32])
Symbolic@0x18f2ee0 insn@0x08048566[2]: undefined_(32) = v36964[32]
Symbolic@0x18f2ee0 insn@0x08048566[2]: readRegister(ebp, v36964[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x08048566[2]: number_(8, 240) = 0xf0<-16>[8]
Symbolic@0x18f2ee0 insn@0x08048566[2]: signExtend(0xf0<-16>[8], 32) = 0xfffffff0<4294967280,-16>[32]
Symbolic@0x18f2ee0 insn@0x08048566[2]: add(ebp_0[32], 0xfffffff0<4294967280,-16>[32]) = (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32])
Symbolic@0x18f2ee0 insn@0x08048566[2]: undefined_(32) = v36967[32]
Symbolic@0x18f2ee0 insn@0x08048566[2]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048566[2]: readMemory(ss, (add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]), v36967[32], true[1]) = v36967[32]
Symbolic@0x18f2ee0 insn@0x08048566[2]: undefined_(32) = v36983[32]
Symbolic@0x18f2ee0 insn@0x08048566[2]: readRegister(edi, v36983[32]) = (add[32] edi_0[32] 0x00000001[32])
Symbolic@0x18f2ee0 insn@0x08048566[2]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048566[2]: invert((add[32] edi_0[32] 0x00000001[32])) = (invert[32] (add[32] edi_0[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048566[2]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048566[2]: addWithCarries(v36967[32], (invert[32] (add[32] edi_0[32] 0x00000001[32])), true[1]) = (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])
Symbolic@0x18f2ee0 insn@0x08048566[2]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32])))
Symbolic@0x18f2ee0 insn@0x08048566[2]: extract((add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048566[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048566[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048566[2]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048566[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048566[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048566[2]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048566[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048566[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048566[2]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048566[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048566[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048566[2]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048566[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048566[2]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048566[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048566[2]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))))
Symbolic@0x18f2ee0 insn@0x08048566[2]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])))))
Symbolic@0x18f2ee0 insn@0x08048566[2]: extract((add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048566[2]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048566[2]: equalToZero((add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) = (zerop[1] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048566[2]: writeRegister(zf, (zerop[1] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048566[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]))), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32])))
Symbolic@0x18f2ee0 insn@0x08048566[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]))), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32])))
Symbolic@0x18f2ee0 insn@0x08048566[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]))), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32])))
Symbolic@0x18f2ee0 insn@0x08048566[2]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32])))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]))))
Symbolic@0x18f2ee0 insn@0x08048566[2]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32])))))
Symbolic@0x18f2ee0 insn@0x08048566[2]: invert((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32])))) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]))))
Symbolic@0x18f2ee0 insn@0x08048566[2]: writeRegister(cf, (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32])))))
Symbolic@0x18f2ee0 insn@0x08048566[2]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]))), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32])))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]))))
Symbolic@0x18f2ee0 insn@0x08048566[2]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32])))))
Symbolic@0x18f2ee0 insn@0x08048566[2]: finishInstruction(cmp    dword ss:[ebp + 0xf0<-16>], edi)
registers:
  esi          read-before-write = (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])
  edi          read-before-write = (add[32] edi_0[32] 0x00000001[32])
  eip          write-only = 0x08048569<134514025>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]))))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]))))
  zf           write-only = (zerop[1] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]))))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v36967[32])
  addr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v36967[32])
  addr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v36967[32])
  addr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v36967[32])

0x08048569: jne    0x08048560<<Insn>>
Symbolic@0x18f2ee0: startInstruction(0x08048569: jne    0x08048560<<Insn>>)
Symbolic@0x18f2ee0 insn@0x08048569[3]: number_(32, 134514025) = 0x08048569<134514025>[32]
Symbolic@0x18f2ee0 insn@0x08048569[3]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x08048569[3]: add(0x08048569<134514025>[32], 0x00000002[32]) = 0x0804856b<134514027>[32]
Symbolic@0x18f2ee0 insn@0x08048569[3]: writeRegister(eip, 0x0804856b<134514027>[32])
Symbolic@0x18f2ee0 insn@0x08048569[3]: undefined_(1) = v37033[1]
Symbolic@0x18f2ee0 insn@0x08048569[3]: readRegister(zf, v37033[1]) = (zerop[1] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048569[3]: invert((zerop[1] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))) = (invert[1] (zerop[1] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048569[3]: undefined_(32) = v37036[32]
Symbolic@0x18f2ee0 insn@0x08048569[3]: readRegister(eip, v37036[32]) = 0x0804856b<134514027>[32]
Symbolic@0x18f2ee0 insn@0x08048569[3]: number_(32, 134514016) = 0x08048560<134514016>[32]
Symbolic@0x18f2ee0 insn@0x08048569[3]: unsignedExtend(0x08048560<134514016>[32], 32) = 0x08048560<134514016>[32]
Symbolic@0x18f2ee0 insn@0x08048569[3]: ite((invert[1] (zerop[1] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))), 0x08048560<134514016>[32], 0x0804856b<134514027>[32]) = (ite[32] (invert[1] (zerop[1] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))) 0x08048560<134514016>[32] 0x0804856b<134514027>[32])
Symbolic@0x18f2ee0 insn@0x08048569[3]: writeRegister(eip, (ite[32] (invert[1] (zerop[1] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))) 0x08048560<134514016>[32] 0x0804856b<134514027>[32]))
Symbolic@0x18f2ee0 insn@0x08048569[3]: finishInstruction(jne    0x08048560<<Insn>>)
registers:
  esi          read-before-write = (add[32] esi_0[32] 0xfffffffc<4294967292,-4>[32])
  edi          read-before-write = (add[32] edi_0[32] 0x00000001[32])
  eip          = (ite[32] (invert[1] (zerop[1] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))) 0x08048560<134514016>[32] 0x0804856b<134514027>[32])
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]))))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]))))
  zf           = (zerop[1] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] (add[32] edi_0[32] 0x00000001[32])) v36967[32] 0x00000001[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] (add[32] edi_0[32] 0x00000001[32]))) (uextend[33] 0x00000021[32] v36967[32]))))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0xfffffff3<4294967283,-13>[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v36967[32])
  addr=(add[32] ebp_0[32] 0xfffffff2<4294967282,-14>[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v36967[32])
  addr=(add[32] ebp_0[32] 0xfffffff1<4294967281,-15>[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v36967[32])
  addr=(add[32] ebp_0[32] 0xfffffff0<4294967280,-16>[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v36967[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x0804856b: call   0x080485b0<_fini>
Symbolic@0x18f2ee0: startInstruction(0x0804856b: call   0x080485b0<_fini>)
Symbolic@0x18f2ee0 insn@0x0804856b[0]: number_(32, 134514027) = 0x0804856b<134514027>[32]
Symbolic@0x18f2ee0 insn@0x0804856b[0]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x0804856b[0]: add(0x0804856b<134514027>[32], 0x00000005[32]) = 0x08048570<134514032>[32]
Symbolic@0x18f2ee0 insn@0x0804856b[0]: writeRegister(eip, 0x08048570<134514032>[32])
Symbolic@0x18f2ee0 insn@0x0804856b[0]: number_(32, 134514096) = 0x080485b0<134514096>[32]
Symbolic@0x18f2ee0 insn@0x0804856b[0]: unsignedExtend(0x080485b0<134514096>[32], 32) = 0x080485b0<134514096>[32]
Symbolic@0x18f2ee0 insn@0x0804856b[0]: undefined_(32) = v37530[32]
Symbolic@0x18f2ee0 insn@0x0804856b[0]: readRegister(esp, v37530[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x0804856b[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x0804856b[0]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x0804856b[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x0804856b[0]: undefined_(32) = v37532[32]
Symbolic@0x18f2ee0 insn@0x0804856b[0]: readRegister(eip, v37532[32]) = 0x08048570<134514032>[32]
Symbolic@0x18f2ee0 insn@0x0804856b[0]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0x08048570<134514032>[32], true[1])
Symbolic@0x18f2ee0 insn@0x0804856b[0]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x0804856b[0]: filterCallTarget(0x080485b0<134514096>[32]) = 0x080485b0<134514096>[32]
Symbolic@0x18f2ee0 insn@0x0804856b[0]: writeRegister(eip, 0x080485b0<134514096>[32])
Symbolic@0x18f2ee0 insn@0x0804856b[0]: finishInstruction(call   0x080485b0<_fini>)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = 0x080485b0<134514096>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=0x85<-123>[8]
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=0x70[8]
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048570: add    esp, 0x0c
Symbolic@0x18f2ee0: startInstruction(0x08048570: add    esp, 0x0c)
Symbolic@0x18f2ee0 insn@0x08048570[0]: number_(32, 134514032) = 0x08048570<134514032>[32]
Symbolic@0x18f2ee0 insn@0x08048570[0]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x08048570[0]: add(0x08048570<134514032>[32], 0x00000003[32]) = 0x08048573<134514035>[32]
Symbolic@0x18f2ee0 insn@0x08048570[0]: writeRegister(eip, 0x08048573<134514035>[32])
Symbolic@0x18f2ee0 insn@0x08048570[0]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048570[0]: number_(8, 12) = 0x0c[8]
Symbolic@0x18f2ee0 insn@0x08048570[0]: undefined_(32) = v38030[32]
Symbolic@0x18f2ee0 insn@0x08048570[0]: readRegister(esp, v38030[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x08048570[0]: signExtend(0x0c[8], 32) = 0x0000000c[32]
Symbolic@0x18f2ee0 insn@0x08048570[0]: addWithCarries(esp_0[32], 0x0000000c[32], false[1]) = (add[32] esp_0[32] 0x0000000c[32])
Symbolic@0x18f2ee0 insn@0x08048570[0]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
Symbolic@0x18f2ee0 insn@0x08048570[0]: extract((add[32] esp_0[32] 0x0000000c[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x08048570[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x08048570[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x08048570[0]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])))
Symbolic@0x18f2ee0 insn@0x08048570[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x08048570[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x08048570[0]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])))
Symbolic@0x18f2ee0 insn@0x08048570[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x08048570[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x08048570[0]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])))
Symbolic@0x18f2ee0 insn@0x08048570[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x08048570[0]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x08048570[0]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])))
Symbolic@0x18f2ee0 insn@0x08048570[0]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])))
Symbolic@0x18f2ee0 insn@0x08048570[0]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])))
Symbolic@0x18f2ee0 insn@0x08048570[0]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])))
Symbolic@0x18f2ee0 insn@0x08048570[0]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))
Symbolic@0x18f2ee0 insn@0x08048570[0]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32])))))
Symbolic@0x18f2ee0 insn@0x08048570[0]: extract((add[32] esp_0[32] 0x0000000c[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x08048570[0]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32])))
Symbolic@0x18f2ee0 insn@0x08048570[0]: equalToZero((add[32] esp_0[32] 0x0000000c[32])) = (zerop[1] (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x08048570[0]: writeRegister(zf, (zerop[1] (add[32] esp_0[32] 0x0000000c[32])))
Symbolic@0x18f2ee0 insn@0x08048570[0]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
Symbolic@0x18f2ee0 insn@0x08048570[0]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
Symbolic@0x18f2ee0 insn@0x08048570[0]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
Symbolic@0x18f2ee0 insn@0x08048570[0]: writeRegister(af, (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))
Symbolic@0x18f2ee0 insn@0x08048570[0]: writeRegister(cf, (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))
Symbolic@0x18f2ee0 insn@0x08048570[0]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))
Symbolic@0x18f2ee0 insn@0x08048570[0]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))))
Symbolic@0x18f2ee0 insn@0x08048570[0]: writeRegister(esp, (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x08048570[0]: finishInstruction(add    esp, 0x0c)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0x0000000c[32])
  eip          write-only = 0x08048573<134514035>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0x0000000c[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))
  fpstatus_top = 0x0[3]
memory:

0x08048573: pop    ebx
Symbolic@0x18f2ee0: startInstruction(0x08048573: pop    ebx)
Symbolic@0x18f2ee0 insn@0x08048573[1]: number_(32, 134514035) = 0x08048573<134514035>[32]
Symbolic@0x18f2ee0 insn@0x08048573[1]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048573[1]: add(0x08048573<134514035>[32], 0x00000001[32]) = 0x08048574<134514036>[32]
Symbolic@0x18f2ee0 insn@0x08048573[1]: writeRegister(eip, 0x08048574<134514036>[32])
Symbolic@0x18f2ee0 insn@0x08048573[1]: undefined_(32) = v38071[32]
Symbolic@0x18f2ee0 insn@0x08048573[1]: readRegister(esp, v38071[32]) = (add[32] esp_0[32] 0x0000000c[32])
Symbolic@0x18f2ee0 insn@0x08048573[1]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x08048573[1]: add((add[32] esp_0[32] 0x0000000c[32]), 0x00000004[32]) = (add[32] esp_0[32] 0x00000010[32])
Symbolic@0x18f2ee0 insn@0x08048573[1]: writeRegister(esp, (add[32] esp_0[32] 0x00000010[32]))
Symbolic@0x18f2ee0 insn@0x08048573[1]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048573[1]: undefined_(32) = v38075[32]
Symbolic@0x18f2ee0 insn@0x08048573[1]: readMemory(ss, (add[32] esp_0[32] 0x0000000c[32]), v38075[32], true[1]) = v38075[32]
Symbolic@0x18f2ee0 insn@0x08048573[1]: writeRegister(ebx, v38075[32])
Symbolic@0x18f2ee0 insn@0x08048573[1]: finishInstruction(pop    ebx)
registers:
  ebx          write-only = v38075[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000010[32])
  eip          write-only = 0x08048574<134514036>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0x0000000c[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x0000000f[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38075[32])
  addr=(add[32] esp_0[32] 0x0000000e[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38075[32])
  addr=(add[32] esp_0[32] 0x0000000d[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38075[32])
  addr=(add[32] esp_0[32] 0x0000000c[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38075[32])

0x08048574: pop    esi
Symbolic@0x18f2ee0: startInstruction(0x08048574: pop    esi)
Symbolic@0x18f2ee0 insn@0x08048574[2]: number_(32, 134514036) = 0x08048574<134514036>[32]
Symbolic@0x18f2ee0 insn@0x08048574[2]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048574[2]: add(0x08048574<134514036>[32], 0x00000001[32]) = 0x08048575<134514037>[32]
Symbolic@0x18f2ee0 insn@0x08048574[2]: writeRegister(eip, 0x08048575<134514037>[32])
Symbolic@0x18f2ee0 insn@0x08048574[2]: undefined_(32) = v38095[32]
Symbolic@0x18f2ee0 insn@0x08048574[2]: readRegister(esp, v38095[32]) = (add[32] esp_0[32] 0x00000010[32])
Symbolic@0x18f2ee0 insn@0x08048574[2]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x08048574[2]: add((add[32] esp_0[32] 0x00000010[32]), 0x00000004[32]) = (add[32] esp_0[32] 0x00000014[32])
Symbolic@0x18f2ee0 insn@0x08048574[2]: writeRegister(esp, (add[32] esp_0[32] 0x00000014[32]))
Symbolic@0x18f2ee0 insn@0x08048574[2]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048574[2]: undefined_(32) = v38099[32]
Symbolic@0x18f2ee0 insn@0x08048574[2]: readMemory(ss, (add[32] esp_0[32] 0x00000010[32]), v38099[32], true[1]) = v38099[32]
Symbolic@0x18f2ee0 insn@0x08048574[2]: writeRegister(esi, v38099[32])
Symbolic@0x18f2ee0 insn@0x08048574[2]: finishInstruction(pop    esi)
registers:
  ebx          write-only = v38075[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000014[32])
  esi          write-only = v38099[32]
  eip          write-only = 0x08048575<134514037>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0x0000000c[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000013[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38099[32])
  addr=(add[32] esp_0[32] 0x00000012[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38099[32])
  addr=(add[32] esp_0[32] 0x00000011[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38099[32])
  addr=(add[32] esp_0[32] 0x00000010[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38099[32])
  addr=(add[32] esp_0[32] 0x0000000f[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38075[32])
  addr=(add[32] esp_0[32] 0x0000000e[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38075[32])
  addr=(add[32] esp_0[32] 0x0000000d[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38075[32])
  addr=(add[32] esp_0[32] 0x0000000c[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38075[32])

0x08048575: pop    edi
Symbolic@0x18f2ee0: startInstruction(0x08048575: pop    edi)
Symbolic@0x18f2ee0 insn@0x08048575[3]: number_(32, 134514037) = 0x08048575<134514037>[32]
Symbolic@0x18f2ee0 insn@0x08048575[3]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048575[3]: add(0x08048575<134514037>[32], 0x00000001[32]) = 0x08048576<134514038>[32]
Symbolic@0x18f2ee0 insn@0x08048575[3]: writeRegister(eip, 0x08048576<134514038>[32])
Symbolic@0x18f2ee0 insn@0x08048575[3]: undefined_(32) = v38119[32]
Symbolic@0x18f2ee0 insn@0x08048575[3]: readRegister(esp, v38119[32]) = (add[32] esp_0[32] 0x00000014[32])
Symbolic@0x18f2ee0 insn@0x08048575[3]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x08048575[3]: add((add[32] esp_0[32] 0x00000014[32]), 0x00000004[32]) = (add[32] esp_0[32] 0x00000018[32])
Symbolic@0x18f2ee0 insn@0x08048575[3]: writeRegister(esp, (add[32] esp_0[32] 0x00000018[32]))
Symbolic@0x18f2ee0 insn@0x08048575[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048575[3]: undefined_(32) = v38123[32]
Symbolic@0x18f2ee0 insn@0x08048575[3]: readMemory(ss, (add[32] esp_0[32] 0x00000014[32]), v38123[32], true[1]) = v38123[32]
Symbolic@0x18f2ee0 insn@0x08048575[3]: writeRegister(edi, v38123[32])
Symbolic@0x18f2ee0 insn@0x08048575[3]: finishInstruction(pop    edi)
registers:
  ebx          write-only = v38075[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000018[32])
  esi          write-only = v38099[32]
  edi          write-only = v38123[32]
  eip          write-only = 0x08048576<134514038>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0x0000000c[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000017[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38123[32])
  addr=(add[32] esp_0[32] 0x00000016[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38123[32])
  addr=(add[32] esp_0[32] 0x00000015[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38123[32])
  addr=(add[32] esp_0[32] 0x00000014[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38123[32])
  addr=(add[32] esp_0[32] 0x00000013[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38099[32])
  addr=(add[32] esp_0[32] 0x00000012[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38099[32])
  addr=(add[32] esp_0[32] 0x00000011[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38099[32])
  addr=(add[32] esp_0[32] 0x00000010[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38099[32])
  addr=(add[32] esp_0[32] 0x0000000f[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38075[32])
  addr=(add[32] esp_0[32] 0x0000000e[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38075[32])
  addr=(add[32] esp_0[32] 0x0000000d[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38075[32])
  addr=(add[32] esp_0[32] 0x0000000c[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38075[32])

0x08048576: pop    ebp
Symbolic@0x18f2ee0: startInstruction(0x08048576: pop    ebp)
Symbolic@0x18f2ee0 insn@0x08048576[4]: number_(32, 134514038) = 0x08048576<134514038>[32]
Symbolic@0x18f2ee0 insn@0x08048576[4]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048576[4]: add(0x08048576<134514038>[32], 0x00000001[32]) = 0x08048577<134514039>[32]
Symbolic@0x18f2ee0 insn@0x08048576[4]: writeRegister(eip, 0x08048577<134514039>[32])
Symbolic@0x18f2ee0 insn@0x08048576[4]: undefined_(32) = v38143[32]
Symbolic@0x18f2ee0 insn@0x08048576[4]: readRegister(esp, v38143[32]) = (add[32] esp_0[32] 0x00000018[32])
Symbolic@0x18f2ee0 insn@0x08048576[4]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x08048576[4]: add((add[32] esp_0[32] 0x00000018[32]), 0x00000004[32]) = (add[32] esp_0[32] 0x0000001c[32])
Symbolic@0x18f2ee0 insn@0x08048576[4]: writeRegister(esp, (add[32] esp_0[32] 0x0000001c[32]))
Symbolic@0x18f2ee0 insn@0x08048576[4]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048576[4]: undefined_(32) = v38147[32]
Symbolic@0x18f2ee0 insn@0x08048576[4]: readMemory(ss, (add[32] esp_0[32] 0x00000018[32]), v38147[32], true[1]) = v38147[32]
Symbolic@0x18f2ee0 insn@0x08048576[4]: writeRegister(ebp, v38147[32])
Symbolic@0x18f2ee0 insn@0x08048576[4]: finishInstruction(pop    ebp)
registers:
  ebx          write-only = v38075[32]
  esp          read-before-write = (add[32] esp_0[32] 0x0000001c[32])
  ebp          write-only = v38147[32]
  esi          write-only = v38099[32]
  edi          write-only = v38123[32]
  eip          write-only = 0x08048577<134514039>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0x0000000c[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x0000001b[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38147[32])
  addr=(add[32] esp_0[32] 0x0000001a[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38147[32])
  addr=(add[32] esp_0[32] 0x00000019[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38147[32])
  addr=(add[32] esp_0[32] 0x00000018[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38147[32])
  addr=(add[32] esp_0[32] 0x00000017[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38123[32])
  addr=(add[32] esp_0[32] 0x00000016[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38123[32])
  addr=(add[32] esp_0[32] 0x00000015[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38123[32])
  addr=(add[32] esp_0[32] 0x00000014[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38123[32])
  addr=(add[32] esp_0[32] 0x00000013[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38099[32])
  addr=(add[32] esp_0[32] 0x00000012[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38099[32])
  addr=(add[32] esp_0[32] 0x00000011[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38099[32])
  addr=(add[32] esp_0[32] 0x00000010[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38099[32])
  addr=(add[32] esp_0[32] 0x0000000f[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38075[32])
  addr=(add[32] esp_0[32] 0x0000000e[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38075[32])
  addr=(add[32] esp_0[32] 0x0000000d[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38075[32])
  addr=(add[32] esp_0[32] 0x0000000c[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38075[32])

0x08048577: ret    
Symbolic@0x18f2ee0: startInstruction(0x08048577: ret)
Symbolic@0x18f2ee0 insn@0x08048577[5]: number_(32, 134514039) = 0x08048577<134514039>[32]
Symbolic@0x18f2ee0 insn@0x08048577[5]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048577[5]: add(0x08048577<134514039>[32], 0x00000001[32]) = 0x08048578<134514040>[32]
Symbolic@0x18f2ee0 insn@0x08048577[5]: writeRegister(eip, 0x08048578<134514040>[32])
Symbolic@0x18f2ee0 insn@0x08048577[5]: undefined_(32) = v38167[32]
Symbolic@0x18f2ee0 insn@0x08048577[5]: readRegister(esp, v38167[32]) = (add[32] esp_0[32] 0x0000001c[32])
Symbolic@0x18f2ee0 insn@0x08048577[5]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x08048577[5]: add((add[32] esp_0[32] 0x0000001c[32]), 0x00000004[32]) = (add[32] esp_0[32] 0x00000020[32])
Symbolic@0x18f2ee0 insn@0x08048577[5]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048577[5]: undefined_(32) = v38170[32]
Symbolic@0x18f2ee0 insn@0x08048577[5]: readMemory(ss, (add[32] esp_0[32] 0x0000001c[32]), v38170[32], true[1]) = v38170[32]
Symbolic@0x18f2ee0 insn@0x08048577[5]: filterReturnTarget(v38170[32]) = v38170[32]
Symbolic@0x18f2ee0 insn@0x08048577[5]: writeRegister(eip, v38170[32])
Symbolic@0x18f2ee0 insn@0x08048577[5]: writeRegister(esp, (add[32] esp_0[32] 0x00000020[32]))
Symbolic@0x18f2ee0 insn@0x08048577[5]: finishInstruction(ret)
registers:
  ebx          write-only = v38075[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000020[32])
  ebp          write-only = v38147[32]
  esi          write-only = v38099[32]
  edi          write-only = v38123[32]
  eip          write-only = v38170[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0x0000000c[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0x0000000c[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0x0000000c[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0x0000000c[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33]) (uextend[33] 0x00000021[32] esp_0[32]) 0x00000000c[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x0000001f[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38170[32])
  addr=(add[32] esp_0[32] 0x0000001e[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38170[32])
  addr=(add[32] esp_0[32] 0x0000001d[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38170[32])
  addr=(add[32] esp_0[32] 0x0000001c[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38170[32])
  addr=(add[32] esp_0[32] 0x0000001b[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38147[32])
  addr=(add[32] esp_0[32] 0x0000001a[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38147[32])
  addr=(add[32] esp_0[32] 0x00000019[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38147[32])
  addr=(add[32] esp_0[32] 0x00000018[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38147[32])
  addr=(add[32] esp_0[32] 0x00000017[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38123[32])
  addr=(add[32] esp_0[32] 0x00000016[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38123[32])
  addr=(add[32] esp_0[32] 0x00000015[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38123[32])
  addr=(add[32] esp_0[32] 0x00000014[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38123[32])
  addr=(add[32] esp_0[32] 0x00000013[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38099[32])
  addr=(add[32] esp_0[32] 0x00000012[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38099[32])
  addr=(add[32] esp_0[32] 0x00000011[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38099[32])
  addr=(add[32] esp_0[32] 0x00000010[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38099[32])
  addr=(add[32] esp_0[32] 0x0000000f[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38075[32])
  addr=(add[32] esp_0[32] 0x0000000e[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38075[32])
  addr=(add[32] esp_0[32] 0x0000000d[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38075[32])
  addr=(add[32] esp_0[32] 0x0000000c[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38075[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048580: push   ebp
Symbolic@0x18f2ee0: startInstruction(0x08048580: push   ebp)
Symbolic@0x18f2ee0 insn@0x08048580[0]: number_(32, 134514048) = 0x08048580<134514048>[32]
Symbolic@0x18f2ee0 insn@0x08048580[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048580[0]: add(0x08048580<134514048>[32], 0x00000001[32]) = 0x08048581<134514049>[32]
Symbolic@0x18f2ee0 insn@0x08048580[0]: writeRegister(eip, 0x08048581<134514049>[32])
Symbolic@0x18f2ee0 insn@0x08048580[0]: undefined_(32) = v38676[32]
Symbolic@0x18f2ee0 insn@0x08048580[0]: readRegister(ebp, v38676[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x08048580[0]: undefined_(32) = v38677[32]
Symbolic@0x18f2ee0 insn@0x08048580[0]: readRegister(esp, v38677[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x08048580[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048580[0]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048580[0]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048580[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048580[0]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), ebp_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048580[0]: finishInstruction(push   ebp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048581<134514049>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048581: mov    ebp, esp
Symbolic@0x18f2ee0: startInstruction(0x08048581: mov    ebp, esp)
Symbolic@0x18f2ee0 insn@0x08048581[1]: number_(32, 134514049) = 0x08048581<134514049>[32]
Symbolic@0x18f2ee0 insn@0x08048581[1]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x08048581[1]: add(0x08048581<134514049>[32], 0x00000002[32]) = 0x08048583<134514051>[32]
Symbolic@0x18f2ee0 insn@0x08048581[1]: writeRegister(eip, 0x08048583<134514051>[32])
Symbolic@0x18f2ee0 insn@0x08048581[1]: undefined_(32) = v38692[32]
Symbolic@0x18f2ee0 insn@0x08048581[1]: readRegister(esp, v38692[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048581[1]: writeRegister(ebp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x08048581[1]: finishInstruction(mov    ebp, esp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048583<134514051>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048583: push   ebx
Symbolic@0x18f2ee0: startInstruction(0x08048583: push   ebx)
Symbolic@0x18f2ee0 insn@0x08048583[2]: number_(32, 134514051) = 0x08048583<134514051>[32]
Symbolic@0x18f2ee0 insn@0x08048583[2]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x08048583[2]: add(0x08048583<134514051>[32], 0x00000001[32]) = 0x08048584<134514052>[32]
Symbolic@0x18f2ee0 insn@0x08048583[2]: writeRegister(eip, 0x08048584<134514052>[32])
Symbolic@0x18f2ee0 insn@0x08048583[2]: undefined_(32) = v38699[32]
Symbolic@0x18f2ee0 insn@0x08048583[2]: readRegister(ebx, v38699[32]) = ebx_0[32]
Symbolic@0x18f2ee0 insn@0x08048583[2]: undefined_(32) = v38700[32]
Symbolic@0x18f2ee0 insn@0x08048583[2]: readRegister(esp, v38700[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x08048583[2]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x08048583[2]: add((add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])
Symbolic@0x18f2ee0 insn@0x08048583[2]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]))
Symbolic@0x18f2ee0 insn@0x08048583[2]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x08048583[2]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]), ebx_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x08048583[2]: finishInstruction(push   ebx)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048584<134514052>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048584: sub    esp, 0x04
Symbolic@0x18f2ee0: startInstruction(0x08048584: sub    esp, 0x04)
Symbolic@0x18f2ee0 insn@0x08048584[3]: number_(32, 134514052) = 0x08048584<134514052>[32]
Symbolic@0x18f2ee0 insn@0x08048584[3]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x08048584[3]: add(0x08048584<134514052>[32], 0x00000003[32]) = 0x08048587<134514055>[32]
Symbolic@0x18f2ee0 insn@0x08048584[3]: writeRegister(eip, 0x08048587<134514055>[32])
Symbolic@0x18f2ee0 insn@0x08048584[3]: undefined_(32) = v38716[32]
Symbolic@0x18f2ee0 insn@0x08048584[3]: readRegister(esp, v38716[32]) = (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])
Symbolic@0x18f2ee0 insn@0x08048584[3]: number_(8, 4) = 0x04[8]
Symbolic@0x18f2ee0 insn@0x08048584[3]: signExtend(0x04[8], 32) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x08048584[3]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048584[3]: invert(0x00000004[32]) = 0xfffffffb<4294967291,-5>[32]
Symbolic@0x18f2ee0 insn@0x08048584[3]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048584[3]: addWithCarries((add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]), 0xfffffffb<4294967291,-5>[32], true[1]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x08048584[3]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33]))
Symbolic@0x18f2ee0 insn@0x08048584[3]: extract((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048584[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048584[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048584[3]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048584[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048584[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048584[3]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048584[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048584[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048584[3]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048584[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048584[3]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048584[3]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048584[3]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048584[3]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048584[3]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048584[3]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
Symbolic@0x18f2ee0 insn@0x08048584[3]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))))
Symbolic@0x18f2ee0 insn@0x08048584[3]: extract((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048584[3]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048584[3]: equalToZero((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048584[3]: writeRegister(zf, (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])))
Symbolic@0x18f2ee0 insn@0x08048584[3]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33]))
Symbolic@0x18f2ee0 insn@0x08048584[3]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33]))
Symbolic@0x18f2ee0 insn@0x08048584[3]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33]))
Symbolic@0x18f2ee0 insn@0x08048584[3]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33]))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))
Symbolic@0x18f2ee0 insn@0x08048584[3]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33]))))
Symbolic@0x18f2ee0 insn@0x08048584[3]: invert((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33]))) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))
Symbolic@0x18f2ee0 insn@0x08048584[3]: writeRegister(cf, (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33]))))
Symbolic@0x18f2ee0 insn@0x08048584[3]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))
Symbolic@0x18f2ee0 insn@0x08048584[3]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33]))))
Symbolic@0x18f2ee0 insn@0x08048584[3]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x08048584[3]: finishInstruction(sub    esp, 0x04)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048587<134514055>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048587: mov    ebx, 0x080495e8<.ctors>
Symbolic@0x18f2ee0: startInstruction(0x08048587: mov    ebx, 0x080495e8<.ctors>)
Symbolic@0x18f2ee0 insn@0x08048587[4]: number_(32, 134514055) = 0x08048587<134514055>[32]
Symbolic@0x18f2ee0 insn@0x08048587[4]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x08048587[4]: add(0x08048587<134514055>[32], 0x00000005[32]) = 0x0804858c<134514060>[32]
Symbolic@0x18f2ee0 insn@0x08048587[4]: writeRegister(eip, 0x0804858c<134514060>[32])
Symbolic@0x18f2ee0 insn@0x08048587[4]: number_(32, 134518248) = 0x080495e8<134518248>[32]
Symbolic@0x18f2ee0 insn@0x08048587[4]: writeRegister(ebx, 0x080495e8<134518248>[32])
Symbolic@0x18f2ee0 insn@0x08048587[4]: finishInstruction(mov    ebx, 0x080495e8<.ctors>)
registers:
  ebx          read-before-write = 0x080495e8<134518248>[32]
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x0804858c<134514060>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x0804858c: mov    eax, dword ds:[0x080495e8<.ctors>]
Symbolic@0x18f2ee0: startInstruction(0x0804858c: mov    eax, dword ds:[0x080495e8<.ctors>])
Symbolic@0x18f2ee0 insn@0x0804858c[5]: number_(32, 134514060) = 0x0804858c<134514060>[32]
Symbolic@0x18f2ee0 insn@0x0804858c[5]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x0804858c[5]: add(0x0804858c<134514060>[32], 0x00000005[32]) = 0x08048591<134514065>[32]
Symbolic@0x18f2ee0 insn@0x0804858c[5]: writeRegister(eip, 0x08048591<134514065>[32])
Symbolic@0x18f2ee0 insn@0x0804858c[5]: number_(32, 134518248) = 0x080495e8<134518248>[32]
Symbolic@0x18f2ee0 insn@0x0804858c[5]: undefined_(32) = v38767[32]
Symbolic@0x18f2ee0 insn@0x0804858c[5]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x0804858c[5]: readMemory(ds, 0x080495e8<134518248>[32], v38767[32], true[1]) = v38767[32]
Symbolic@0x18f2ee0 insn@0x0804858c[5]: writeRegister(eax, v38767[32])
Symbolic@0x18f2ee0 insn@0x0804858c[5]: finishInstruction(mov    eax, dword ds:[0x080495e8<.ctors>])
registers:
  eax          write-only = v38767[32]
  ebx          read-before-write = 0x080495e8<134518248>[32]
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048591<134514065>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))
  zf           write-only = (zerop[1] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])) 0x0fffffffb<4294967291>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=0x080495eb<134518251>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38767[32])
  addr=0x080495ea<134518250>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38767[32])
  addr=0x080495e9<134518249>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38767[32])
  addr=0x080495e8<134518248>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38767[32])
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048591: cmp    eax, 0xff<-1>
Symbolic@0x18f2ee0: startInstruction(0x08048591: cmp    eax, 0xff<-1>)
Symbolic@0x18f2ee0 insn@0x08048591[6]: number_(32, 134514065) = 0x08048591<134514065>[32]
Symbolic@0x18f2ee0 insn@0x08048591[6]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x08048591[6]: add(0x08048591<134514065>[32], 0x00000003[32]) = 0x08048594<134514068>[32]
Symbolic@0x18f2ee0 insn@0x08048591[6]: writeRegister(eip, 0x08048594<134514068>[32])
Symbolic@0x18f2ee0 insn@0x08048591[6]: undefined_(32) = v38787[32]
Symbolic@0x18f2ee0 insn@0x08048591[6]: readRegister(eax, v38787[32]) = v38767[32]
Symbolic@0x18f2ee0 insn@0x08048591[6]: number_(8, 18446744073709551615) = 0xff<-1>[8]
Symbolic@0x18f2ee0 insn@0x08048591[6]: signExtend(0xff<-1>[8], 32) = 0xffffffff<4294967295,-1>[32]
Symbolic@0x18f2ee0 insn@0x08048591[6]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x08048591[6]: invert(0xffffffff<4294967295,-1>[32]) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x08048591[6]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x08048591[6]: addWithCarries(v38767[32], 0x00000000[32], true[1]) = (add[32] v38767[32] 0x00000001[32])
Symbolic@0x18f2ee0 insn@0x08048591[6]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33]))
Symbolic@0x18f2ee0 insn@0x08048591[6]: extract((add[32] v38767[32] 0x00000001[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048591[6]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v38767[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048591[6]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v38767[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048591[6]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] v38767[32] 0x00000001[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v38767[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v38767[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048591[6]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v38767[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048591[6]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v38767[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048591[6]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] v38767[32] 0x00000001[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v38767[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v38767[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048591[6]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v38767[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048591[6]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v38767[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048591[6]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] v38767[32] 0x00000001[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v38767[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v38767[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048591[6]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048591[6]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v38767[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048591[6]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] v38767[32] 0x00000001[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048591[6]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v38767[32] 0x00000001[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v38767[32] 0x00000001[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v38767[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048591[6]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v38767[32] 0x00000001[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048591[6]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v38767[32] 0x00000001[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048591[6]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32]))))
Symbolic@0x18f2ee0 insn@0x08048591[6]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32])))))
Symbolic@0x18f2ee0 insn@0x08048591[6]: extract((add[32] v38767[32] 0x00000001[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v38767[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048591[6]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v38767[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048591[6]: equalToZero((add[32] v38767[32] 0x00000001[32])) = (zerop[1] (add[32] v38767[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048591[6]: writeRegister(zf, (zerop[1] (add[32] v38767[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x08048591[6]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33]))
Symbolic@0x18f2ee0 insn@0x08048591[6]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33]))
Symbolic@0x18f2ee0 insn@0x08048591[6]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33]))
Symbolic@0x18f2ee0 insn@0x08048591[6]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33]))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33])))
Symbolic@0x18f2ee0 insn@0x08048591[6]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33]))))
Symbolic@0x18f2ee0 insn@0x08048591[6]: invert((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33]))) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33])))
Symbolic@0x18f2ee0 insn@0x08048591[6]: writeRegister(cf, (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33]))))
Symbolic@0x18f2ee0 insn@0x08048591[6]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33])))
Symbolic@0x18f2ee0 insn@0x08048591[6]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33]))))
Symbolic@0x18f2ee0 insn@0x08048591[6]: finishInstruction(cmp    eax, 0xff<-1>)
registers:
  eax          = v38767[32]
  ebx          read-before-write = 0x080495e8<134518248>[32]
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x08048594<134514068>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33])))
  zf           write-only = (zerop[1] (add[32] v38767[32] 0x00000001[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v38767[32] 0x00000001[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=0x080495eb<134518251>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38767[32])
  addr=0x080495ea<134518250>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38767[32])
  addr=0x080495e9<134518249>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38767[32])
  addr=0x080495e8<134518248>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38767[32])
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x08048594: je     0x080485ac<<Insn>>
Symbolic@0x18f2ee0: startInstruction(0x08048594: je     0x080485ac<<Insn>>)
Symbolic@0x18f2ee0 insn@0x08048594[7]: number_(32, 134514068) = 0x08048594<134514068>[32]
Symbolic@0x18f2ee0 insn@0x08048594[7]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x08048594[7]: add(0x08048594<134514068>[32], 0x00000002[32]) = 0x08048596<134514070>[32]
Symbolic@0x18f2ee0 insn@0x08048594[7]: writeRegister(eip, 0x08048596<134514070>[32])
Symbolic@0x18f2ee0 insn@0x08048594[7]: undefined_(1) = v38838[1]
Symbolic@0x18f2ee0 insn@0x08048594[7]: readRegister(zf, v38838[1]) = (zerop[1] (add[32] v38767[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x08048594[7]: undefined_(32) = v38840[32]
Symbolic@0x18f2ee0 insn@0x08048594[7]: readRegister(eip, v38840[32]) = 0x08048596<134514070>[32]
Symbolic@0x18f2ee0 insn@0x08048594[7]: number_(32, 134514092) = 0x080485ac<134514092>[32]
Symbolic@0x18f2ee0 insn@0x08048594[7]: unsignedExtend(0x080485ac<134514092>[32], 32) = 0x080485ac<134514092>[32]
Symbolic@0x18f2ee0 insn@0x08048594[7]: ite((zerop[1] (add[32] v38767[32] 0x00000001[32])), 0x080485ac<134514092>[32], 0x08048596<134514070>[32]) = (ite[32] (zerop[1] (add[32] v38767[32] 0x00000001[32])) 0x080485ac<134514092>[32] 0x08048596<134514070>[32])
Symbolic@0x18f2ee0 insn@0x08048594[7]: writeRegister(eip, (ite[32] (zerop[1] (add[32] v38767[32] 0x00000001[32])) 0x080485ac<134514092>[32] 0x08048596<134514070>[32]))
Symbolic@0x18f2ee0 insn@0x08048594[7]: finishInstruction(je     0x080485ac<<Insn>>)
registers:
  eax          = v38767[32]
  ebx          read-before-write = 0x080495e8<134518248>[32]
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = (ite[32] (zerop[1] (add[32] v38767[32] 0x00000001[32])) 0x080485ac<134514092>[32] 0x08048596<134514070>[32])
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v38767[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v38767[32] 0x00000001[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33])))
  zf           = (zerop[1] (add[32] v38767[32] 0x00000001[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v38767[32] 0x00000001[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v38767[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v38767[32]) 0x000000000[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=0x080495eb<134518251>[32] read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v38767[32])
  addr=0x080495ea<134518250>[32] read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v38767[32])
  addr=0x080495e9<134518249>[32] read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v38767[32])
  addr=0x080495e8<134518248>[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v38767[32])
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048596: lea    esi, [esi + 0x00]
Symbolic@0x18f2ee0: startInstruction(0x08048596: lea    esi, [esi + 0x00])
Symbolic@0x18f2ee0 insn@0x08048596[0]: number_(32, 134514070) = 0x08048596<134514070>[32]
Symbolic@0x18f2ee0 insn@0x08048596[0]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x08048596[0]: add(0x08048596<134514070>[32], 0x00000003[32]) = 0x08048599<134514073>[32]
Symbolic@0x18f2ee0 insn@0x08048596[0]: writeRegister(eip, 0x08048599<134514073>[32])
Symbolic@0x18f2ee0 insn@0x08048596[0]: undefined_(32) = v39333[32]
Symbolic@0x18f2ee0 insn@0x08048596[0]: readRegister(esi, v39333[32]) = esi_0[32]
Symbolic@0x18f2ee0 insn@0x08048596[0]: number_(8, 0) = 0x00[8]
Symbolic@0x18f2ee0 insn@0x08048596[0]: signExtend(0x00[8], 32) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x08048596[0]: add(esi_0[32], 0x00000000[32]) = esi_0[32]
Symbolic@0x18f2ee0 insn@0x08048596[0]: unsignedExtend(esi_0[32], 32) = esi_0[32]
Symbolic@0x18f2ee0 insn@0x08048596[0]: writeRegister(esi, esi_0[32])
Symbolic@0x18f2ee0 insn@0x08048596[0]: finishInstruction(lea    esi, [esi + 0x00])
registers:
  eip          write-only = 0x08048599<134514073>[32]
  fpstatus_top = 0x0[3]
memory:

0x08048599: lea    edi, [edi + 0x00000000]
Symbolic@0x18f2ee0: startInstruction(0x08048599: lea    edi, [edi + 0x00000000])
Symbolic@0x18f2ee0 insn@0x08048599[1]: number_(32, 134514073) = 0x08048599<134514073>[32]
Symbolic@0x18f2ee0 insn@0x08048599[1]: number_(32, 7) = 0x00000007[32]
Symbolic@0x18f2ee0 insn@0x08048599[1]: add(0x08048599<134514073>[32], 0x00000007[32]) = 0x080485a0<134514080>[32]
Symbolic@0x18f2ee0 insn@0x08048599[1]: writeRegister(eip, 0x080485a0<134514080>[32])
Symbolic@0x18f2ee0 insn@0x08048599[1]: undefined_(32) = v39342[32]
Symbolic@0x18f2ee0 insn@0x08048599[1]: readRegister(edi, v39342[32]) = edi_0[32]
Symbolic@0x18f2ee0 insn@0x08048599[1]: number_(32, 0) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x08048599[1]: add(edi_0[32], 0x00000000[32]) = edi_0[32]
Symbolic@0x18f2ee0 insn@0x08048599[1]: unsignedExtend(edi_0[32], 32) = edi_0[32]
Symbolic@0x18f2ee0 insn@0x08048599[1]: writeRegister(edi, edi_0[32])
Symbolic@0x18f2ee0 insn@0x08048599[1]: finishInstruction(lea    edi, [edi + 0x00000000])
registers:
  eip          write-only = 0x080485a0<134514080>[32]
  fpstatus_top = 0x0[3]
memory:

0x080485a0: sub    ebx, 0x04
Symbolic@0x18f2ee0: startInstruction(0x080485a0: sub    ebx, 0x04)
Symbolic@0x18f2ee0 insn@0x080485a0[2]: number_(32, 134514080) = 0x080485a0<134514080>[32]
Symbolic@0x18f2ee0 insn@0x080485a0[2]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x080485a0[2]: add(0x080485a0<134514080>[32], 0x00000003[32]) = 0x080485a3<134514083>[32]
Symbolic@0x18f2ee0 insn@0x080485a0[2]: writeRegister(eip, 0x080485a3<134514083>[32])
Symbolic@0x18f2ee0 insn@0x080485a0[2]: undefined_(32) = v39350[32]
Symbolic@0x18f2ee0 insn@0x080485a0[2]: readRegister(ebx, v39350[32]) = ebx_0[32]
Symbolic@0x18f2ee0 insn@0x080485a0[2]: number_(8, 4) = 0x04[8]
Symbolic@0x18f2ee0 insn@0x080485a0[2]: signExtend(0x04[8], 32) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080485a0[2]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080485a0[2]: invert(0x00000004[32]) = 0xfffffffb<4294967291,-5>[32]
Symbolic@0x18f2ee0 insn@0x080485a0[2]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x080485a0[2]: addWithCarries(ebx_0[32], 0xfffffffb<4294967291,-5>[32], true[1]) = (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x080485a0[2]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33]))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: extract((add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])))))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: extract((add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: equalToZero((add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) = (zerop[1] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: writeRegister(zf, (zerop[1] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33]))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33]))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33]))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33]))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33]))))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: invert((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33]))) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: writeRegister(cf, (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33]))))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33]))))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: writeRegister(ebx, (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080485a0[2]: finishInstruction(sub    ebx, 0x04)
registers:
  ebx          read-before-write = (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080485a3<134514083>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])))
  zf           write-only = (zerop[1] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])))
  fpstatus_top = 0x0[3]
memory:

0x080485a3: call   eax
Symbolic@0x18f2ee0: startInstruction(0x080485a3: call   eax)
Symbolic@0x18f2ee0 insn@0x080485a3[3]: number_(32, 134514083) = 0x080485a3<134514083>[32]
Symbolic@0x18f2ee0 insn@0x080485a3[3]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080485a3[3]: add(0x080485a3<134514083>[32], 0x00000002[32]) = 0x080485a5<134514085>[32]
Symbolic@0x18f2ee0 insn@0x080485a3[3]: writeRegister(eip, 0x080485a5<134514085>[32])
Symbolic@0x18f2ee0 insn@0x080485a3[3]: undefined_(32) = v39395[32]
Symbolic@0x18f2ee0 insn@0x080485a3[3]: readRegister(eax, v39395[32]) = eax_0[32]
Symbolic@0x18f2ee0 insn@0x080485a3[3]: unsignedExtend(eax_0[32], 32) = eax_0[32]
Symbolic@0x18f2ee0 insn@0x080485a3[3]: undefined_(32) = v39397[32]
Symbolic@0x18f2ee0 insn@0x080485a3[3]: readRegister(esp, v39397[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x080485a3[3]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080485a3[3]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x080485a3[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080485a3[3]: undefined_(32) = v39399[32]
Symbolic@0x18f2ee0 insn@0x080485a3[3]: readRegister(eip, v39399[32]) = 0x080485a5<134514085>[32]
Symbolic@0x18f2ee0 insn@0x080485a3[3]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0x080485a5<134514085>[32], true[1])
Symbolic@0x18f2ee0 insn@0x080485a3[3]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080485a3[3]: filterCallTarget(eax_0[32]) = eax_0[32]
Symbolic@0x18f2ee0 insn@0x080485a3[3]: writeRegister(eip, eax_0[32])
Symbolic@0x18f2ee0 insn@0x080485a3[3]: finishInstruction(call   eax)
registers:
  ebx          read-before-write = (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = eax_0[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])))
  zf           write-only = (zerop[1] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] ebx_0[32] 0xfffffffc<4294967292,-4>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffc<4294967292>[33]) (uextend[33] 0x00000021[32] ebx_0[32]) 0x0fffffffb<4294967291>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=0x85<-123>[8]
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=0xa5<-91>[8]
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080485a5: mov    eax, dword ds:[ebx]
Symbolic@0x18f2ee0: startInstruction(0x080485a5: mov    eax, dword ds:[ebx])
Symbolic@0x18f2ee0 insn@0x080485a5[0]: number_(32, 134514085) = 0x080485a5<134514085>[32]
Symbolic@0x18f2ee0 insn@0x080485a5[0]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080485a5[0]: add(0x080485a5<134514085>[32], 0x00000002[32]) = 0x080485a7<134514087>[32]
Symbolic@0x18f2ee0 insn@0x080485a5[0]: writeRegister(eip, 0x080485a7<134514087>[32])
Symbolic@0x18f2ee0 insn@0x080485a5[0]: undefined_(32) = v39897[32]
Symbolic@0x18f2ee0 insn@0x080485a5[0]: readRegister(ebx, v39897[32]) = ebx_0[32]
Symbolic@0x18f2ee0 insn@0x080485a5[0]: undefined_(32) = v39898[32]
Symbolic@0x18f2ee0 insn@0x080485a5[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080485a5[0]: readMemory(ds, ebx_0[32], v39898[32], true[1]) = v39898[32]
Symbolic@0x18f2ee0 insn@0x080485a5[0]: writeRegister(eax, v39898[32])
Symbolic@0x18f2ee0 insn@0x080485a5[0]: finishInstruction(mov    eax, dword ds:[ebx])
registers:
  eax          write-only = v39898[32]
  eip          write-only = 0x080485a7<134514087>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebx_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v39898[32])
  addr=(add[32] ebx_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v39898[32])
  addr=(add[32] ebx_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v39898[32])
  addr=ebx_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v39898[32])

0x080485a7: cmp    eax, 0xff<-1>
Symbolic@0x18f2ee0: startInstruction(0x080485a7: cmp    eax, 0xff<-1>)
Symbolic@0x18f2ee0 insn@0x080485a7[1]: number_(32, 134514087) = 0x080485a7<134514087>[32]
Symbolic@0x18f2ee0 insn@0x080485a7[1]: number_(32, 3) = 0x00000003[32]
Symbolic@0x18f2ee0 insn@0x080485a7[1]: add(0x080485a7<134514087>[32], 0x00000003[32]) = 0x080485aa<134514090>[32]
Symbolic@0x18f2ee0 insn@0x080485a7[1]: writeRegister(eip, 0x080485aa<134514090>[32])
Symbolic@0x18f2ee0 insn@0x080485a7[1]: undefined_(32) = v39918[32]
Symbolic@0x18f2ee0 insn@0x080485a7[1]: readRegister(eax, v39918[32]) = v39898[32]
Symbolic@0x18f2ee0 insn@0x080485a7[1]: number_(8, 18446744073709551615) = 0xff<-1>[8]
Symbolic@0x18f2ee0 insn@0x080485a7[1]: signExtend(0xff<-1>[8], 32) = 0xffffffff<4294967295,-1>[32]
Symbolic@0x18f2ee0 insn@0x080485a7[1]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080485a7[1]: invert(0xffffffff<4294967295,-1>[32]) = 0x00000000[32]
Symbolic@0x18f2ee0 insn@0x080485a7[1]: invert(false[1]) = true[1]
Symbolic@0x18f2ee0 insn@0x080485a7[1]: addWithCarries(v39898[32], 0x00000000[32], true[1]) = (add[32] v39898[32] 0x00000001[32])
Symbolic@0x18f2ee0 insn@0x080485a7[1]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33]))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: extract((add[32] v39898[32] 0x00000001[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v39898[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v39898[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] v39898[32] 0x00000001[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v39898[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v39898[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v39898[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v39898[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] v39898[32] 0x00000001[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v39898[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v39898[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v39898[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v39898[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] v39898[32] 0x00000001[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v39898[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v39898[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v39898[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] v39898[32] 0x00000001[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v39898[32] 0x00000001[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v39898[32] 0x00000001[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v39898[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v39898[32] 0x00000001[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v39898[32] 0x00000001[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32]))))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32])))))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: extract((add[32] v39898[32] 0x00000001[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v39898[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v39898[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: equalToZero((add[32] v39898[32] 0x00000001[32])) = (zerop[1] (add[32] v39898[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: writeRegister(zf, (zerop[1] (add[32] v39898[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33]))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33]))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33]))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: invert((extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33]))) = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33])))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: writeRegister(af, (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33]))))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: invert((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33]))) = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33])))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: writeRegister(cf, (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33]))))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33])))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33]))))
Symbolic@0x18f2ee0 insn@0x080485a7[1]: finishInstruction(cmp    eax, 0xff<-1>)
registers:
  eax          = v39898[32]
  eip          write-only = 0x080485aa<134514090>[32]
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33])))
  zf           write-only = (zerop[1] (add[32] v39898[32] 0x00000001[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v39898[32] 0x00000001[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebx_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v39898[32])
  addr=(add[32] ebx_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v39898[32])
  addr=(add[32] ebx_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v39898[32])
  addr=ebx_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v39898[32])

0x080485aa: jne    0x080485a0<<Insn>>
Symbolic@0x18f2ee0: startInstruction(0x080485aa: jne    0x080485a0<<Insn>>)
Symbolic@0x18f2ee0 insn@0x080485aa[2]: number_(32, 134514090) = 0x080485aa<134514090>[32]
Symbolic@0x18f2ee0 insn@0x080485aa[2]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080485aa[2]: add(0x080485aa<134514090>[32], 0x00000002[32]) = 0x080485ac<134514092>[32]
Symbolic@0x18f2ee0 insn@0x080485aa[2]: writeRegister(eip, 0x080485ac<134514092>[32])
Symbolic@0x18f2ee0 insn@0x080485aa[2]: undefined_(1) = v39963[1]
Symbolic@0x18f2ee0 insn@0x080485aa[2]: readRegister(zf, v39963[1]) = (zerop[1] (add[32] v39898[32] 0x00000001[32]))
Symbolic@0x18f2ee0 insn@0x080485aa[2]: invert((zerop[1] (add[32] v39898[32] 0x00000001[32]))) = (invert[1] (zerop[1] (add[32] v39898[32] 0x00000001[32])))
Symbolic@0x18f2ee0 insn@0x080485aa[2]: undefined_(32) = v39966[32]
Symbolic@0x18f2ee0 insn@0x080485aa[2]: readRegister(eip, v39966[32]) = 0x080485ac<134514092>[32]
Symbolic@0x18f2ee0 insn@0x080485aa[2]: number_(32, 134514080) = 0x080485a0<134514080>[32]
Symbolic@0x18f2ee0 insn@0x080485aa[2]: unsignedExtend(0x080485a0<134514080>[32], 32) = 0x080485a0<134514080>[32]
Symbolic@0x18f2ee0 insn@0x080485aa[2]: ite((invert[1] (zerop[1] (add[32] v39898[32] 0x00000001[32]))), 0x080485a0<134514080>[32], 0x080485ac<134514092>[32]) = (ite[32] (invert[1] (zerop[1] (add[32] v39898[32] 0x00000001[32]))) 0x080485a0<134514080>[32] 0x080485ac<134514092>[32])
Symbolic@0x18f2ee0 insn@0x080485aa[2]: writeRegister(eip, (ite[32] (invert[1] (zerop[1] (add[32] v39898[32] 0x00000001[32]))) 0x080485a0<134514080>[32] 0x080485ac<134514092>[32]))
Symbolic@0x18f2ee0 insn@0x080485aa[2]: finishInstruction(jne    0x080485a0<<Insn>>)
registers:
  eax          = v39898[32]
  eip          = (ite[32] (invert[1] (zerop[1] (add[32] v39898[32] 0x00000001[32]))) 0x080485a0<134514080>[32] 0x080485ac<134514092>[32])
  cf           write-only = (invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33])))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v39898[32] 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v39898[32] 0x00000001[32]))))
  af           write-only = (invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33])))
  zf           = (zerop[1] (add[32] v39898[32] 0x00000001[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v39898[32] 0x00000001[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v39898[32]) 0x000000001[33]) (uextend[33] 0x00000021[32] v39898[32]) 0x000000000[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebx_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v39898[32])
  addr=(add[32] ebx_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v39898[32])
  addr=(add[32] ebx_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v39898[32])
  addr=ebx_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v39898[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080485ac: pop    eax
Symbolic@0x18f2ee0: startInstruction(0x080485ac: pop    eax)
Symbolic@0x18f2ee0 insn@0x080485ac[0]: number_(32, 134514092) = 0x080485ac<134514092>[32]
Symbolic@0x18f2ee0 insn@0x080485ac[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080485ac[0]: add(0x080485ac<134514092>[32], 0x00000001[32]) = 0x080485ad<134514093>[32]
Symbolic@0x18f2ee0 insn@0x080485ac[0]: writeRegister(eip, 0x080485ad<134514093>[32])
Symbolic@0x18f2ee0 insn@0x080485ac[0]: undefined_(32) = v40459[32]
Symbolic@0x18f2ee0 insn@0x080485ac[0]: readRegister(esp, v40459[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x080485ac[0]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080485ac[0]: add(esp_0[32], 0x00000004[32]) = (add[32] esp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x080485ac[0]: writeRegister(esp, (add[32] esp_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080485ac[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080485ac[0]: undefined_(32) = v40462[32]
Symbolic@0x18f2ee0 insn@0x080485ac[0]: readMemory(ss, esp_0[32], v40462[32], true[1]) = v40462[32]
Symbolic@0x18f2ee0 insn@0x080485ac[0]: writeRegister(eax, v40462[32])
Symbolic@0x18f2ee0 insn@0x080485ac[0]: finishInstruction(pop    eax)
registers:
  eax          write-only = v40462[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x080485ad<134514093>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v40462[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v40462[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v40462[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v40462[32])

0x080485ad: pop    ebx
Symbolic@0x18f2ee0: startInstruction(0x080485ad: pop    ebx)
Symbolic@0x18f2ee0 insn@0x080485ad[1]: number_(32, 134514093) = 0x080485ad<134514093>[32]
Symbolic@0x18f2ee0 insn@0x080485ad[1]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080485ad[1]: add(0x080485ad<134514093>[32], 0x00000001[32]) = 0x080485ae<134514094>[32]
Symbolic@0x18f2ee0 insn@0x080485ad[1]: writeRegister(eip, 0x080485ae<134514094>[32])
Symbolic@0x18f2ee0 insn@0x080485ad[1]: undefined_(32) = v40482[32]
Symbolic@0x18f2ee0 insn@0x080485ad[1]: readRegister(esp, v40482[32]) = (add[32] esp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x080485ad[1]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080485ad[1]: add((add[32] esp_0[32] 0x00000004[32]), 0x00000004[32]) = (add[32] esp_0[32] 0x00000008[32])
Symbolic@0x18f2ee0 insn@0x080485ad[1]: writeRegister(esp, (add[32] esp_0[32] 0x00000008[32]))
Symbolic@0x18f2ee0 insn@0x080485ad[1]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080485ad[1]: undefined_(32) = v40486[32]
Symbolic@0x18f2ee0 insn@0x080485ad[1]: readMemory(ss, (add[32] esp_0[32] 0x00000004[32]), v40486[32], true[1]) = v40486[32]
Symbolic@0x18f2ee0 insn@0x080485ad[1]: writeRegister(ebx, v40486[32])
Symbolic@0x18f2ee0 insn@0x080485ad[1]: finishInstruction(pop    ebx)
registers:
  eax          write-only = v40462[32]
  ebx          write-only = v40486[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000008[32])
  eip          write-only = 0x080485ae<134514094>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000007[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v40486[32])
  addr=(add[32] esp_0[32] 0x00000006[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v40486[32])
  addr=(add[32] esp_0[32] 0x00000005[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v40486[32])
  addr=(add[32] esp_0[32] 0x00000004[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v40486[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v40462[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v40462[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v40462[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v40462[32])

0x080485ae: pop    ebp
Symbolic@0x18f2ee0: startInstruction(0x080485ae: pop    ebp)
Symbolic@0x18f2ee0 insn@0x080485ae[2]: number_(32, 134514094) = 0x080485ae<134514094>[32]
Symbolic@0x18f2ee0 insn@0x080485ae[2]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080485ae[2]: add(0x080485ae<134514094>[32], 0x00000001[32]) = 0x080485af<134514095>[32]
Symbolic@0x18f2ee0 insn@0x080485ae[2]: writeRegister(eip, 0x080485af<134514095>[32])
Symbolic@0x18f2ee0 insn@0x080485ae[2]: undefined_(32) = v40506[32]
Symbolic@0x18f2ee0 insn@0x080485ae[2]: readRegister(esp, v40506[32]) = (add[32] esp_0[32] 0x00000008[32])
Symbolic@0x18f2ee0 insn@0x080485ae[2]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080485ae[2]: add((add[32] esp_0[32] 0x00000008[32]), 0x00000004[32]) = (add[32] esp_0[32] 0x0000000c[32])
Symbolic@0x18f2ee0 insn@0x080485ae[2]: writeRegister(esp, (add[32] esp_0[32] 0x0000000c[32]))
Symbolic@0x18f2ee0 insn@0x080485ae[2]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080485ae[2]: undefined_(32) = v40510[32]
Symbolic@0x18f2ee0 insn@0x080485ae[2]: readMemory(ss, (add[32] esp_0[32] 0x00000008[32]), v40510[32], true[1]) = v40510[32]
Symbolic@0x18f2ee0 insn@0x080485ae[2]: writeRegister(ebp, v40510[32])
Symbolic@0x18f2ee0 insn@0x080485ae[2]: finishInstruction(pop    ebp)
registers:
  eax          write-only = v40462[32]
  ebx          write-only = v40486[32]
  esp          read-before-write = (add[32] esp_0[32] 0x0000000c[32])
  ebp          write-only = v40510[32]
  eip          write-only = 0x080485af<134514095>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x0000000b[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v40510[32])
  addr=(add[32] esp_0[32] 0x0000000a[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v40510[32])
  addr=(add[32] esp_0[32] 0x00000009[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v40510[32])
  addr=(add[32] esp_0[32] 0x00000008[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v40510[32])
  addr=(add[32] esp_0[32] 0x00000007[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v40486[32])
  addr=(add[32] esp_0[32] 0x00000006[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v40486[32])
  addr=(add[32] esp_0[32] 0x00000005[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v40486[32])
  addr=(add[32] esp_0[32] 0x00000004[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v40486[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v40462[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v40462[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v40462[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v40462[32])

0x080485af: ret    
Symbolic@0x18f2ee0: startInstruction(0x080485af: ret)
Symbolic@0x18f2ee0 insn@0x080485af[3]: number_(32, 134514095) = 0x080485af<134514095>[32]
Symbolic@0x18f2ee0 insn@0x080485af[3]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080485af[3]: add(0x080485af<134514095>[32], 0x00000001[32]) = 0x080485b0<134514096>[32]
Symbolic@0x18f2ee0 insn@0x080485af[3]: writeRegister(eip, 0x080485b0<134514096>[32])
Symbolic@0x18f2ee0 insn@0x080485af[3]: undefined_(32) = v40530[32]
Symbolic@0x18f2ee0 insn@0x080485af[3]: readRegister(esp, v40530[32]) = (add[32] esp_0[32] 0x0000000c[32])
Symbolic@0x18f2ee0 insn@0x080485af[3]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080485af[3]: add((add[32] esp_0[32] 0x0000000c[32]), 0x00000004[32]) = (add[32] esp_0[32] 0x00000010[32])
Symbolic@0x18f2ee0 insn@0x080485af[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080485af[3]: undefined_(32) = v40533[32]
Symbolic@0x18f2ee0 insn@0x080485af[3]: readMemory(ss, (add[32] esp_0[32] 0x0000000c[32]), v40533[32], true[1]) = v40533[32]
Symbolic@0x18f2ee0 insn@0x080485af[3]: filterReturnTarget(v40533[32]) = v40533[32]
Symbolic@0x18f2ee0 insn@0x080485af[3]: writeRegister(eip, v40533[32])
Symbolic@0x18f2ee0 insn@0x080485af[3]: writeRegister(esp, (add[32] esp_0[32] 0x00000010[32]))
Symbolic@0x18f2ee0 insn@0x080485af[3]: finishInstruction(ret)
registers:
  eax          write-only = v40462[32]
  ebx          write-only = v40486[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000010[32])
  ebp          write-only = v40510[32]
  eip          write-only = v40533[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x0000000f[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v40533[32])
  addr=(add[32] esp_0[32] 0x0000000e[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v40533[32])
  addr=(add[32] esp_0[32] 0x0000000d[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v40533[32])
  addr=(add[32] esp_0[32] 0x0000000c[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v40533[32])
  addr=(add[32] esp_0[32] 0x0000000b[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v40510[32])
  addr=(add[32] esp_0[32] 0x0000000a[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v40510[32])
  addr=(add[32] esp_0[32] 0x00000009[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v40510[32])
  addr=(add[32] esp_0[32] 0x00000008[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v40510[32])
  addr=(add[32] esp_0[32] 0x00000007[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v40486[32])
  addr=(add[32] esp_0[32] 0x00000006[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v40486[32])
  addr=(add[32] esp_0[32] 0x00000005[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v40486[32])
  addr=(add[32] esp_0[32] 0x00000004[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v40486[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v40462[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v40462[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v40462[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v40462[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080485b0: push   ebp
Symbolic@0x18f2ee0: startInstruction(0x080485b0: push   ebp)
Symbolic@0x18f2ee0 insn@0x080485b0[0]: number_(32, 134514096) = 0x080485b0<134514096>[32]
Symbolic@0x18f2ee0 insn@0x080485b0[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080485b0[0]: add(0x080485b0<134514096>[32], 0x00000001[32]) = 0x080485b1<134514097>[32]
Symbolic@0x18f2ee0 insn@0x080485b0[0]: writeRegister(eip, 0x080485b1<134514097>[32])
Symbolic@0x18f2ee0 insn@0x080485b0[0]: undefined_(32) = v41039[32]
Symbolic@0x18f2ee0 insn@0x080485b0[0]: readRegister(ebp, v41039[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x080485b0[0]: undefined_(32) = v41040[32]
Symbolic@0x18f2ee0 insn@0x080485b0[0]: readRegister(esp, v41040[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x080485b0[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080485b0[0]: add(esp_0[32], 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x080485b0[0]: writeRegister(esp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080485b0[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080485b0[0]: writeMemory(ss, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), ebp_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x080485b0[0]: finishInstruction(push   ebp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080485b1<134514097>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080485b1: mov    ebp, esp
Symbolic@0x18f2ee0: startInstruction(0x080485b1: mov    ebp, esp)
Symbolic@0x18f2ee0 insn@0x080485b1[1]: number_(32, 134514097) = 0x080485b1<134514097>[32]
Symbolic@0x18f2ee0 insn@0x080485b1[1]: number_(32, 2) = 0x00000002[32]
Symbolic@0x18f2ee0 insn@0x080485b1[1]: add(0x080485b1<134514097>[32], 0x00000002[32]) = 0x080485b3<134514099>[32]
Symbolic@0x18f2ee0 insn@0x080485b1[1]: writeRegister(eip, 0x080485b3<134514099>[32])
Symbolic@0x18f2ee0 insn@0x080485b1[1]: undefined_(32) = v41055[32]
Symbolic@0x18f2ee0 insn@0x080485b1[1]: readRegister(esp, v41055[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x080485b1[1]: writeRegister(ebp, (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]))
Symbolic@0x18f2ee0 insn@0x080485b1[1]: finishInstruction(mov    ebp, esp)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080485b3<134514099>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080485b3: push   ebx
Symbolic@0x18f2ee0: startInstruction(0x080485b3: push   ebx)
Symbolic@0x18f2ee0 insn@0x080485b3[2]: number_(32, 134514099) = 0x080485b3<134514099>[32]
Symbolic@0x18f2ee0 insn@0x080485b3[2]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080485b3[2]: add(0x080485b3<134514099>[32], 0x00000001[32]) = 0x080485b4<134514100>[32]
Symbolic@0x18f2ee0 insn@0x080485b3[2]: writeRegister(eip, 0x080485b4<134514100>[32])
Symbolic@0x18f2ee0 insn@0x080485b3[2]: undefined_(32) = v41062[32]
Symbolic@0x18f2ee0 insn@0x080485b3[2]: readRegister(ebx, v41062[32]) = ebx_0[32]
Symbolic@0x18f2ee0 insn@0x080485b3[2]: undefined_(32) = v41063[32]
Symbolic@0x18f2ee0 insn@0x080485b3[2]: readRegister(esp, v41063[32]) = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
Symbolic@0x18f2ee0 insn@0x080485b3[2]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080485b3[2]: add((add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])
Symbolic@0x18f2ee0 insn@0x080485b3[2]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]))
Symbolic@0x18f2ee0 insn@0x080485b3[2]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080485b3[2]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]), ebx_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x080485b3[2]: finishInstruction(push   ebx)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080485b4<134514100>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080485b4: push   eax
Symbolic@0x18f2ee0: startInstruction(0x080485b4: push   eax)
Symbolic@0x18f2ee0 insn@0x080485b4[3]: number_(32, 134514100) = 0x080485b4<134514100>[32]
Symbolic@0x18f2ee0 insn@0x080485b4[3]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080485b4[3]: add(0x080485b4<134514100>[32], 0x00000001[32]) = 0x080485b5<134514101>[32]
Symbolic@0x18f2ee0 insn@0x080485b4[3]: writeRegister(eip, 0x080485b5<134514101>[32])
Symbolic@0x18f2ee0 insn@0x080485b4[3]: undefined_(32) = v41079[32]
Symbolic@0x18f2ee0 insn@0x080485b4[3]: readRegister(eax, v41079[32]) = eax_0[32]
Symbolic@0x18f2ee0 insn@0x080485b4[3]: undefined_(32) = v41080[32]
Symbolic@0x18f2ee0 insn@0x080485b4[3]: readRegister(esp, v41080[32]) = (add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])
Symbolic@0x18f2ee0 insn@0x080485b4[3]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080485b4[3]: add((add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x080485b4[3]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]))
Symbolic@0x18f2ee0 insn@0x080485b4[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080485b4[3]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), eax_0[32], true[1])
Symbolic@0x18f2ee0 insn@0x080485b4[3]: finishInstruction(push   eax)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          write-only = 0x080485b5<134514101>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])

0x080485b5: call   0x080485ba<<Insn>>
Symbolic@0x18f2ee0: startInstruction(0x080485b5: call   0x080485ba<<Insn>>)
Symbolic@0x18f2ee0 insn@0x080485b5[4]: number_(32, 134514101) = 0x080485b5<134514101>[32]
Symbolic@0x18f2ee0 insn@0x080485b5[4]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x080485b5[4]: add(0x080485b5<134514101>[32], 0x00000005[32]) = 0x080485ba<134514106>[32]
Symbolic@0x18f2ee0 insn@0x080485b5[4]: writeRegister(eip, 0x080485ba<134514106>[32])
Symbolic@0x18f2ee0 insn@0x080485b5[4]: number_(32, 134514106) = 0x080485ba<134514106>[32]
Symbolic@0x18f2ee0 insn@0x080485b5[4]: unsignedExtend(0x080485ba<134514106>[32], 32) = 0x080485ba<134514106>[32]
Symbolic@0x18f2ee0 insn@0x080485b5[4]: undefined_(32) = v41097[32]
Symbolic@0x18f2ee0 insn@0x080485b5[4]: readRegister(esp, v41097[32]) = (add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32])
Symbolic@0x18f2ee0 insn@0x080485b5[4]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080485b5[4]: add((add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]), 0xfffffffc<4294967292,-4>[32]) = (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])
Symbolic@0x18f2ee0 insn@0x080485b5[4]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080485b5[4]: undefined_(32) = v41100[32]
Symbolic@0x18f2ee0 insn@0x080485b5[4]: readRegister(eip, v41100[32]) = 0x080485ba<134514106>[32]
Symbolic@0x18f2ee0 insn@0x080485b5[4]: writeMemory(ss, (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]), 0x080485ba<134514106>[32], true[1])
Symbolic@0x18f2ee0 insn@0x080485b5[4]: writeRegister(esp, (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]))
Symbolic@0x18f2ee0 insn@0x080485b5[4]: filterCallTarget(0x080485ba<134514106>[32]) = 0x080485ba<134514106>[32]
Symbolic@0x18f2ee0 insn@0x080485b5[4]: writeRegister(eip, 0x080485ba<134514106>[32])
Symbolic@0x18f2ee0 insn@0x080485b5[4]: finishInstruction(call   0x080485ba<<Insn>>)
registers:
  esp          read-before-write = (add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32])
  ebp          read-before-write = (add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])
  eip          = 0x080485ba<134514106>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0xfffffff3<4294967283,-13>[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0xfffffff2<4294967282,-14>[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0xfffffff1<4294967281,-15>[32]) write-only value=0x85<-123>[8]
  addr=(add[32] esp_0[32] 0xfffffff0<4294967280,-16>[32]) write-only value=0xba<-70>[8]
  addr=(add[32] esp_0[32] 0xfffffff7<4294967287,-9>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] eax_0[32])
  addr=(add[32] esp_0[32] 0xfffffff6<4294967286,-10>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] eax_0[32])
  addr=(add[32] esp_0[32] 0xfffffff5<4294967285,-11>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] eax_0[32])
  addr=(add[32] esp_0[32] 0xfffffff4<4294967284,-12>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] eax_0[32])
  addr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  addr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32]) write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32]) write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32]) write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebp_0[32])
  addr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32]) write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebp_0[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080485ba: pop    ebx
Symbolic@0x18f2ee0: startInstruction(0x080485ba: pop    ebx)
Symbolic@0x18f2ee0 insn@0x080485ba[0]: number_(32, 134514106) = 0x080485ba<134514106>[32]
Symbolic@0x18f2ee0 insn@0x080485ba[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080485ba[0]: add(0x080485ba<134514106>[32], 0x00000001[32]) = 0x080485bb<134514107>[32]
Symbolic@0x18f2ee0 insn@0x080485ba[0]: writeRegister(eip, 0x080485bb<134514107>[32])
Symbolic@0x18f2ee0 insn@0x080485ba[0]: undefined_(32) = v41598[32]
Symbolic@0x18f2ee0 insn@0x080485ba[0]: readRegister(esp, v41598[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x080485ba[0]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080485ba[0]: add(esp_0[32], 0x00000004[32]) = (add[32] esp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x080485ba[0]: writeRegister(esp, (add[32] esp_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080485ba[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080485ba[0]: undefined_(32) = v41601[32]
Symbolic@0x18f2ee0 insn@0x080485ba[0]: readMemory(ss, esp_0[32], v41601[32], true[1]) = v41601[32]
Symbolic@0x18f2ee0 insn@0x080485ba[0]: writeRegister(ebx, v41601[32])
Symbolic@0x18f2ee0 insn@0x080485ba[0]: finishInstruction(pop    ebx)
registers:
  ebx          write-only = v41601[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x080485bb<134514107>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v41601[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v41601[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v41601[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v41601[32])

0x080485bb: add    ebx, 0x0000110e<4366>
Symbolic@0x18f2ee0: startInstruction(0x080485bb: add    ebx, 0x0000110e<4366>)
Symbolic@0x18f2ee0 insn@0x080485bb[1]: number_(32, 134514107) = 0x080485bb<134514107>[32]
Symbolic@0x18f2ee0 insn@0x080485bb[1]: number_(32, 6) = 0x00000006[32]
Symbolic@0x18f2ee0 insn@0x080485bb[1]: add(0x080485bb<134514107>[32], 0x00000006[32]) = 0x080485c1<134514113>[32]
Symbolic@0x18f2ee0 insn@0x080485bb[1]: writeRegister(eip, 0x080485c1<134514113>[32])
Symbolic@0x18f2ee0 insn@0x080485bb[1]: boolean_(0) = false[1]
Symbolic@0x18f2ee0 insn@0x080485bb[1]: number_(32, 4366) = 0x0000110e<4366>[32]
Symbolic@0x18f2ee0 insn@0x080485bb[1]: undefined_(32) = v41621[32]
Symbolic@0x18f2ee0 insn@0x080485bb[1]: readRegister(ebx, v41621[32]) = v41601[32]
Symbolic@0x18f2ee0 insn@0x080485bb[1]: addWithCarries(v41601[32], 0x0000110e<4366>[32], false[1]) = (add[32] v41601[32] 0x0000110e<4366>[32])
Symbolic@0x18f2ee0 insn@0x080485bb[1]: also returns: (extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: extract((add[32] v41601[32] 0x0000110e<4366>[32]), 0, 8) = (extract[8] 0x00000000[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32]))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32])), 1, 2) = (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v41601[32] 0x0000110e<4366>[32]))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32])), 0, 1) = (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v41601[32] 0x0000110e<4366>[32]))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: xor_((extract[1] 0x00000000[32] 0x00000001[32] (add[32] v41601[32] 0x0000110e<4366>[32])), (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v41601[32] 0x0000110e<4366>[32]))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v41601[32] 0x0000110e<4366>[32])))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32])), 3, 4) = (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v41601[32] 0x0000110e<4366>[32]))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32])), 2, 3) = (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v41601[32] 0x0000110e<4366>[32]))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: xor_((extract[1] 0x00000002[32] 0x00000003[32] (add[32] v41601[32] 0x0000110e<4366>[32])), (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v41601[32] 0x0000110e<4366>[32]))) = (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v41601[32] 0x0000110e<4366>[32])))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32])), 5, 6) = (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v41601[32] 0x0000110e<4366>[32]))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32])), 4, 5) = (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v41601[32] 0x0000110e<4366>[32]))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: xor_((extract[1] 0x00000004[32] 0x00000005[32] (add[32] v41601[32] 0x0000110e<4366>[32])), (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v41601[32] 0x0000110e<4366>[32]))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v41601[32] 0x0000110e<4366>[32])))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32])), 7, 8) = (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32]))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: extract((extract[8] 0x00000000[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32])), 6, 7) = (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v41601[32] 0x0000110e<4366>[32]))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: xor_((extract[1] 0x00000006[32] 0x00000007[32] (add[32] v41601[32] 0x0000110e<4366>[32])), (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32]))) = (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32])))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v41601[32] 0x0000110e<4366>[32]))), (bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v41601[32] 0x0000110e<4366>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v41601[32] 0x0000110e<4366>[32])))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: xor_((bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v41601[32] 0x0000110e<4366>[32]))), (bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32])))) = (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32])))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: xor_((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v41601[32] 0x0000110e<4366>[32]))), (bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32])))) = (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32])))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: invert((bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32])))) = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32]))))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: writeRegister(pf, (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32])))))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: extract((add[32] v41601[32] 0x0000110e<4366>[32]), 31, 32) = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v41601[32] 0x0000110e<4366>[32]))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: writeRegister(sf, (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v41601[32] 0x0000110e<4366>[32])))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: equalToZero((add[32] v41601[32] 0x0000110e<4366>[32])) = (zerop[1] (add[32] v41601[32] 0x0000110e<4366>[32]))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: writeRegister(zf, (zerop[1] (add[32] v41601[32] 0x0000110e<4366>[32])))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33])), 31, 32) = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33])), 30, 31) = (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: extract((extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33])), 3, 4) = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: writeRegister(af, (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33])))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: writeRegister(cf, (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33])))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: xor_((extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33])), (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]))) = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33])))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: writeRegister(of, (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]))))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: writeRegister(ebx, (add[32] v41601[32] 0x0000110e<4366>[32]))
Symbolic@0x18f2ee0 insn@0x080485bb[1]: finishInstruction(add    ebx, 0x0000110e<4366>)
registers:
  ebx          = (add[32] v41601[32] 0x0000110e<4366>[32])
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x080485c1<134514113>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]))
  zf           write-only = (zerop[1] (add[32] v41601[32] 0x0000110e<4366>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v41601[32] 0x0000110e<4366>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v41601[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v41601[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v41601[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v41601[32])

0x080485c1: call   0x08048390<__do_global_dtors_aux>
Symbolic@0x18f2ee0: startInstruction(0x080485c1: call   0x08048390<__do_global_dtors_aux>)
Symbolic@0x18f2ee0 insn@0x080485c1[2]: number_(32, 134514113) = 0x080485c1<134514113>[32]
Symbolic@0x18f2ee0 insn@0x080485c1[2]: number_(32, 5) = 0x00000005[32]
Symbolic@0x18f2ee0 insn@0x080485c1[2]: add(0x080485c1<134514113>[32], 0x00000005[32]) = 0x080485c6<134514118>[32]
Symbolic@0x18f2ee0 insn@0x080485c1[2]: writeRegister(eip, 0x080485c6<134514118>[32])
Symbolic@0x18f2ee0 insn@0x080485c1[2]: number_(32, 134513552) = 0x08048390<134513552>[32]
Symbolic@0x18f2ee0 insn@0x080485c1[2]: unsignedExtend(0x08048390<134513552>[32], 32) = 0x08048390<134513552>[32]
Symbolic@0x18f2ee0 insn@0x080485c1[2]: undefined_(32) = v41663[32]
Symbolic@0x18f2ee0 insn@0x080485c1[2]: readRegister(esp, v41663[32]) = (add[32] esp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x080485c1[2]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[32]
Symbolic@0x18f2ee0 insn@0x080485c1[2]: add((add[32] esp_0[32] 0x00000004[32]), 0xfffffffc<4294967292,-4>[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x080485c1[2]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080485c1[2]: undefined_(32) = v41666[32]
Symbolic@0x18f2ee0 insn@0x080485c1[2]: readRegister(eip, v41666[32]) = 0x080485c6<134514118>[32]
Symbolic@0x18f2ee0 insn@0x080485c1[2]: writeMemory(ss, esp_0[32], 0x080485c6<134514118>[32], true[1])
Symbolic@0x18f2ee0 insn@0x080485c1[2]: writeRegister(esp, esp_0[32])
Symbolic@0x18f2ee0 insn@0x080485c1[2]: filterCallTarget(0x08048390<134513552>[32]) = 0x08048390<134513552>[32]
Symbolic@0x18f2ee0 insn@0x080485c1[2]: writeRegister(eip, 0x08048390<134513552>[32])
Symbolic@0x18f2ee0 insn@0x080485c1[2]: finishInstruction(call   0x08048390<__do_global_dtors_aux>)
registers:
  ebx          = (add[32] v41601[32] 0x0000110e<4366>[32])
  eip          = 0x08048390<134513552>[32]
  cf           write-only = (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]))
  pf           write-only = (invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] v41601[32] 0x0000110e<4366>[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] v41601[32] 0x0000110e<4366>[32]))))
  af           write-only = (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]))
  zf           write-only = (zerop[1] (add[32] v41601[32] 0x0000110e<4366>[32]))
  sf           write-only = (extract[1] 0x0000001f[32] 0x00000020[32] (add[32] v41601[32] 0x0000110e<4366>[32]))
  of           write-only = (bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33]) (uextend[33] 0x00000021[32] v41601[32]) 0x00000110e<4366>[33])))
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) write-only value=0x08[8]
  addr=(add[32] esp_0[32] 0x00000002[32]) write-only value=0x04[8]
  addr=(add[32] esp_0[32] 0x00000001[32]) write-only value=0x85<-123>[8]
  addr=esp_0[32] write-only value=0xc6<-58>[8]
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v41601[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v41601[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v41601[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v41601[32])
Symbolic@0x18f2ee0: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080485c6: pop    eax
Symbolic@0x18f2ee0: startInstruction(0x080485c6: pop    eax)
Symbolic@0x18f2ee0 insn@0x080485c6[0]: number_(32, 134514118) = 0x080485c6<134514118>[32]
Symbolic@0x18f2ee0 insn@0x080485c6[0]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080485c6[0]: add(0x080485c6<134514118>[32], 0x00000001[32]) = 0x080485c7<134514119>[32]
Symbolic@0x18f2ee0 insn@0x080485c6[0]: writeRegister(eip, 0x080485c7<134514119>[32])
Symbolic@0x18f2ee0 insn@0x080485c6[0]: undefined_(32) = v42164[32]
Symbolic@0x18f2ee0 insn@0x080485c6[0]: readRegister(esp, v42164[32]) = esp_0[32]
Symbolic@0x18f2ee0 insn@0x080485c6[0]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080485c6[0]: add(esp_0[32], 0x00000004[32]) = (add[32] esp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x080485c6[0]: writeRegister(esp, (add[32] esp_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080485c6[0]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080485c6[0]: undefined_(32) = v42167[32]
Symbolic@0x18f2ee0 insn@0x080485c6[0]: readMemory(ss, esp_0[32], v42167[32], true[1]) = v42167[32]
Symbolic@0x18f2ee0 insn@0x080485c6[0]: writeRegister(eax, v42167[32])
Symbolic@0x18f2ee0 insn@0x080485c6[0]: finishInstruction(pop    eax)
registers:
  eax          write-only = v42167[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000004[32])
  eip          write-only = 0x080485c7<134514119>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v42167[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v42167[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v42167[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v42167[32])

0x080485c7: pop    ebx
Symbolic@0x18f2ee0: startInstruction(0x080485c7: pop    ebx)
Symbolic@0x18f2ee0 insn@0x080485c7[1]: number_(32, 134514119) = 0x080485c7<134514119>[32]
Symbolic@0x18f2ee0 insn@0x080485c7[1]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080485c7[1]: add(0x080485c7<134514119>[32], 0x00000001[32]) = 0x080485c8<134514120>[32]
Symbolic@0x18f2ee0 insn@0x080485c7[1]: writeRegister(eip, 0x080485c8<134514120>[32])
Symbolic@0x18f2ee0 insn@0x080485c7[1]: undefined_(32) = v42187[32]
Symbolic@0x18f2ee0 insn@0x080485c7[1]: readRegister(esp, v42187[32]) = (add[32] esp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x080485c7[1]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080485c7[1]: add((add[32] esp_0[32] 0x00000004[32]), 0x00000004[32]) = (add[32] esp_0[32] 0x00000008[32])
Symbolic@0x18f2ee0 insn@0x080485c7[1]: writeRegister(esp, (add[32] esp_0[32] 0x00000008[32]))
Symbolic@0x18f2ee0 insn@0x080485c7[1]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080485c7[1]: undefined_(32) = v42191[32]
Symbolic@0x18f2ee0 insn@0x080485c7[1]: readMemory(ss, (add[32] esp_0[32] 0x00000004[32]), v42191[32], true[1]) = v42191[32]
Symbolic@0x18f2ee0 insn@0x080485c7[1]: writeRegister(ebx, v42191[32])
Symbolic@0x18f2ee0 insn@0x080485c7[1]: finishInstruction(pop    ebx)
registers:
  eax          write-only = v42167[32]
  ebx          write-only = v42191[32]
  esp          read-before-write = (add[32] esp_0[32] 0x00000008[32])
  eip          write-only = 0x080485c8<134514120>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] esp_0[32] 0x00000007[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v42191[32])
  addr=(add[32] esp_0[32] 0x00000006[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v42191[32])
  addr=(add[32] esp_0[32] 0x00000005[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v42191[32])
  addr=(add[32] esp_0[32] 0x00000004[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v42191[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v42167[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v42167[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v42167[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v42167[32])

0x080485c8: leave  
Symbolic@0x18f2ee0: startInstruction(0x080485c8: leave)
Symbolic@0x18f2ee0 insn@0x080485c8[2]: number_(32, 134514120) = 0x080485c8<134514120>[32]
Symbolic@0x18f2ee0 insn@0x080485c8[2]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080485c8[2]: add(0x080485c8<134514120>[32], 0x00000001[32]) = 0x080485c9<134514121>[32]
Symbolic@0x18f2ee0 insn@0x080485c8[2]: writeRegister(eip, 0x080485c9<134514121>[32])
Symbolic@0x18f2ee0 insn@0x080485c8[2]: undefined_(32) = v42211[32]
Symbolic@0x18f2ee0 insn@0x080485c8[2]: readRegister(ebp, v42211[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x080485c8[2]: writeRegister(esp, ebp_0[32])
Symbolic@0x18f2ee0 insn@0x080485c8[2]: undefined_(32) = v42213[32]
Symbolic@0x18f2ee0 insn@0x080485c8[2]: readRegister(esp, v42213[32]) = ebp_0[32]
Symbolic@0x18f2ee0 insn@0x080485c8[2]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080485c8[2]: add(ebp_0[32], 0x00000004[32]) = (add[32] ebp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x080485c8[2]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080485c8[2]: undefined_(32) = v42216[32]
Symbolic@0x18f2ee0 insn@0x080485c8[2]: readMemory(ss, ebp_0[32], v42216[32], true[1]) = v42216[32]
Symbolic@0x18f2ee0 insn@0x080485c8[2]: writeRegister(ebp, v42216[32])
Symbolic@0x18f2ee0 insn@0x080485c8[2]: writeRegister(esp, (add[32] ebp_0[32] 0x00000004[32]))
Symbolic@0x18f2ee0 insn@0x080485c8[2]: finishInstruction(leave)
registers:
  eax          write-only = v42167[32]
  ebx          write-only = v42191[32]
  esp          read-before-write = (add[32] ebp_0[32] 0x00000004[32])
  ebp          read-before-write = v42216[32]
  eip          write-only = 0x080485c9<134514121>[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v42216[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v42216[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v42216[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v42216[32])
  addr=(add[32] esp_0[32] 0x00000007[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v42191[32])
  addr=(add[32] esp_0[32] 0x00000006[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v42191[32])
  addr=(add[32] esp_0[32] 0x00000005[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v42191[32])
  addr=(add[32] esp_0[32] 0x00000004[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v42191[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v42167[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v42167[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v42167[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v42167[32])

0x080485c9: ret    
Symbolic@0x18f2ee0: startInstruction(0x080485c9: ret)
Symbolic@0x18f2ee0 insn@0x080485c9[3]: number_(32, 134514121) = 0x080485c9<134514121>[32]
Symbolic@0x18f2ee0 insn@0x080485c9[3]: number_(32, 1) = 0x00000001[32]
Symbolic@0x18f2ee0 insn@0x080485c9[3]: add(0x080485c9<134514121>[32], 0x00000001[32]) = 0x080485ca<134514122>[32]
Symbolic@0x18f2ee0 insn@0x080485c9[3]: writeRegister(eip, 0x080485ca<134514122>[32])
Symbolic@0x18f2ee0 insn@0x080485c9[3]: undefined_(32) = v42238[32]
Symbolic@0x18f2ee0 insn@0x080485c9[3]: readRegister(esp, v42238[32]) = (add[32] ebp_0[32] 0x00000004[32])
Symbolic@0x18f2ee0 insn@0x080485c9[3]: number_(32, 4) = 0x00000004[32]
Symbolic@0x18f2ee0 insn@0x080485c9[3]: add((add[32] ebp_0[32] 0x00000004[32]), 0x00000004[32]) = (add[32] ebp_0[32] 0x00000008[32])
Symbolic@0x18f2ee0 insn@0x080485c9[3]: boolean_(1) = true[1]
Symbolic@0x18f2ee0 insn@0x080485c9[3]: undefined_(32) = v42241[32]
Symbolic@0x18f2ee0 insn@0x080485c9[3]: readMemory(ss, (add[32] ebp_0[32] 0x00000004[32]), v42241[32], true[1]) = v42241[32]
Symbolic@0x18f2ee0 insn@0x080485c9[3]: filterReturnTarget(v42241[32]) = v42241[32]
Symbolic@0x18f2ee0 insn@0x080485c9[3]: writeRegister(eip, v42241[32])
Symbolic@0x18f2ee0 insn@0x080485c9[3]: writeRegister(esp, (add[32] ebp_0[32] 0x00000008[32]))
Symbolic@0x18f2ee0 insn@0x080485c9[3]: finishInstruction(ret)
registers:
  eax          write-only = v42167[32]
  ebx          write-only = v42191[32]
  esp          read-before-write = (add[32] ebp_0[32] 0x00000008[32])
  ebp          read-before-write = v42216[32]
  eip          write-only = v42241[32]
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebp_0[32] 0x00000007[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v42241[32])
  addr=(add[32] ebp_0[32] 0x00000006[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v42241[32])
  addr=(add[32] ebp_0[32] 0x00000005[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v42241[32])
  addr=(add[32] ebp_0[32] 0x00000004[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v42241[32])
  addr=(add[32] ebp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v42216[32])
  addr=(add[32] ebp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v42216[32])
  addr=(add[32] ebp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v42216[32])
  addr=ebp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v42216[32])
  addr=(add[32] esp_0[32] 0x00000007[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v42191[32])
  addr=(add[32] esp_0[32] 0x00000006[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v42191[32])
  addr=(add[32] esp_0[32] 0x00000005[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v42191[32])
  addr=(add[32] esp_0[32] 0x00000004[32]) read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v42191[32])
  addr=(add[32] esp_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v42167[32])
  addr=(add[32] esp_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v42167[32])
  addr=(add[32] esp_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v42167[32])
  addr=esp_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v42167[32])
Symbolic@0x18f2ee0: operators destroyed
analyzed headers: 1
