## Process this file with automake to create Makefile.in
include $(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs

## Add bugs to this line as they are fixed so that they can be used as test problems
## At least we should not reintroduce these fixed bugs again later.
# TESTCODES = \
#      test2001_11.C \
#      test2001_01.C \
#      test2001_02.C \
#      test2001_03.C \
#      test2001_04.C \
#      test2001_05.C \
#      test2001_06.C \
#      test2001_07.C \
#      test2001_08.C \
#      test2001_09.C \
#      test2001_10.C \
#      test2001_14.C \
#      test2001_15.C \
#      test2001_17.C \
#      test2001_18.C \
#      test2001_19.C \
#      test2001_20.C \
#      test2001_21.C \
#      test2001_22.C \
#      test_treeTrav_MK_01.C \
#      test_treeTrav_MK_02.C

# Shorter list for testing of make distcheck distribution tests
SHORT_TESTCODES = \
     test2001_01.C \
     test2001_02.C \
     test2001_04.C \
     test2001_05.C \
     test2001_06.C \
     test2001_07.C \
     test2001_08.C \
     test2001_10.C \
     test2001_11.C

TESTCODES = \
     test2001_11.C \
     test2001_12.C \
     test2001_13.C \
     test2001_16.C \
     test2004_35.C \
     test2004_65.C \
     test2004_67.C \
     test2001_01.C \
     test2001_02.C \
     test2001_04.C \
     test2001_05.C \
     test2001_06.C \
     test2001_07.C \
     test2001_08.C \
     test2001_10.C \
     test2001_17.C \
     test2001_18.C \
     test2001_19.C \
     test2001_20.C \
     test2001_21.C \
     test2001_22.C \
     test2001_23.C \
     test2001_26.C \
     test2001_28.C \
     test2001_29.C \
     test2003_02.C \
     test2003_03.C \
     test2003_04.C \
     test2003_05.C \
     test2003_06.C \
     test2003_08.C \
     test2003_09.C \
     test2003_10.C \
     test2003_11.C \
     test2003_29.C \
     test2003_30.C \
     test2003_31.C \
     test2003_32.C \
     test2003_35.C \
     test2003_36.C \
     test2003_37.C \
     test2004_01.C \
     test2004_02.C \
     test2004_03.C \
     test2004_04.C \
     test2004_05.C \
     test2004_07.C \
     test2004_08.C \
     test2004_09.C \
     test2004_11.C \
     test2004_12.C \
     test2004_13.C \
     test2004_14.C \
     test2004_15.C \
     test2004_16.C \
     test2004_17.C \
     test2004_18.C \
     test2004_23.C \
     test2004_26.C \
     test2004_27.C \
     test2004_28.C \
     test2004_30.C \
     test2004_31.C \
     test2004_32.C \
     test2004_33.C \
     test2004_34.C \
     test2004_36.C \
     test2004_37.C \
     test2004_38.C \
     test2004_39.C \
     test2004_40.C \
     test2004_43.C \
     test2004_44.C \
     test2004_45.C \
     test2004_47.C \
     test2004_48.C \
     test2004_49.C \
     test2004_52.C \
     test2004_58.C \
     test2004_60.C \
     test2004_64.C \
     test2004_70.C \
     test2004_71.C \
     test2004_72.C \
     test2004_73.C \
     test2004_74.C \
     test2004_75.C \
     test2004_76.C \
     test2004_77.C \
     test2004_78.C \
     test2004_79.C \
     test2004_80.C \
     test2004_81.C \
     test2004_82.C \
     test2004_84.C \
     test2004_85.C \
     test2004_86.C \
     test2004_87.C \
     test2004_88.C \
     test2004_89.C \
     test2004_90.C \
     test2004_91.C \
     test2004_93.C \
     test2004_94.C \
     test2004_95.C \
     test2004_96.C \
     test2004_97.C \
     test2004_98.C \
     test2004_99.C \
     test2004_100.C \
     test2004_101.C \
     test2004_102.C \
     test2004_103.C \
     test2004_104.C \
     test2004_105.C \
     test2004_106.C \
     test2004_107.C \
     test2004_108.C \
     test2004_109.C \
     test2004_110.C \
     test2004_111.C \
     test2004_112.C \
     test2004_113.C \
     test2004_114.C \
     test2004_115.C \
     test2004_116.C \
     test2004_117.C \
     test2004_118.C \
     test2004_119.C \
     test2004_120.C \
     test2004_121.C \
     test2004_122.C \
     test2004_123.C \
     test2004_124.C \
     test2004_125.C \
     test2004_127.C \
     test2004_128.C \
     test2004_129.C \
     test2004_130.C \
     test2004_131.C \
     test2004_132.C \
     test2004_133.C \
     test2004_134.C \
     test2004_135.C \
     test2004_136.C \
     test2004_137.C \
     test2004_138.C \
     test2004_139.C \
     test2004_140.C \
     test2004_141.C \
     test2004_142.C \
     test2004_143.C \
     test2004_144.C \
     test2004_145.C \
     test2004_146.C \
     test2004_147.C \
     test2004_148.C \
     test2004_149.C \
     test2004_150.C \
     test2004_151.C \
     test2004_152.C \
     test2004_155.C \
     test2004_156.C \
     test2004_157.C \
     test2004_158.C \
     test2004_159.C \
     test2004_160.C \
     test2004_161.C \
     test2004_162.C \
     test2004_163.C \
     test2004_164.C \
     test2005_02.C \
     test2005_03.C \
     test2005_04.C \
     test2005_05.C \
     test2005_06.C \
     test2005_07.C \
     test2005_08.C \
     test2005_09.C \
     test2005_10.C \
     test2005_11.C \
     test2005_12.C \
     test2005_13.C \
     test2005_14.C \
     test2005_15.C \
     test2005_16.C \
     test2005_17.C \
     test2005_19.C \
     test2005_20.C \
     test2005_21.C \
     test2005_22.C \
     test2005_23.C \
     test2005_24.C \
     test2005_25.C \
     test2005_26.C \
     test2005_27.C \
     test2005_28.C \
     test2005_29.C \
     test2005_30.C \
     test2005_31.C \
     test2005_32.C \
     test2005_33.C \
     test2005_34.C \
     test2005_35.C \
     test2005_36.C \
     test2005_37.C \
     test2005_38.C \
     test2005_39.C \
     test2005_40.C \
     test2005_41.C \
     test2005_42.C \
     test2005_43.C \
     test2005_44.C \
     test2005_45.C \
     test2005_46.C \
     test2005_47.C \
     test2005_48.C \
     test2005_49.C \
     test2005_50.C \
     test2005_51.C \
     test2005_52.C \
     test2005_53.C \
     test2005_55.C \
     test2005_57.C \
     test2005_58.C \
     test2005_59.C \
     test2005_60.C \
     test2005_61.C \
     test2005_62.C \
     test2005_63.C \
     test2005_64.C \
     test2005_65.C \
     test2005_66.C \
     test2005_67.C \
     test2005_68.C \
     test2005_70.C \
     test2005_71.C \
     test2005_72.C \
     test2005_73.C \
     test2005_74.C \
     test2005_75a.C \
     test2005_75b.C \
     test2005_76.C \
     test2005_77.C \
     test2005_78.C \
     test2005_79.C \
     test2005_80.C \
     test2005_82.C \
     test2005_83.C \
     test2005_84.C \
     test2005_86.C \
     test2005_87.C \
     test2005_88.C \
     test2005_89.C \
     test2005_90.C \
     test2005_91.C \
     test2005_92.C \
     test2005_94.C \
     test2005_95.C \
     test2005_96.C \
     test2005_97.C \
     test2005_99.C \
     test2005_100.C \
     test2005_101.C \
     test2005_102.C \
     test2005_103.C \
     test2005_104.C \
     test2005_105.C \
     test2005_106.C \
     test2005_107.C \
     test2005_108.C \
     test2005_109.C \
     test2005_110.C \
     test2005_111.C \
     test2005_112.C \
     test2005_113.C \
     test2005_114.C \
     test2005_116.C \
     test2005_117.C \
     test2005_118.C \
     test2005_119.C \
     test2005_120.C \
     test2005_121.C \
     test2005_122.C \
     test2005_123.C \
     test2005_124.C \
     test2005_125.C \
     test2005_126.C \
     test2005_127.C \
     test2005_128.C \
     test2005_129.C \
     test2005_130.C \
     test2005_131.C \
     test2005_132.C \
     test2005_133.C \
     test2005_134.C \
     test2005_135.C \
     test2005_136.C \
     test2005_137.C \
     test2005_138.C \
     test2005_139.C \
     test2005_140.C \
     test2005_141.C \
     test2005_142.C \
     test2005_143.C \
     test2005_144.C \
     test2005_145.C \
     test2005_146.C \
     test2005_147.C \
     test2005_148.C \
     test2005_149.C \
     test2005_150.C \
     test2005_152.C \
     test2005_153.C \
     test2005_154.C \
     test2005_155.C \
     test2005_156.C \
     test2005_157.C \
     test2005_158.C \
     test2005_159.C \
     test2005_160.C \
     test2005_161.C \
     test2005_162.C \
     test2005_163.C \
     test2005_164.C \
     test2005_165.C \
     test2005_166.C \
     test2005_167.C \
     test2005_169.C \
     test2005_170.C \
     test2005_171.C \
     test2005_173.C \
     test2005_174.C \
     test2005_175.C \
     test2005_176.C \
     test2005_177.C \
     test2005_178.C \
     test2005_179.C \
     test2005_180.C \
     test2005_181.C \
     test2005_182.C \
     test2005_183.C \
     test2005_184.C \
     test2005_185.C \
     test2005_187.C \
     test2005_188.C \
     test2005_190.C \
     test2005_191.C \
     test2005_192.C \
     test2005_193.C \
     test2005_194.C \
     test2005_195.C \
     test2005_196.C \
     test2005_197.C \
     test2005_198.C \
     test2005_199.C \
     test2005_203.C \
     test2005_205.C \
     test2005_206.C \
     test2005_207.C \
     test2005_208.C \
     test2005_209.C \
     test2006_01.C \
     test2006_02.C \
     test2006_03.C \
     test2006_04.C \
     test2006_05.C \
     test2006_06.C \
     test2006_07.C \
     test2006_08.C \
     test2006_56.C \
     test2006_61.C \
     test2006_62.C \
     test2006_63.C \
     test2006_66.C \
     test2006_67.C \
     test2006_68.C \
     test2006_69.C \
     test2006_70.C \
     test2006_71.C \
     test2006_72.C \
     test2006_73.C \
     test2006_74.C \
     test2006_75.C \
     test2006_76.C \
     test2006_77.C \
     test2006_78.C \
     test2006_79.C \
     test2006_80.C \
     test2006_81.C \
     test2006_82.C \
     test2006_83.C \
     test2006_84.C \
     lexPhase2003_01.C

# DQ (9/4/2005): Generated code with name qualification 
# "namespace std { template<> struct std::X < int > }" 
# not allowed in g++ 3.4.3 (test commented out for now).
# There are still several cases like this so that the 
# code generation within ROSE will not pass with 3.4.x
# at present.
#    test2005_81.C
#    test2005_93.C

# DQ (7/27/2005): Example generates instanatiations for template static data members (redifinition error)
#    test2005_69.C

# DQ (9/10/2005): This code fails with 3.4.x, but passes with 3.3.x
#    test2005_98.C

# DQ (7/25/2005): Example which breaks g++ 3.4.3 (from Peter), also breaks ROSE :-)
#    test2005_115.C

# This demonstrates a bug in g++ (ROSE can't handle it until g++ can handle it)
#    test2005_151.C

# DQ (6/30/2005): Removed to compile Kull (submitted by Jeremiah Willcock)
#    test2005_85.C (Duff's Device)

# Moved to explicit rule below so that we could include -I<pythonDir>
#     test2005_18.C
#     test2005_54.C
#     test2005_24.C
#     test2004_62.C 
#     test2004_63.C 
#     test2004_41.C

# This is now an explicit makefile rule (so that we can use the -rose:C_only option)
#     test2004_21.C
#     test2004_21.c 

# This fails since it uses old style C and must be compiled in a file with *.c (instead of *.C)
#      test2004_20.C

# These require special options and have specific makefile rules
#     test2004_22.C
#     test2004_30.C
#     test2004_41.C

# DQ (8/8/2005): requires use od Python.h not included in ROSE distribution
#     test2004_92.C

# Build the list of object files
TEST_Objects = ${TESTCODES:.C=.o}

# Restrict to level 6 testing for the moment
# ROSE_FLAGS = -rose:test 6

# Suppress all warnings (in EDG: --no_warnings) (in g++: -w) 
ROSE_FLAGS = --edg:no_warnings -w

ROSE_VERBOSE = -rose:verbose 0
# ROSE_VERBOSE =

C_ONLY = -rose:C_only
# C_ONLY =

TRANSLATOR_EXECUTABLE = $(top_builddir)/tests/testTranslator 
TEST_TRANSLATOR = $(TRANSLATOR_EXECUTABLE) $(ROSE_FLAGS)

## Include the path to A++ and the transformation specification
TESTCODE_INCLUDES = -I$(top_srcdir)/tests/CompileTests/A++Code -I$(srcdir) 

# Test for Old-Style C function definitions
test2004_19.o: $(srcdir)/test2004_19.C $(TRANSLATOR_EXECUTABLE)
	@echo "Test for C_only bugs (reported by Chadd)"
#	gcc -c $(srcdir)/test2004_19.C
	$(VALGRIND) $(TEST_TRANSLATOR) -rose:C_only -c $(srcdir)/test2004_19.C

# Test for Old-Style C function definitions
test2004_21.o: $(srcdir)/test2004_21.c $(TRANSLATOR_EXECUTABLE)
	@echo "Test for C_only bugs must use *.c suffix instead of *.C suffix (reported by Kyle)"
#	gcc -c $(srcdir)/test2004_21.c
	$(VALGRIND) $(TEST_TRANSLATOR) $(C_ONLY) -c $(srcdir)/test2004_21.c

# Test for UPC example code
test2004_22.o: $(srcdir)/test2004_22.C $(TRANSLATOR_EXECUTABLE)
	$(TEST_TRANSLATOR) --edg:upc -c $(srcdir)/test2004_22.C

# Test of export keyword
test2004_30.o: $(srcdir)/test2004_30.C $(TRANSLATOR_EXECUTABLE)
	$(TEST_TRANSLATOR) --edg:restrict --edg:export -c $(srcdir)/test2004_30.C

# Test of simple STL (list) example code
test2004_41.o: $(srcdir)/test2004_41.C $(TRANSLATOR_EXECUTABLE)
	$(TEST_TRANSLATOR) --edg:restrict --edg:export -I../g++_HEADERS/hdrs1/bits -c $(srcdir)/test2004_41.C 

# Test for STL example code
# test2004_92.o: $(srcdir)/test2004_92.C $(TRANSLATOR_EXECUTABLE)
#	$(VALGRIND) $(TEST_TRANSLATOR) -rose:verbose 2 -I$(srcdir)/pythonDir -c $(srcdir)/test2004_92.C 

#test2005_56.o: $(srcdir)/test2005_56.C
#	$(TEST_TRANSLATOR) -DTEST_STRING_MACRO=\""Thu Apr 14 08:18:33 PDT 2005"\" $(srcdir)/test2005_56.C -o test2005_56

# This code requires access to Python.h (in the $(srcdir)/pythonDir directory)
test2005_54.o: $(srcdir)/test2005_54.C 
	$(VALGRIND) $(TEST_TRANSLATOR) -I$(srcdir)/pythonDir -c $(srcdir)/test2005_54.C 

test2005_56.o:
	$(VALGRIND) $(TEST_TRANSLATOR) -DTEST_STRING_MACRO=\""Thu Apr 14 08:18:33 PDT 2005"\" $(srcdir)/test2005_56.C -o test2005_56

test2005_64.o:
	$(VALGRIND) $(TEST_TRANSLATOR) -fno-implicit-templates -c $(srcdir)/test2005_64.C

test2005_74_separateCompilation: test2005_74.o
	echo "Calling the linker: Directory information ..."
	ls -l
#	echo "Calling the linker: test2005_74.ti file ..."
#	cat test2005_74.ti
	echo "Calling the linker: call ROSE translator with *.o files ..."
	$(VALGRIND) $(TEST_TRANSLATOR) test2005_74.o -o test2005_74

test2005_74_singleCommandLine: $(srcdir)/test2005_74.C
	$(VALGRIND) $(TEST_TRANSLATOR) $(srcdir)/test2005_74.C

test2005_75a.C: test2005_75.h
test2005_75b.C: test2005_75.h
test2005_75: test2005_75a.o test2005_75b.o
#	echo "Testing multiple file linking: call ROSE translator with *.o files ..."
#	$(VALGRIND) $(TEST_TRANSLATOR) -rose:verbose 0 -I$(srcdir) test2005_75a.o test2005_75b.o -o test2005_75
	$(VALGRIND) $(TEST_TRANSLATOR) -I$(srcdir) test2005_75a.o test2005_75b.o -o test2005_75

test2005_136: test2005_136.o
	echo "Testing template linking: call ROSE translator with *.o files ..."
	$(VALGRIND) $(TEST_TRANSLATOR) -I$(srcdir) test2005_136.o

test2005_137: test2005_137.o
	echo "Testing template linking: call ROSE translator with *.o files ..."
	$(VALGRIND) $(TEST_TRANSLATOR) -I$(srcdir) test2005_137.o

test2005_138: test2005_138.o
	echo "Testing template linking: call ROSE translator with *.o files ..."
	$(VALGRIND) $(TEST_TRANSLATOR) -I$(srcdir) test2005_138.o

test2005_140: $(srcdir)/test2005_140.C
	echo "Testing compiling using g++ option: -fno-implicit-templates ..."
	$(VALGRIND) $(TEST_TRANSLATOR) -fno-implicit-templates -I$(srcdir) -c $(srcdir)/test2005_140.C -o test2005_140.o
	echo "Testing template linking: call ROSE to compile and link ..."
	$(VALGRIND) $(TEST_TRANSLATOR) -I$(srcdir) test2005_140.o -o test2005_140

# This C program must be called externally to the test codes in the "TESTCODES" make variable
test2005_168.o: $(srcdir)/test2005_168.c
	$(VALGRIND) $(TEST_TRANSLATOR) -rose:C_only -rose:verbose 0 -c -I$(top_srcdir)/src/util/commandlineProcessing $(srcdir)/test2005_168.c

# Test for Old-Style C function definitions
test2005_172.o: $(srcdir)/test2005_172.c
	@echo "Test for C_only bugs must use *.c suffix instead of *.C suffix (reported by Kyle)"
	rm -f test2005_172
	@echo "Building executable from C source code directly"
	$(VALGRIND) $(TEST_TRANSLATOR) -rose:verbose 0 $(C_ONLY) $(srcdir)/test2005_172.c -o test2005_172
	rm -f test2005_172.o
	@echo "Building object file only (for later linking step)"
	$(VALGRIND) $(TEST_TRANSLATOR) -rose:verbose 0 $(C_ONLY) -c $(srcdir)/test2005_172.c
	rm -f test2005_172
	@echo "Linking previously build object file to buld executable"
	$(VALGRIND) $(TEST_TRANSLATOR) -rose:verbose 0 $(C_ONLY) test2005_172.o -o test2005_172

test_CplusplusMacro_Cpp.o:
	$(TEST_TRANSLATOR) -c $(srcdir)/test_CplusplusMacro_Cpp.C

test_CplusplusMacro_C.o:
	$(TEST_TRANSLATOR) -rose:C_only -c $(srcdir)/test_CplusplusMacro_C.C

templateTests: test2005_73.o test2005_74_separateCompilation test2005_74_singleCommandLine test2005_75 test2005_77.o

testSTLLink: $(srcdir)/test2005_82.C
	$(VALGRIND) $(TEST_TRANSLATOR) $(srcdir)/test2005_82.C -o test2005_82

testLinkTemplate: $(srcdir)/test2005_88.C
	$(VALGRIND) $(TEST_TRANSLATOR) $(srcdir)/test2005_88.C -o test2005_88

stdio_Cpp.o:
	$(TEST_TRANSLATOR) -rose:verbose 0 -I$(srcdir) -c $(srcdir)/stdio.c

stdio_C.o:
	$(TEST_TRANSLATOR) -rose:verbose 0 -rose:C -I$(srcdir) -c $(srcdir)/stdio.c

stdio_C99.o:
	$(TEST_TRANSLATOR) -rose:verbose 0 -rose:C99_only -I$(srcdir) -c $(srcdir)/stdio.c

gconv_info_Cpp.o:
	$(TEST_TRANSLATOR) -rose:verbose 0 -c -I$(srcdir) $(srcdir)/gconv_info.c

gconv_info_C.o:
	$(TEST_TRANSLATOR) -rose:verbose 0 -rose:C_only -c -I$(srcdir) $(srcdir)/gconv_info.c

gconv_info_C99.o:
	$(TEST_TRANSLATOR) -rose:verbose 0 -rose:C99_only -c -I$(srcdir) $(srcdir)/gconv_info.c

# check-local:
#	@echo "ROSE Test Codes."
#  Run this test explicitly since it has to be run using a specific rule and can't be lumped with the rest
#	@$(MAKE) test2004_21.o
#	@$(MAKE) test2004_22.o
#	@$(MAKE) test2004_30.o
#	@$(MAKE) test2004_41.o
#	@$(MAKE) $(TEST_Objects)

$(TEST_Objects): $(TESTCODES)
	$(TEST_TRANSLATOR) $(AM_CPPFLAGS) $(TESTCODE_INCLUDES) -c $(srcdir)/$(@:.o=.C)

EXTRA_DIST = \
     confdefs.h test2001_05.h  test2001_15.h  test2001_18A.h  test2001_18B.h \
     test2003_08.h test2004_40.h test2005_26.h test2005_157.h test2005_158.h test2005_159.h \
     test2005_160.h test2004_19.C test2004_21.c test2004_22.C test2005_56.C test2005_88.h test2005_133.h \
     test2005_75.h foo.h test2005_168.c test2005_172.c test_CplusplusMacro_Cpp.C test_CplusplusMacro_C.C \
     gconv_info.c stdio.c $(TESTCODES)

clean-local:
	rm -f *.o rose_*.C rose_*.c *.sage.C test2001_??.C.show *.dot *.ps \
              *.C.pdf *.C.edg.pdf *.pdf *.int.C core test2005_56 test2005_172
	rm -rf ti_files *.ti *.et

check-local: $(TRANSLATOR_EXECUTABLE) test2004_19.o test2004_21.o test2004_22.o test2005_56.o
	@$(MAKE) test2004_21.o
	@$(MAKE) test2005_168.o
	@$(MAKE) test2005_172.o
	@$(MAKE) gconv_info_Cpp.o
	@$(MAKE) gconv_info_C.o
	@$(MAKE) gconv_info_C99.o
	@$(MAKE) stdio_Cpp.o
	@$(MAKE) stdio_C.o
	@$(MAKE) stdio_C99.o
	@$(MAKE) test_CplusplusMacro_C.o
	@$(MAKE) test_CplusplusMacro_Cpp.o
	@$(MAKE) $(TEST_Objects)
	@echo "*********************************************************************************************"
	@echo "****** ROSE/tests/CompileTests/C++Code: make check rule complete (terminated normally) ******"
	@echo "*********************************************************************************************"










